mads 2.1.5
  1142 					opt l+
   106 = 0000				?EXTDETECT = 0
   107 = 0000				?VBXDETECT = 0
   108
   109 2075				RCDATA 'res/board.fnt' BOARD_GFX 0 0 0 0 0 0 0 0
Macro: RESOURCE.RCDATA [Source: resource.asm]
     2 = 0400			len = .filesize('res/board.fnt')-0
    28 2075				org main.BOARD_GFX
    30 9C00-9FFF> 00 00 00 00 + 	ins 'res/board.fnt',0
    32 					.print '$R RCDATA  ',main.BOARD_GFX,'..',*-1," 'res/board.fnt'"
    32 				$R RCDATA  $9C00..$9FFF 'res/board.fnt'
Source: main.a65
   110 A000				MPTPLAY '' MPT_PLAYER 0 0 0 0 0 0 0 0
Macro: RESOURCE.MPTPLAY [Source: resource.asm]
     2 A000				org RESORIGIN
     4 = 04A9			len = .sizeof(_MPT_PLAYER)
     6 				mcpy	ift main.MPT_PLAYER+len >= $bc20
    11 2075-253E> 20 41 20		jsr sys.off
    13 2078 A9 96 85 88 A9 20 +  MWA #DATA EDX
    13 2080 A9 00 85 8C A9 A0 +  MWA #MAIN.MPT_PLAYER ECX
    13 2088 A9 A9 85 84 A9 04 +  MWA #LEN EAX
    13 2090 20 00 20		 JSR RESOURCE.MEMCPY
    15 2093 4C 65 20			jmp sys.on
    16 2096			data
    23 					.print '$R MPTPLAY ',main.MPT_PLAYER,'..',main.MPT_PLAYER+$049e
    23 				$R MPTPLAY $A000..$A49E
    25 02E2-02E3> 75 20			ini mcpy
Source: main.a65
   111 253F				MPT 'res/porazka.mpt' MPT_MODUL 0 0 0 0 0 0 0 0
Macro: RESOURCE.MPT [Source: resource.asm]
     2 = 0CE0			len = .filesize('res/porazka.mpt')
    17 253F				org main.MPT_MODUL
     2 A500				.get 'res/porazka.mpt'					// wczytujemy plik do bufora MADS'a
     8 = A500			new_add	= MAIN.MPT_MODUL					// nowy adres dla modulu MPT
    10 = 5000			old_add	= .get[2] + .get[3]<<8			// stary adres modulu MPT
    12 = 0CDA			length	= .get[4] + .get[5]<<8 - old_add + 1	// dlugosc pliku MPT bez naglowka DOS'u
    14  [0002] 00			.put[2] = .lo(new_add)			// poprawiamy naglowek DOS'a
    15  [0003] A5			.put[3] = .hi(new_add)			// tak aby zawieral informacje o nowym
    17  [0004] D9			.put[4] = .lo(new_add + length - 1)	// adresie modulu MPT
    18  [0005] B1			.put[5] = .hi(new_add + length - 1)
    20 = 0006			ofs	= 6
    28 = 53DA				?TMP = .GET[OFS+#*2] + .GET[OFS+#*2+1]<<8
    28 = A8DA				?HLP = ?TMP - OLD_ADD + NEW_ADD
    28  [0006] DA			.PUT[OFS+#*2]   = .LO(?HLP)
    28  [0007] A8			.PUT[OFS+#*2+1] = .HI(?HLP)
    28 = 540A				?TMP = .GET[OFS+#*2] + .GET[OFS+#*2+1]<<8
    28 = A90A				?HLP = ?TMP - OLD_ADD + NEW_ADD
    28  [0008] 0A			.PUT[OFS+#*2]   = .LO(?HLP)
    28  [0009] A9			.PUT[OFS+#*2+1] = .HI(?HLP)
    28 = 543A				?TMP = .GET[OFS+#*2] + .GET[OFS+#*2+1]<<8
    28 = A93A				?HLP = ?TMP - OLD_ADD + NEW_ADD
    28  [000A] 3A			.PUT[OFS+#*2]   = .LO(?HLP)
    28  [000B] A9			.PUT[OFS+#*2+1] = .HI(?HLP)
    28 = 546A				?TMP = .GET[OFS+#*2] + .GET[OFS+#*2+1]<<8
    28 = A96A				?HLP = ?TMP - OLD_ADD + NEW_ADD
    28  [000C] 6A			.PUT[OFS+#*2]   = .LO(?HLP)
    28  [000D] A9			.PUT[OFS+#*2+1] = .HI(?HLP)
    28 = 549A				?TMP = .GET[OFS+#*2] + .GET[OFS+#*2+1]<<8
    28 = A99A				?HLP = ?TMP - OLD_ADD + NEW_ADD
    28  [000E] 9A			.PUT[OFS+#*2]   = .LO(?HLP)
    28  [000F] A9			.PUT[OFS+#*2+1] = .HI(?HLP)
    28 = 54CA				?TMP = .GET[OFS+#*2] + .GET[OFS+#*2+1]<<8
    28 = A9CA				?HLP = ?TMP - OLD_ADD + NEW_ADD
    28  [0010] CA			.PUT[OFS+#*2]   = .LO(?HLP)
    28  [0011] A9			.PUT[OFS+#*2+1] = .HI(?HLP)
    28 = 54FA				?TMP = .GET[OFS+#*2] + .GET[OFS+#*2+1]<<8
    28 = A9FA				?HLP = ?TMP - OLD_ADD + NEW_ADD
    28  [0012] FA			.PUT[OFS+#*2]   = .LO(?HLP)
    28  [0013] A9			.PUT[OFS+#*2+1] = .HI(?HLP)
    28 = 552A				?TMP = .GET[OFS+#*2] + .GET[OFS+#*2+1]<<8
    28 = AA2A				?HLP = ?TMP - OLD_ADD + NEW_ADD
    28  [0014] 2A			.PUT[OFS+#*2]   = .LO(?HLP)
    28  [0015] AA			.PUT[OFS+#*2+1] = .HI(?HLP)
    28 = 555A				?TMP = .GET[OFS+#*2] + .GET[OFS+#*2+1]<<8
    28 = AA5A				?HLP = ?TMP - OLD_ADD + NEW_ADD
    28  [0016] 5A			.PUT[OFS+#*2]   = .LO(?HLP)
    28  [0017] AA			.PUT[OFS+#*2+1] = .HI(?HLP)
    28 = 558A				?TMP = .GET[OFS+#*2] + .GET[OFS+#*2+1]<<8
    28 = AA8A				?HLP = ?TMP - OLD_ADD + NEW_ADD
    28  [0018] 8A			.PUT[OFS+#*2]   = .LO(?HLP)
    28  [0019] AA			.PUT[OFS+#*2+1] = .HI(?HLP)
    28 = 55BA				?TMP = .GET[OFS+#*2] + .GET[OFS+#*2+1]<<8
    28 = AABA				?HLP = ?TMP - OLD_ADD + NEW_ADD
    28  [001A] BA			.PUT[OFS+#*2]   = .LO(?HLP)
    28  [001B] AA			.PUT[OFS+#*2+1] = .HI(?HLP)
    28 = 55EA				?TMP = .GET[OFS+#*2] + .GET[OFS+#*2+1]<<8
    28 = AAEA				?HLP = ?TMP - OLD_ADD + NEW_ADD
    28  [001C] EA			.PUT[OFS+#*2]   = .LO(?HLP)
    28  [001D] AA			.PUT[OFS+#*2+1] = .HI(?HLP)
    28 = 561A				?TMP = .GET[OFS+#*2] + .GET[OFS+#*2+1]<<8
    28 = AB1A				?HLP = ?TMP - OLD_ADD + NEW_ADD
    28  [001E] 1A			.PUT[OFS+#*2]   = .LO(?HLP)
    28  [001F] AB			.PUT[OFS+#*2+1] = .HI(?HLP)
    28 = 564A				?TMP = .GET[OFS+#*2] + .GET[OFS+#*2+1]<<8
    28 = AB4A				?HLP = ?TMP - OLD_ADD + NEW_ADD
    28  [0020] 4A			.PUT[OFS+#*2]   = .LO(?HLP)
    28  [0021] AB			.PUT[OFS+#*2+1] = .HI(?HLP)
    28 = 567A				?TMP = .GET[OFS+#*2] + .GET[OFS+#*2+1]<<8
    28 = AB7A				?HLP = ?TMP - OLD_ADD + NEW_ADD
    28  [0022] 7A			.PUT[OFS+#*2]   = .LO(?HLP)
    28  [0023] AB			.PUT[OFS+#*2+1] = .HI(?HLP)
    28 = 56AA				?TMP = .GET[OFS+#*2] + .GET[OFS+#*2+1]<<8
    28 = ABAA				?HLP = ?TMP - OLD_ADD + NEW_ADD
    28  [0024] AA			.PUT[OFS+#*2]   = .LO(?HLP)
    28  [0025] AB			.PUT[OFS+#*2+1] = .HI(?HLP)
    28 = 56DA				?TMP = .GET[OFS+#*2] + .GET[OFS+#*2+1]<<8
    28 = ABDA				?HLP = ?TMP - OLD_ADD + NEW_ADD
    28  [0026] DA			.PUT[OFS+#*2]   = .LO(?HLP)
    28  [0027] AB			.PUT[OFS+#*2+1] = .HI(?HLP)
    28 = 570A				?TMP = .GET[OFS+#*2] + .GET[OFS+#*2+1]<<8
    28 = AC0A				?HLP = ?TMP - OLD_ADD + NEW_ADD
    28  [0028] 0A			.PUT[OFS+#*2]   = .LO(?HLP)
    28  [0029] AC			.PUT[OFS+#*2+1] = .HI(?HLP)
    28 = 573A				?TMP = .GET[OFS+#*2] + .GET[OFS+#*2+1]<<8
    28 = AC3A				?HLP = ?TMP - OLD_ADD + NEW_ADD
    28  [002A] 3A			.PUT[OFS+#*2]   = .LO(?HLP)
    28  [002B] AC			.PUT[OFS+#*2+1] = .HI(?HLP)
    28 = 576A				?TMP = .GET[OFS+#*2] + .GET[OFS+#*2+1]<<8
    28 = AC6A				?HLP = ?TMP - OLD_ADD + NEW_ADD
    28  [002C] 6A			.PUT[OFS+#*2]   = .LO(?HLP)
    28  [002D] AC			.PUT[OFS+#*2+1] = .HI(?HLP)
    28 = 579A				?TMP = .GET[OFS+#*2] + .GET[OFS+#*2+1]<<8
    28 = AC9A				?HLP = ?TMP - OLD_ADD + NEW_ADD
    28  [002E] 9A			.PUT[OFS+#*2]   = .LO(?HLP)
    28  [002F] AC			.PUT[OFS+#*2+1] = .HI(?HLP)
    28 = 57CA				?TMP = .GET[OFS+#*2] + .GET[OFS+#*2+1]<<8
    28 = ACCA				?HLP = ?TMP - OLD_ADD + NEW_ADD
    28  [0030] CA			.PUT[OFS+#*2]   = .LO(?HLP)
    28  [0031] AC			.PUT[OFS+#*2+1] = .HI(?HLP)
    28 = 57FA				?TMP = .GET[OFS+#*2] + .GET[OFS+#*2+1]<<8
    28 = ACFA				?HLP = ?TMP - OLD_ADD + NEW_ADD
    28  [0032] FA			.PUT[OFS+#*2]   = .LO(?HLP)
    28  [0033] AC			.PUT[OFS+#*2+1] = .HI(?HLP)
    28 = 582A				?TMP = .GET[OFS+#*2] + .GET[OFS+#*2+1]<<8
    28 = AD2A				?HLP = ?TMP - OLD_ADD + NEW_ADD
    28  [0034] 2A			.PUT[OFS+#*2]   = .LO(?HLP)
    28  [0035] AD			.PUT[OFS+#*2+1] = .HI(?HLP)
    28 = 585A				?TMP = .GET[OFS+#*2] + .GET[OFS+#*2+1]<<8
    28 = AD5A				?HLP = ?TMP - OLD_ADD + NEW_ADD
    28  [0036] 5A			.PUT[OFS+#*2]   = .LO(?HLP)
    28  [0037] AD			.PUT[OFS+#*2+1] = .HI(?HLP)
    28 = 588A				?TMP = .GET[OFS+#*2] + .GET[OFS+#*2+1]<<8
    28 = AD8A				?HLP = ?TMP - OLD_ADD + NEW_ADD
    28  [0038] 8A			.PUT[OFS+#*2]   = .LO(?HLP)
    28  [0039] AD			.PUT[OFS+#*2+1] = .HI(?HLP)
    28 = 58BA				?TMP = .GET[OFS+#*2] + .GET[OFS+#*2+1]<<8
    28 = ADBA				?HLP = ?TMP - OLD_ADD + NEW_ADD
    28  [003A] BA			.PUT[OFS+#*2]   = .LO(?HLP)
    28  [003B] AD			.PUT[OFS+#*2+1] = .HI(?HLP)
    28 = 0000				?TMP = .GET[OFS+#*2] + .GET[OFS+#*2+1]<<8
    28 = 0000				?TMP = .GET[OFS+#*2] + .GET[OFS+#*2+1]<<8
    28 = 58EA				?TMP = .GET[OFS+#*2] + .GET[OFS+#*2+1]<<8
    28 = ADEA				?HLP = ?TMP - OLD_ADD + NEW_ADD
    28  [0040] EA			.PUT[OFS+#*2]   = .LO(?HLP)
    28  [0041] AD			.PUT[OFS+#*2+1] = .HI(?HLP)
    28 = 591A				?TMP = .GET[OFS+#*2] + .GET[OFS+#*2+1]<<8
    28 = AE1A				?HLP = ?TMP - OLD_ADD + NEW_ADD
    28  [0042] 1A			.PUT[OFS+#*2]   = .LO(?HLP)
    28  [0043] AE			.PUT[OFS+#*2+1] = .HI(?HLP)
    28 = 0000				?TMP = .GET[OFS+#*2] + .GET[OFS+#*2+1]<<8
    43 = 594A				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = AE4A				?HLP = ?TMP - OLD_ADD + NEW_ADD
    43  [0046] 4A			.PUT[OFS+$40+#*2]   = .LO(?HLP)
    43  [0047] AE			.PUT[OFS+$40+#*2+1] = .HI(?HLP)
    43 = 594D				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = AE4D				?HLP = ?TMP - OLD_ADD + NEW_ADD
    43  [0048] 4D			.PUT[OFS+$40+#*2]   = .LO(?HLP)
    43  [0049] AE			.PUT[OFS+$40+#*2+1] = .HI(?HLP)
    43 = 595F				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = AE5F				?HLP = ?TMP - OLD_ADD + NEW_ADD
    43  [004A] 5F			.PUT[OFS+$40+#*2]   = .LO(?HLP)
    43  [004B] AE			.PUT[OFS+$40+#*2+1] = .HI(?HLP)
    43 = 597B				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = AE7B				?HLP = ?TMP - OLD_ADD + NEW_ADD
    43  [004C] 7B			.PUT[OFS+$40+#*2]   = .LO(?HLP)
    43  [004D] AE			.PUT[OFS+$40+#*2+1] = .HI(?HLP)
    43 = 5997				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = AE97				?HLP = ?TMP - OLD_ADD + NEW_ADD
    43  [004E] 97			.PUT[OFS+$40+#*2]   = .LO(?HLP)
    43  [004F] AE			.PUT[OFS+$40+#*2+1] = .HI(?HLP)
    43 = 59BF				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = AEBF				?HLP = ?TMP - OLD_ADD + NEW_ADD
    43  [0050] BF			.PUT[OFS+$40+#*2]   = .LO(?HLP)
    43  [0051] AE			.PUT[OFS+$40+#*2+1] = .HI(?HLP)
    43 = 59D1				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = AED1				?HLP = ?TMP - OLD_ADD + NEW_ADD
    43  [0052] D1			.PUT[OFS+$40+#*2]   = .LO(?HLP)
    43  [0053] AE			.PUT[OFS+$40+#*2+1] = .HI(?HLP)
    43 = 59ED				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = AEED				?HLP = ?TMP - OLD_ADD + NEW_ADD
    43  [0054] ED			.PUT[OFS+$40+#*2]   = .LO(?HLP)
    43  [0055] AE			.PUT[OFS+$40+#*2+1] = .HI(?HLP)
    43 = 5A07				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = AF07				?HLP = ?TMP - OLD_ADD + NEW_ADD
    43  [0056] 07			.PUT[OFS+$40+#*2]   = .LO(?HLP)
    43  [0057] AF			.PUT[OFS+$40+#*2+1] = .HI(?HLP)
    43 = 5A2A				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = AF2A				?HLP = ?TMP - OLD_ADD + NEW_ADD
    43  [0058] 2A			.PUT[OFS+$40+#*2]   = .LO(?HLP)
    43  [0059] AF			.PUT[OFS+$40+#*2+1] = .HI(?HLP)
    43 = 5A48				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = AF48				?HLP = ?TMP - OLD_ADD + NEW_ADD
    43  [005A] 48			.PUT[OFS+$40+#*2]   = .LO(?HLP)
    43  [005B] AF			.PUT[OFS+$40+#*2+1] = .HI(?HLP)
    43 = 5A4B				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = AF4B				?HLP = ?TMP - OLD_ADD + NEW_ADD
    43  [005C] 4B			.PUT[OFS+$40+#*2]   = .LO(?HLP)
    43  [005D] AF			.PUT[OFS+$40+#*2+1] = .HI(?HLP)
    43 = 5A5F				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = AF5F				?HLP = ?TMP - OLD_ADD + NEW_ADD
    43  [005E] 5F			.PUT[OFS+$40+#*2]   = .LO(?HLP)
    43  [005F] AF			.PUT[OFS+$40+#*2+1] = .HI(?HLP)
    43 = 5A77				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = AF77				?HLP = ?TMP - OLD_ADD + NEW_ADD
    43  [0060] 77			.PUT[OFS+$40+#*2]   = .LO(?HLP)
    43  [0061] AF			.PUT[OFS+$40+#*2+1] = .HI(?HLP)
    43 = 5A8B				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = AF8B				?HLP = ?TMP - OLD_ADD + NEW_ADD
    43  [0062] 8B			.PUT[OFS+$40+#*2]   = .LO(?HLP)
    43  [0063] AF			.PUT[OFS+$40+#*2+1] = .HI(?HLP)
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = 5A8E				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = AF8E				?HLP = ?TMP - OLD_ADD + NEW_ADD
    43  [0066] 8E			.PUT[OFS+$40+#*2]   = .LO(?HLP)
    43  [0067] AF			.PUT[OFS+$40+#*2+1] = .HI(?HLP)
    43 = 5AA9				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = AFA9				?HLP = ?TMP - OLD_ADD + NEW_ADD
    43  [0068] A9			.PUT[OFS+$40+#*2]   = .LO(?HLP)
    43  [0069] AF			.PUT[OFS+$40+#*2+1] = .HI(?HLP)
    43 = 5ADD				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = AFDD				?HLP = ?TMP - OLD_ADD + NEW_ADD
    43  [006A] DD			.PUT[OFS+$40+#*2]   = .LO(?HLP)
    43  [006B] AF			.PUT[OFS+$40+#*2+1] = .HI(?HLP)
    43 = 5AF9				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = AFF9				?HLP = ?TMP - OLD_ADD + NEW_ADD
    43  [006C] F9			.PUT[OFS+$40+#*2]   = .LO(?HLP)
    43  [006D] AF			.PUT[OFS+$40+#*2+1] = .HI(?HLP)
    43 = 5AFF				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = AFFF				?HLP = ?TMP - OLD_ADD + NEW_ADD
    43  [006E] FF			.PUT[OFS+$40+#*2]   = .LO(?HLP)
    43  [006F] AF			.PUT[OFS+$40+#*2+1] = .HI(?HLP)
    43 = 5B16				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = B016				?HLP = ?TMP - OLD_ADD + NEW_ADD
    43  [0070] 16			.PUT[OFS+$40+#*2]   = .LO(?HLP)
    43  [0071] B0			.PUT[OFS+$40+#*2+1] = .HI(?HLP)
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = 5B1C				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = B01C				?HLP = ?TMP - OLD_ADD + NEW_ADD
    43  [0074] 1C			.PUT[OFS+$40+#*2]   = .LO(?HLP)
    43  [0075] B0			.PUT[OFS+$40+#*2+1] = .HI(?HLP)
    43 = 5B3E				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = B03E				?HLP = ?TMP - OLD_ADD + NEW_ADD
    43  [0076] 3E			.PUT[OFS+$40+#*2]   = .LO(?HLP)
    43  [0077] B0			.PUT[OFS+$40+#*2+1] = .HI(?HLP)
    43 = 5B60				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = B060				?HLP = ?TMP - OLD_ADD + NEW_ADD
    43  [0078] 60			.PUT[OFS+$40+#*2]   = .LO(?HLP)
    43  [0079] B0			.PUT[OFS+$40+#*2+1] = .HI(?HLP)
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = 5BA1				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = B0A1				?HLP = ?TMP - OLD_ADD + NEW_ADD
    43  [007C] A1			.PUT[OFS+$40+#*2]   = .LO(?HLP)
    43  [007D] B0			.PUT[OFS+$40+#*2+1] = .HI(?HLP)
    43 = 5BD5				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = B0D5				?HLP = ?TMP - OLD_ADD + NEW_ADD
    43  [007E] D5			.PUT[OFS+$40+#*2]   = .LO(?HLP)
    43  [007F] B0			.PUT[OFS+$40+#*2+1] = .HI(?HLP)
    43 = 5C09				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = B109				?HLP = ?TMP - OLD_ADD + NEW_ADD
    43  [0080] 09			.PUT[OFS+$40+#*2]   = .LO(?HLP)
    43  [0081] B1			.PUT[OFS+$40+#*2+1] = .HI(?HLP)
    43 = 5C25				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = B125				?HLP = ?TMP - OLD_ADD + NEW_ADD
    43  [0082] 25			.PUT[OFS+$40+#*2]   = .LO(?HLP)
    43  [0083] B1			.PUT[OFS+$40+#*2+1] = .HI(?HLP)
    43 = 5C41				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = B141				?HLP = ?TMP - OLD_ADD + NEW_ADD
    43  [0084] 41			.PUT[OFS+$40+#*2]   = .LO(?HLP)
    43  [0085] B1			.PUT[OFS+$40+#*2+1] = .HI(?HLP)
    43 = 5C82				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = B182				?HLP = ?TMP - OLD_ADD + NEW_ADD
    43  [0086] 82			.PUT[OFS+$40+#*2]   = .LO(?HLP)
    43  [0087] B1			.PUT[OFS+$40+#*2+1] = .HI(?HLP)
    43 = 5C99				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = B199				?HLP = ?TMP - OLD_ADD + NEW_ADD
    43  [0088] 99			.PUT[OFS+$40+#*2]   = .LO(?HLP)
    43  [0089] B1			.PUT[OFS+$40+#*2+1] = .HI(?HLP)
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    43 = 0000				?TMP = .GET[OFS+$40+#*2] + .GET[OFS+$40+#*2+1]<<8
    58 = 51CA				?TMP = .GET[OFS+$1C0+#] + .GET[OFS+$1C4+#]<<8
    58 = A6CA				?HLP = ?TMP - OLD_ADD + NEW_ADD
    58  [01C6] CA			.PUT[OFS+$1C0+#] = .LO(?HLP)
    58  [01CA] A6			.PUT[OFS+$1C4+#] = .HI(?HLP)
    58 = 524E				?TMP = .GET[OFS+$1C0+#] + .GET[OFS+$1C4+#]<<8
    58 = A74E				?HLP = ?TMP - OLD_ADD + NEW_ADD
    58  [01C7] 4E			.PUT[OFS+$1C0+#] = .LO(?HLP)
    58  [01CB] A7			.PUT[OFS+$1C4+#] = .HI(?HLP)
    58 = 52D2				?TMP = .GET[OFS+$1C0+#] + .GET[OFS+$1C4+#]<<8
    58 = A7D2				?HLP = ?TMP - OLD_ADD + NEW_ADD
    58  [01C8] D2			.PUT[OFS+$1C0+#] = .LO(?HLP)
    58  [01CC] A7			.PUT[OFS+$1C4+#] = .HI(?HLP)
    58 = 5356				?TMP = .GET[OFS+$1C0+#] + .GET[OFS+$1C4+#]<<8
    58 = A856				?HLP = ?TMP - OLD_ADD + NEW_ADD
    58  [01C9] 56			.PUT[OFS+$1C0+#] = .LO(?HLP)
    58  [01CD] A8			.PUT[OFS+$1C4+#] = .HI(?HLP)
    20 					.print '$R MPT     ',main.MPT_MODUL,'..',main.MPT_MODUL+len-6," 'res/porazka.mpt'"
    20 				$R MPT     $A500..$B1DA 'res/porazka.mpt'
Source: main.a65
   112 				.endl
   113
   114 				; ------------------------------------------------------------
   115
   116 B1DA				org CODEORIGIN
   117
   118 2000				STATICDATA
Macro: STATICDATA [Source: main.a65]
     1 2000-44EA> 42 08 08 23 + .by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $20 $2E $23  $23 $23 $23 $23 $23 $20 $20 $23
     2 2018 23 23 23 23 23 2A + .by  $23 $23 $23 $23 $23 $2A $40 $20  $20 $23 $23 $23 $23 $20 $20 $24  $20 $23 $23 $23 $23 $20 $20 $23
     3 2030 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
     4 2048 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $20 $20 $20 $20 $23 $23 $23  $23 $20 $23 $40 $20 $23 $23 $23
     5 2060 23 20 24 2A 20 23 + .by  $23 $20 $24 $2A $20 $23 $23 $23  $23 $20 $2E $2A $20 $23 $23 $23  $23 $20 $20 $20 $20 $23 $23 $23
     6 2078 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
     7 2090 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $20 $20 $20 $20  $20 $20 $23 $23 $20 $2E $2A $2A
     8 20A8 24 40 23 23 20 20 + .by  $24 $40 $23 $23 $20 $20 $20 $20  $20 $20 $23 $23 $23 $23 $23 $23  $20 $20 $23 $23 $23 $23 $23 $23
     9 20C0 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
    10 20D8 23 20 20 20 20 20 + .by  $23 $20 $20 $20 $20 $20 $23 $23  $23 $20 $2E $24 $2E $20 $23 $23  $23 $20 $24 $40 $24 $20 $23 $23
    11 20F0 20 20 2E 24 2E 20 + .by  $20 $20 $2E $24 $2E $20 $23 $23  $20 $20 $20 $20 $20 $20 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
    12 2108 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $20 $20 $20 $20
    13 2120 20 23 23 23 20 2E + .by  $20 $23 $23 $23 $20 $2E $24 $2E  $20 $23 $23 $23 $20 $24 $2E $24  $20 $23 $23 $23 $20 $2E $24 $2E
    14 2138 20 23 23 23 20 24 + .by  $20 $23 $23 $23 $20 $24 $2E $24  $20 $23 $23 $23 $20 $20 $40 $20  $20 $23 $23 $23 $23 $23 $23 $23
    15 2150 23 23 23 00 42 08 + .by  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $2E $20 $20 $23 $23 $23 $23
    16 2168 23 40 24 24 20 23 + .by  $23 $40 $24 $24 $20 $23 $23 $23  $23 $23 $20 $20 $20 $23 $23 $23  $23 $23 $23 $20 $20 $23 $23 $23
    17 2180 23 23 23 23 2E 23 + .by  $23 $23 $23 $23 $2E $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00
    18 2198 42 08 08 23 23 23 + .by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $20 $20 $20 $20
    19 21B0 20 23 23 23 20 23 + .by  $20 $23 $23 $23 $20 $23 $20 $23  $20 $23 $23 $23 $2E $20 $24 $2A  $40 $23 $23 $23 $20 $20 $20 $23
    20 21C8 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
    21 21E0 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $20 $40 $20 $23 $23 $23 $23  $23 $2E $2E $2E $23 $23 $23 $23
    22 21F8 23 24 24 24 23 23 + .by  $23 $24 $24 $24 $23 $23 $23 $23  $23 $20 $20 $20 $20 $23 $23 $23  $23 $20 $20 $20 $20 $23 $23 $23
    23 2210 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
    24 2228 23 23 23 23 20 20 + .by  $23 $23 $23 $23 $20 $20 $20 $2E  $2E $20 $23 $23 $20 $20 $40 $24  $24 $20 $23 $23 $23 $23 $23 $23
    25 2240 20 23 23 23 23 23 + .by  $20 $23 $23 $23 $23 $23 $23 $20  $20 $23 $23 $23 $23 $23 $23 $20  $20 $23 $23 $23 $23 $23 $23 $20
    26 2258 20 23 23 23 23 23 + .by  $20 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
    27 2270 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $23 $23 $23 $23 $23 $23  $20 $2E $20 $2E $20 $23 $23 $23
    28 2288 20 24 24 23 40 23 + .by  $20 $24 $24 $23 $40 $23 $23 $23  $23 $20 $20 $20 $20 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
    29 22A0 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $20 $20 $2A $20
    30 22B8 20 23 23 23 20 20 + .by  $20 $23 $23 $23 $20 $20 $20 $20  $20 $23 $23 $23 $23 $20 $23 $20  $23 $23 $23 $23 $23 $24 $40 $2E
    31 22D0 23 23 23 23 23 20 + .by  $23 $23 $23 $23 $23 $20 $20 $20  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
    32 22E8 23 23 23 00 42 08 + .by  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $20 $20 $20 $23 $23 $23
    33 2300 23 23 24 24 40 23 + .by  $23 $23 $24 $24 $40 $23 $23 $23  $20 $20 $20 $23 $23 $23 $23 $23  $20 $20 $20 $20 $20 $23 $23 $23
    34 2318 20 2E 20 2E 20 23 + .by  $20 $2E $20 $2E $20 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00
    35 2330 42 08 08 23 23 23 + .by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $20 $20 $23  $23 $23 $23 $23 $23 $20 $24 $24
    36 2348 20 23 23 23 23 2E + .by  $20 $23 $23 $23 $23 $2E $2E $2E  $20 $23 $23 $23 $20 $20 $40 $24  $20 $23 $23 $23 $20 $20 $20 $23
    37 2360 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
    38 2378 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $20 $40 $20 $23 $23 $23  $23 $23 $20 $20 $20 $23 $23 $23
    39 2390 23 23 23 24 20 23 + .by  $23 $23 $23 $24 $20 $23 $23 $23  $23 $20 $2E $2E $2E $23 $23 $23  $23 $20 $24 $24 $20 $23 $23 $23
    40 23A8 23 23 23 20 20 23 + .by  $23 $23 $23 $20 $20 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
    41 23C0 23 23 23 23 20 20 + .by  $23 $23 $23 $23 $20 $20 $20 $2E  $23 $23 $23 $23 $20 $23 $23 $20  $23 $23 $23 $23 $20 $20 $24 $24
    42 23D8 40 23 23 23 20 23 + .by  $40 $23 $23 $23 $20 $23 $20 $20  $20 $23 $23 $23 $2E $20 $20 $23  $23 $23 $23 $23 $23 $23 $23 $23
    43 23F0 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
    44 2408 20 20 20 23 23 23 + .by  $20 $20 $20 $23 $23 $23 $23 $23  $20 $40 $20 $23 $23 $23 $23 $23  $20 $24 $24 $23 $23 $23 $23 $23
    45 2420 23 2E 20 2E 20 23 + .by  $23 $2E $20 $2E $20 $23 $23 $23  $23 $20 $20 $20 $20 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
    46 2438 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $20 $20 $23
    47 2450 23 23 23 23 23 20 + .by  $23 $23 $23 $23 $23 $20 $24 $24  $20 $23 $23 $23 $23 $2E $2E $2E  $20 $23 $23 $23 $23 $20 $40 $24
    48 2468 20 23 23 23 23 20 + .by  $20 $23 $23 $23 $23 $20 $20 $20  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
    49 2480 23 23 23 00 42 08 + .by  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $20 $20 $23 $23 $23 $23
    50 2498 23 40 24 2E 23 23 + .by  $23 $40 $24 $2E $23 $23 $23 $23  $20 $24 $24 $20 $20 $23 $23 $23  $20 $2E $20 $2E $20 $23 $23 $23
    51 24B0 23 23 20 20 20 23 + .by  $23 $23 $20 $20 $20 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00
    52 24C8 42 08 08 23 23 23 + .by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $20 $20 $23  $23 $23 $23 $23 $20 $20 $20 $20
    53 24E0 20 23 23 23 2E 2A + .by  $20 $23 $23 $23 $2E $2A $2A $24  $40 $23 $23 $23 $20 $20 $20 $23  $23 $23 $23 $23 $23 $20 $20 $23
    54 24F8 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
    55 2510 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $2E $20 $23 $20 $20 $23 $23 $23  $20 $20 $24 $20 $20 $23 $23 $23
    56 2528 2E 20 24 23 40 23 + .by  $2E $20 $24 $23 $40 $23 $23 $23  $20 $20 $24 $20 $20 $23 $23 $23  $2E $20 $23 $20 $20 $23 $23 $23
    57 2540 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
    58 2558 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $20 $20 $20  $23 $23 $23 $23 $23 $20 $20 $20
    59 2570 23 23 23 23 20 24 + .by  $23 $23 $23 $23 $20 $24 $24 $24  $20 $23 $23 $23 $20 $2E $2B $2E  $20 $23 $23 $23 $23 $23 $23 $23
    60 2588 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
    61 25A0 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $20 $20 $20 $23 $23 $23  $40 $24 $24 $24 $20 $23 $23 $23
    62 25B8 20 20 23 2E 2E 2E + .by  $20 $20 $23 $2E $2E $2E $23 $23  $23 $20 $20 $20 $20 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
    63 25D0 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $20
    64 25E8 20 23 23 23 23 23 + .by  $20 $23 $23 $23 $23 $23 $23 $40  $20 $23 $23 $23 $23 $23 $23 $24  $2E $23 $23 $23 $20 $20 $20 $24
    65 2600 2E 23 23 23 20 23 + .by  $2E $23 $23 $23 $20 $23 $20 $24  $2E $23 $23 $23 $20 $20 $20 $20  $23 $23 $23 $23 $23 $23 $23 $23
    66 2618 23 23 23 00 42 08 + .by  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
    67 2630 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $40 $24 $2E $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
    68 2648 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00
    69 2660 42 08 08 23 23 23 + .by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $2E $2E $2E  $20 $23 $23 $23 $23 $20 $20 $24
    70 2678 20 23 23 23 23 20 + .by  $20 $23 $23 $23 $23 $20 $23 $24  $23 $23 $23 $23 $23 $20 $20 $24  $20 $23 $23 $23 $23 $20 $20 $40
    71 2690 20 23 23 23 23 23 + .by  $20 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
    72 26A8 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $20 $20 $20 $20 $23 $23 $23  $20 $20 $23 $23 $20 $23 $23 $23
    73 26C0 20 23 20 24 20 23 + .by  $20 $23 $20 $24 $20 $23 $23 $23  $20 $20 $2A $20 $2E $23 $23 $23  $23 $20 $23 $40 $23 $23 $23 $23
    74 26D8 23 20 20 20 23 23 + .by  $23 $20 $20 $20 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
    75 26F0 23 23 23 23 20 20 + .by  $23 $23 $23 $23 $20 $20 $40 $20  $23 $23 $23 $23 $20 $20 $23 $20  $23 $23 $23 $23 $20 $2E $23 $20
    76 2708 20 23 23 23 20 2E + .by  $20 $23 $23 $23 $20 $2E $24 $24  $24 $20 $23 $23 $20 $2E $23 $20  $20 $20 $23 $23 $23 $23 $23 $20
    77 2720 20 20 23 23 23 23 + .by  $20 $20 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
    78 2738 20 20 23 23 23 23 + .by  $20 $20 $23 $23 $23 $23 $23 $23  $20 $20 $20 $20 $23 $23 $23 $23  $20 $20 $24 $2A $40 $20 $23 $23
    79 2750 23 23 20 2E 23 20 + .by  $23 $23 $20 $2E $23 $20 $23 $23  $23 $23 $20 $20 $20 $20 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
    80 2768 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $20
    81 2780 40 23 23 23 23 20 + .by  $40 $23 $23 $23 $23 $20 $20 $24  $20 $23 $23 $23 $23 $20 $20 $2A  $2E $23 $23 $23 $23 $20 $20 $2A
    82 2798 2E 23 23 23 23 20 + .by  $2E $23 $23 $23 $23 $20 $20 $24  $20 $23 $23 $23 $23 $23 $23 $20  $20 $23 $23 $23 $23 $23 $23 $23
    83 27B0 23 23 23 00 42 08 + .by  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $2E $20 $2E $23 $23 $23 $23
    84 27C8 20 2A 20 2A 20 23 + .by  $20 $2A $20 $2A $20 $23 $23 $23  $20 $20 $23 $20 $20 $23 $23 $23  $20 $24 $20 $24 $20 $23 $23 $23
    85 27E0 23 20 40 20 23 23 + .by  $23 $20 $40 $20 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00
    86 27F8 42 08 08 23 23 23 + .by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $20 $20 $20 $23
    87 2810 23 23 23 23 20 20 + .by  $23 $23 $23 $23 $20 $20 $24 $20  $20 $23 $23 $23 $23 $2A $20 $2E  $20 $23 $23 $23 $23 $20 $20 $20
    88 2828 40 23 23 23 23 23 + .by  $40 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
    89 2840 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $23 $23 $23 $23 $23 $23  $2E $2A $24 $20 $20 $23 $23 $23
    90 2858 20 2E 24 23 20 23 + .by  $20 $2E $24 $23 $20 $23 $23 $23  $23 $20 $40 $20 $20 $23 $23 $23  $23 $20 $20 $20 $23 $23 $23 $23
    91 2870 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
    92 2888 23 23 23 23 20 20 + .by  $23 $23 $23 $23 $20 $20 $20 $23  $23 $23 $23 $23 $20 $23 $20 $20  $23 $23 $23 $23 $40 $24 $2A $2E
    93 28A0 23 23 23 23 23 20 + .by  $23 $23 $23 $23 $23 $20 $20 $2E  $20 $23 $23 $23 $23 $20 $24 $23  $20 $23 $23 $23 $23 $23 $20 $20
    94 28B8 20 23 23 23 23 23 + .by  $20 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
    95 28D0 20 20 20 23 23 23 + .by  $20 $20 $20 $23 $23 $23 $23 $23  $20 $2E $20 $20 $20 $23 $23 $23  $23 $2A $23 $24 $20 $20 $23 $23
    96 28E8 20 2E 23 20 24 20 + .by  $20 $2E $23 $20 $24 $20 $23 $23  $20 $40 $23 $23 $20 $23 $23 $23  $20 $20 $20 $20 $20 $23 $23 $23
    97 2900 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $40 $20 $20 $20
    98 2918 20 20 23 23 20 2E + .by  $20 $20 $23 $23 $20 $2E $24 $24  $2E $20 $23 $23 $20 $24 $2E $2E  $24 $20 $23 $23 $20 $24 $2E $2E
    99 2930 24 20 23 23 20 2E + .by  $24 $20 $23 $23 $20 $2E $24 $24  $2E $20 $23 $23 $20 $20 $20 $20  $20 $20 $23 $23 $23 $23 $23 $23
   100 2948 23 23 23 00 42 08 + .by  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23  $20 $40 $23 $20 $20 $23 $23 $23
   101 2960 2E 24 20 20 20 23 + .by  $2E $24 $20 $20 $20 $23 $23 $23  $2E $20 $23 $20 $24 $23 $23 $23  $2E $24 $23 $20 $20 $20 $23 $23
   102 2978 2E 20 23 20 24 20 + .by  $2E $20 $23 $20 $24 $20 $23 $23  $20 $20 $23 $20 $20 $20 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00
   103 2990 42 08 08 23 23 23 + .by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $20 $2E  $20 $23 $23 $23 $23 $23 $20 $24
   104 29A8 20 20 23 23 20 2E + .by  $20 $20 $23 $23 $20 $2E $20 $24  $23 $40 $23 $23 $20 $23 $24 $20  $2E $20 $23 $23 $20 $20 $24 $20
   105 29C0 23 23 23 23 23 20 + .by  $23 $23 $23 $23 $23 $20 $2E $20  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
   106 29D8 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $20 $20 $20 $20 $23 $23  $20 $24 $2A $2A $2A $20 $23 $23
   107 29F0 20 2A 20 20 2A 20 + .by  $20 $2A $20 $20 $2A $20 $23 $23  $20 $2A $20 $20 $2A $20 $23 $23  $20 $2A $2A $2A $2E $20 $23 $23
   108 2A08 20 20 20 20 20 40 + .by  $20 $20 $20 $20 $20 $40 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
   109 2A20 23 23 23 23 23 20 + .by  $23 $23 $23 $23 $23 $20 $20 $23  $23 $23 $23 $23 $23 $20 $20 $23  $23 $23 $23 $23 $23 $20 $20 $23
   110 2A38 23 23 23 23 23 2E + .by  $23 $23 $23 $23 $23 $2E $24 $24  $40 $23 $23 $23 $23 $20 $20 $2E  $20 $23 $23 $23 $23 $20 $20 $23
   111 2A50 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
   112 2A68 23 23 20 20 20 23 + .by  $23 $23 $20 $20 $20 $23 $23 $23  $23 $23 $2E $23 $20 $23 $23 $23  $23 $20 $20 $40 $20 $23 $23 $23
   113 2A80 23 20 20 24 20 23 + .by  $23 $20 $20 $24 $20 $23 $23 $23  $23 $20 $23 $2A $23 $23 $23 $23  $23 $20 $20 $20 $23 $23 $23 $23
   114 2A98 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $20
   115 2AB0 20 23 23 23 20 20 + .by  $20 $23 $23 $23 $20 $20 $23 $20  $20 $23 $23 $23 $20 $2E $20 $2E  $20 $23 $23 $23 $20 $40 $24 $24
   116 2AC8 20 23 23 23 20 23 + .by  $20 $23 $23 $23 $20 $23 $20 $23  $23 $23 $23 $23 $20 $20 $20 $23  $23 $23 $23 $23 $23 $23 $23 $23
   117 2AE0 23 23 23 00 42 08 + .by  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $20 $20 $23 $23 $23 $23
   118 2AF8 20 24 24 20 23 23 + .by  $20 $24 $24 $20 $23 $23 $23 $23  $23 $23 $20 $40 $20 $20 $23 $23  $23 $23 $20 $20 $2E $20 $23 $23
   119 2B10 23 23 23 20 2E 23 + .by  $23 $23 $23 $20 $2E $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00
   120 2B28 42 08 08 23 23 23 + .by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $20 $20  $20 $23 $23 $23 $20 $20 $24 $23
   121 2B40 20 23 23 23 20 20 + .by  $20 $23 $23 $23 $20 $20 $2E $24  $20 $23 $23 $23 $23 $20 $23 $23  $2E $23 $23 $23 $23 $20 $20 $20
   122 2B58 40 23 23 23 23 23 + .by  $40 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
   123 2B70 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $20 $40 $20 $20 $23 $23  $20 $20 $20 $2A $20 $20 $23 $23
   124 2B88 23 23 2E 24 23 23 + .by  $23 $23 $2E $24 $23 $23 $23 $23  $23 $23 $20 $2A $20 $23 $23 $23  $23 $23 $20 $20 $20 $23 $23 $23
   125 2BA0 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
   126 2BB8 23 23 23 23 23 20 + .by  $23 $23 $23 $23 $23 $20 $20 $20  $20 $23 $23 $23 $23 $20 $23 $24  $40 $23 $23 $23 $23 $20 $2E $2A
   127 2BD0 2E 23 23 23 23 20 + .by  $2E $23 $23 $23 $23 $20 $23 $24  $20 $23 $23 $23 $23 $20 $20 $20  $20 $23 $23 $23 $23 $23 $23 $23
   128 2BE8 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
   129 2C00 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $20 $23 $23 $23 $23 $23  $20 $20 $20 $23 $23 $23 $23 $23
   130 2C18 24 24 24 40 20 23 + .by  $24 $24 $24 $40 $20 $23 $23 $23  $2E $2E $2E $20 $20 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
   131 2C30 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
   132 2C48 23 23 23 23 23 2E + .by  $23 $23 $23 $23 $23 $2E $23 $20  $20 $23 $23 $23 $23 $40 $24 $24  $20 $23 $23 $23 $23 $2E $2E $24
   133 2C60 20 23 23 23 23 23 + .by  $20 $23 $23 $23 $23 $23 $20 $20  $20 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
   134 2C78 23 23 23 00 42 08 + .by  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $20 $23 $23 $23 $23 $23
   135 2C90 20 20 20 20 20 23 + .by  $20 $20 $20 $20 $20 $23 $23 $23  $20 $20 $20 $20 $20 $23 $23 $23  $23 $23 $2E $23 $23 $23 $23 $23
   136 2CA8 20 24 2A 24 20 23 + .by  $20 $24 $2A $24 $20 $23 $23 $23  $20 $20 $2B $20 $20 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00
   137 2CC0 42 08 08 23 23 23 + .by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $20 $20 $23  $23 $23 $23 $23 $20 $2E $24 $20
   138 2CD8 20 23 23 23 40 2E + .by  $20 $23 $23 $23 $40 $2E $24 $20  $20 $23 $23 $23 $20 $2E $24 $20  $23 $23 $23 $23 $23 $20 $20 $23
   139 2CF0 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
   140 2D08 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $23 $23 $23 $23 $23 $23  $20 $20 $23 $20 $20 $23 $23 $23
   141 2D20 2E 24 2A 2A 40 23 + .by  $2E $24 $2A $2A $40 $23 $23 $23  $23 $20 $20 $20 $20 $23 $23 $23  $23 $20 $20 $20 $23 $23 $23 $23
   142 2D38 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
   143 2D50 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $23 $23 $23 $23 $20 $24  $24 $20 $23 $23 $23 $23 $20 $23
   144 2D68 20 20 23 23 23 20 + .by  $20 $20 $23 $23 $23 $20 $2E $23  $24 $40 $23 $23 $20 $20 $20 $20  $20 $20 $23 $23 $20 $2E $2E $23
   145 2D80 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
   146 2D98 23 23 20 20 20 23 + .by  $23 $23 $20 $20 $20 $23 $23 $23  $23 $23 $24 $23 $40 $23 $23 $23  $23 $23 $20 $24 $20 $23 $23 $23
   147 2DB0 23 20 20 20 23 23 + .by  $23 $20 $20 $20 $23 $23 $23 $23  $23 $2E $2A $2E $20 $23 $23 $23  $23 $20 $20 $20 $20 $23 $23 $23
   148 2DC8 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $20 $20 $20
   149 2DE0 23 23 23 23 23 24 + .by  $23 $23 $23 $23 $23 $24 $23 $40  $20 $23 $23 $23 $23 $20 $24 $20  $20 $23 $23 $23 $23 $20 $20 $23
   150 2DF8 23 23 23 23 20 24 + .by  $23 $23 $23 $23 $20 $24 $2E $20  $20 $23 $23 $23 $2E $20 $2E $20  $20 $23 $23 $23 $23 $23 $23 $23
   151 2E10 23 23 23 00 42 08 + .by  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $20 $20 $20 $23 $23 $23
   152 2E28 20 24 24 24 2E 23 + .by  $20 $24 $24 $24 $2E $23 $23 $23  $23 $20 $23 $40 $2E $23 $23 $23  $23 $20 $23 $20 $2E $23 $23 $23
   153 2E40 23 20 20 23 20 23 + .by  $23 $20 $20 $23 $20 $23 $23 $23  $23 $23 $20 $20 $20 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00
   154 2E58 42 08 08 23 23 23 + .by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $20 $20 $23  $23 $23 $23 $23 $23 $24 $20 $20
   155 2E70 20 23 23 23 23 20 + .by  $20 $23 $23 $23 $23 $20 $2E $23  $20 $23 $23 $23 $23 $2A $2E $20  $20 $23 $23 $23 $20 $24 $20 $23
   156 2E88 23 23 23 23 20 40 + .by  $23 $23 $23 $23 $20 $40 $20 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
   157 2EA0 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $20 $20 $20 $23 $23 $23 $23  $20 $2E $24 $2E $20 $23 $23 $23
   158 2EB8 20 24 23 24 20 23 + .by  $20 $24 $23 $24 $20 $23 $23 $23  $20 $2E $24 $2E $20 $23 $23 $23  $20 $20 $20 $20 $23 $23 $23 $23
   159 2ED0 23 20 40 23 23 23 + .by  $23 $20 $40 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
   160 2EE8 23 23 23 23 20 20 + .by  $23 $23 $23 $23 $20 $20 $20 $20  $20 $20 $23 $23 $20 $23 $23 $23  $24 $20 $23 $23 $20 $23 $20 $20
   161 2F00 24 20 23 23 20 23 + .by  $24 $20 $23 $23 $20 $23 $2E $2A  $24 $40 $23 $23 $20 $23 $2E $23  $20 $20 $23 $23 $20 $20 $2E $23
   162 2F18 20 20 23 23 23 23 + .by  $20 $20 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
   163 2F30 20 20 20 20 23 23 + .by  $20 $20 $20 $20 $23 $23 $23 $23  $20 $23 $23 $24 $23 $23 $23 $23  $20 $23 $20 $24 $20 $20 $23 $23
   164 2F48 20 40 2E 2A 2E 20 + .by  $20 $40 $2E $2A $2E $20 $23 $23  $23 $20 $20 $20 $20 $20 $23 $23  $23 $20 $20 $23 $23 $23 $23 $23
   165 2F60 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $20 $20 $20 $23
   166 2F78 23 23 23 23 20 23 + .by  $23 $23 $23 $23 $20 $23 $20 $2E  $20 $20 $23 $23 $20 $23 $24 $2E  $20 $20 $23 $23 $20 $40 $24 $2A
   167 2F90 23 20 23 23 23 23 + .by  $23 $20 $23 $23 $23 $23 $23 $20  $20 $20 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
   168 2FA8 23 23 23 00 42 08 + .by  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $24 $2E $20 $20 $23 $23
   169 2FC0 20 20 24 2E 20 20 + .by  $20 $20 $24 $2E $20 $20 $23 $23  $23 $23 $20 $20 $23 $23 $23 $23  $20 $20 $24 $2E $20 $20 $23 $23
   170 2FD8 40 20 24 2E 20 20 + .by  $40 $20 $24 $2E $20 $20 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00
   171 2FF0 42 08 08 23 23 23 + .by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $20 $20 $20  $20 $23 $23 $23 $23 $2E $20 $2E
   172 3008 2E 23 23 23 23 23 + .by  $2E $23 $23 $23 $23 $23 $24 $20  $40 $20 $23 $23 $20 $24 $20 $20  $24 $20 $23 $23 $20 $20 $20 $23
   173 3020 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
   174 3038 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $20 $20 $20 $23 $23  $23 $23 $20 $2E $23 $20 $23 $23
   175 3050 20 20 24 2A 24 40 + .by  $20 $20 $24 $2A $24 $40 $23 $23  $20 $20 $20 $2E $23 $20 $23 $23  $23 $23 $20 $23 $20 $20 $23 $23
   176 3068 23 23 20 20 20 23 + .by  $23 $23 $20 $20 $20 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
   177 3080 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $20  $20 $20 $23 $23 $23 $20 $20 $20  $20 $20 $23 $23 $20 $2A $2A $24
   178 3098 20 23 23 23 20 20 + .by  $20 $23 $23 $23 $20 $20 $2A $20  $2E $23 $23 $23 $23 $23 $20 $23  $40 $23 $23 $23 $23 $23 $20 $20
   179 30B0 20 23 23 23 23 23 + .by  $20 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
   180 30C8 20 2E 20 2E 20 23 + .by  $20 $2E $20 $2E $20 $23 $23 $23  $2E $24 $24 $24 $2E $23 $23 $23  $20 $24 $40 $24 $20 $23 $23 $23
   181 30E0 2E 24 24 24 2E 23 + .by  $2E $24 $24 $24 $2E $23 $23 $23  $20 $2E $20 $2E $20 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
   182 30F8 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $20 $20 $23 $20
   183 3110 20 20 23 23 20 20 + .by  $20 $20 $23 $23 $20 $20 $23 $2E  $2E $20 $23 $23 $20 $24 $24 $24  $24 $24 $23 $23 $20 $20 $23 $2E
   184 3128 2E 2E 23 23 20 20 + .by  $2E $2E $23 $23 $20 $20 $23 $20  $20 $20 $23 $23 $20 $20 $40 $20  $20 $20 $23 $23 $23 $23 $23 $23
   185 3140 23 23 23 00 42 08 + .by  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $20 $23 $20 $20 $23 $23
   186 3158 20 24 2E 24 2E 20 + .by  $20 $24 $2E $24 $2E $20 $23 $23  $23 $2E $20 $20 $24 $20 $23 $23  $20 $24 $20 $20 $2E $23 $23 $23
   187 3170 20 2E 24 2E 24 20 + .by  $20 $2E $24 $2E $24 $20 $23 $23  $20 $20 $23 $20 $20 $40 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00
   188 3188 42 08 08 23 23 23 + .by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $2E $20 $2E  $20 $23 $23 $23 $23 $20 $20 $2A
   189 31A0 2E 23 23 23 23 23 + .by  $2E $23 $23 $23 $23 $23 $24 $20  $40 $20 $23 $23 $20 $24 $20 $20  $24 $20 $23 $23 $20 $20 $20 $23
   190 31B8 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
   191 31D0 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $20 $20 $23 $23 $23 $23 $23  $23 $20 $20 $20 $20 $23 $23 $23
   192 31E8 20 20 2A 20 2E 20 + .by  $20 $20 $2A $20 $2E $20 $23 $23  $20 $2A $24 $2A $24 $20 $23 $23  $23 $20 $2E $24 $2E $20 $23 $23
   193 3200 23 40 20 20 23 23 + .by  $23 $40 $20 $20 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
   194 3218 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $20  $20 $23 $23 $23 $23 $20 $20 $20  $20 $20 $23 $23 $23 $2A $20 $20
   195 3230 23 20 23 23 20 2A + .by  $23 $20 $23 $23 $20 $2A $24 $2A  $2E $20 $23 $23 $20 $20 $40 $20  $20 $23 $23 $23 $23 $23 $23 $23
   196 3248 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
   197 3260 20 20 23 23 23 23 + .by  $20 $20 $23 $23 $23 $23 $23 $23  $20 $20 $23 $23 $23 $23 $23 $23  $20 $20 $23 $23 $23 $23 $23 $23
   198 3278 2E 24 24 20 24 40 + .by  $2E $24 $24 $20 $24 $40 $23 $23  $20 $20 $2E $20 $2E $20 $23 $23  $20 $20 $23 $23 $23 $23 $23 $23
   199 3290 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
   200 32A8 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $20 $20  $23 $23 $23 $23 $20 $24 $2E $40  $23 $23 $23 $23 $20 $20 $2A $20
   201 32C0 20 23 23 23 20 20 + .by  $20 $23 $23 $23 $20 $20 $2A $20  $20 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
   202 32D8 23 23 23 00 42 08 + .by  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $20 $20 $20 $23 $23 $23
   203 32F0 20 2E 24 20 20 23 + .by  $20 $2E $24 $20 $20 $23 $23 $23  $23 $2E $24 $23 $23 $23 $23 $23  $20 $20 $40 $20 $20 $23 $23 $23
   204 3308 20 2E 24 23 20 23 + .by  $20 $2E $24 $23 $20 $23 $23 $23  $20 $20 $20 $20 $20 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00
   205 3320 42 08 08 23 23 23 + .by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $20 $20 $23 $20  $20 $23 $23 $23 $20 $2A $23 $24
   206 3338 2E 23 23 23 20 2A + .by  $2E $23 $23 $23 $20 $2A $20 $24  $2E $20 $23 $23 $20 $40 $20 $20  $20 $20 $23 $23 $20 $20 $20 $23
   207 3350 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
   208 3368 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $23 $23 $23 $23 $23 $23  $2E $2E $2E $20 $20 $23 $23 $23
   209 3380 2E 23 23 20 20 23 + .by  $2E $23 $23 $20 $20 $23 $23 $23  $20 $20 $24 $20 $24 $20 $23 $23  $23 $23 $24 $20 $24 $20 $23 $23
   210 3398 23 23 40 20 20 20 + .by  $23 $23 $40 $20 $20 $20 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
   211 33B0 23 23 23 23 23 20 + .by  $23 $23 $23 $23 $23 $20 $20 $23  $23 $23 $23 $23 $23 $20 $2A $20  $20 $23 $23 $23 $23 $20 $2A $23
   212 33C8 40 23 23 23 23 20 + .by  $40 $23 $23 $23 $23 $20 $2A $20  $20 $23 $23 $23 $20 $20 $2E $24  $23 $23 $23 $23 $20 $20 $20 $20
   213 33E0 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
   214 33F8 20 20 20 20 40 20 + .by  $20 $20 $20 $20 $40 $20 $23 $23  $20 $24 $20 $20 $24 $20 $23 $23  $23 $20 $23 $23 $20 $23 $23 $23
   215 3410 20 24 23 20 24 23 + .by  $20 $24 $23 $20 $24 $23 $23 $23  $20 $20 $2E $2E $20 $23 $23 $23  $23 $20 $2E $2E $20 $23 $23 $23
   216 3428 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $20 $40 $23 $23
   217 3440 23 23 23 23 20 20 + .by  $23 $23 $23 $23 $20 $20 $20 $20  $20 $23 $23 $23 $20 $2E $23 $2E  $20 $20 $23 $23 $23 $24 $24 $24
   218 3458 24 20 23 23 20 2E + .by  $24 $20 $23 $23 $20 $2E $20 $2E  $23 $23 $23 $23 $20 $20 $20 $20  $23 $23 $23 $23 $23 $23 $23 $23
   219 3470 23 23 23 00 42 08 + .by  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $20 $23 $23 $23 $23 $23
   220 3488 20 2E 24 2E 20 23 + .by  $20 $2E $24 $2E $20 $23 $23 $23  $20 $24 $2A $20 $20 $23 $23 $23  $23 $20 $20 $2A $24 $20 $23 $23
   221 34A0 23 20 2E 24 2E 20 + .by  $23 $20 $2E $24 $2E $20 $23 $23  $23 $23 $23 $20 $20 $40 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00
   222 34B8 42 08 08 23 23 23 + .by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $20  $20 $23 $23 $23 $23 $23 $20 $20
   223 34D0 20 23 23 23 20 20 + .by  $20 $23 $23 $23 $20 $20 $2E $2A  $24 $20 $23 $23 $20 $20 $2A $2E  $24 $40 $23 $23 $23 $20 $20 $20
   224 34E8 23 23 23 23 23 20 + .by  $23 $23 $23 $23 $23 $20 $20 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
   225 3500 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $20 $20 $23 $23 $23  $23 $23 $20 $20 $20 $23 $23 $23
   226 3518 20 20 2E 2A 24 20 + .by  $20 $20 $2E $2A $24 $20 $23 $23  $20 $20 $2A $2E $24 $40 $23 $23  $23 $20 $20 $20 $23 $23 $23 $23
   227 3530 23 23 20 20 23 20 + .by  $23 $23 $20 $20 $23 $20 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
   228 3548 23 23 23 23 20 20 + .by  $23 $23 $23 $23 $20 $20 $20 $20  $20 $20 $23 $23 $20 $23 $24 $2E  $40 $20 $23 $23 $20 $20 $24 $2E
   229 3560 23 23 23 23 20 23 + .by  $23 $23 $23 $23 $20 $23 $24 $2E  $23 $23 $23 $23 $20 $20 $20 $23  $23 $23 $23 $23 $23 $23 $23 $23
   230 3578 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
   231 3590 20 20 20 23 23 23 + .by  $20 $20 $20 $23 $23 $23 $23 $23  $20 $20 $24 $2E $20 $20 $23 $23  $23 $20 $24 $2E $20 $20 $23 $23
   232 35A8 23 23 24 2E 23 23 + .by  $23 $23 $24 $2E $23 $23 $23 $23  $23 $23 $40 $20 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
   233 35C0 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $20 $20
   234 35D8 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $20 $20  $23 $23 $23 $23 $23 $23 $24 $2E  $23 $23 $23 $23 $20 $20 $24 $2E
   235 35F0 23 23 23 23 20 23 + .by  $23 $23 $23 $23 $20 $23 $24 $2E  $20 $23 $23 $23 $20 $20 $20 $40  $20 $23 $23 $23 $23 $23 $23 $23
   236 3608 23 23 23 00 42 08 + .by  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $20 $23 $23 $23 $23 $23
   237 3620 20 23 24 2E 20 20 + .by  $20 $23 $24 $2E $20 $20 $23 $23  $20 $20 $2E $24 $23 $40 $23 $23  $23 $23 $24 $2E $20 $20 $23 $23
   238 3638 23 23 20 20 23 23 + .by  $23 $23 $20 $20 $23 $23 $23 $23  $23 $23 $20 $20 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00
   239 3650 42 08 08 23 23 23 + .by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $20 $20  $20 $20 $23 $23 $20 $20 $24 $2E
   240 3668 23 20 23 23 40 23 + .by  $23 $20 $23 $23 $40 $23 $2E $24  $20 $20 $23 $23 $20 $23 $24 $2E  $23 $23 $23 $23 $20 $20 $20 $20
   241 3680 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
   242 3698 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $20 $20 $20 $23 $23  $20 $20 $24 $2E $23 $20 $23 $23
   243 36B0 40 23 2E 24 20 20 + .by  $40 $23 $2E $24 $20 $20 $23 $23  $20 $23 $24 $2E $23 $23 $23 $23  $20 $23 $20 $20 $23 $23 $23 $23
   244 36C8 20 20 20 20 23 23 + .by  $20 $20 $20 $20 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
   245 36E0 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $20 $2E  $20 $23 $23 $23 $23 $23 $20 $2A  $20 $23 $23 $23 $23 $23 $20 $2A
   246 36F8 20 23 23 23 23 20 + .by  $20 $23 $23 $23 $23 $20 $20 $2A  $20 $23 $23 $23 $23 $20 $40 $24  $20 $23 $23 $23 $23 $20 $20 $23
   247 3710 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
   248 3728 20 20 40 23 23 23 + .by  $20 $20 $40 $23 $23 $23 $23 $23  $20 $23 $24 $24 $20 $20 $23 $23  $20 $20 $24 $2E $23 $20 $23 $23
   249 3740 23 23 2E 2E 20 20 + .by  $23 $23 $2E $2E $20 $20 $23 $23  $23 $23 $23 $20 $20 $20 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
   250 3758 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $20
   251 3770 40 23 23 23 20 20 + .by  $40 $23 $23 $23 $20 $20 $24 $24  $20 $23 $23 $23 $20 $23 $24 $2E  $20 $20 $23 $23 $20 $20 $2E $2E
   252 3788 23 20 23 23 23 23 + .by  $23 $20 $23 $23 $23 $23 $23 $20  $20 $20 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
   253 37A0 23 23 23 00 42 08 + .by  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $20 $20 $23 $23 $23
   254 37B8 23 23 20 20 20 23 + .by  $23 $23 $20 $20 $20 $23 $23 $23  $20 $20 $24 $20 $20 $23 $23 $23  $20 $2E $2A $2E $23 $23 $23 $23
   255 37D0 23 20 24 20 23 23 + .by  $23 $20 $24 $20 $23 $23 $23 $23  $23 $23 $40 $20 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00
   256 37E8 42 08 08 23 23 23 + .by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $20  $20 $23 $23 $23 $23 $23 $23 $24
   257 3800 20 23 23 23 23 20 + .by  $20 $23 $23 $23 $23 $20 $2E $2A  $2E $23 $23 $23 $23 $20 $23 $24  $20 $23 $23 $23 $23 $20 $20 $40
   258 3818 20 23 23 23 23 20 + .by  $20 $23 $23 $23 $23 $20 $20 $20  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
   259 3830 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $20 $23 $23 $23 $23 $23  $20 $20 $24 $20 $23 $23 $23 $23
   260 3848 23 24 2A 2E 20 23 + .by  $23 $24 $2A $2E $20 $23 $23 $23  $23 $20 $2E $40 $20 $20 $23 $23  $23 $20 $20 $23 $20 $20 $23 $23
   261 3860 23 23 23 23 20 20 + .by  $23 $23 $23 $23 $20 $20 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
   262 3878 23 23 23 23 20 20 + .by  $23 $23 $23 $23 $20 $20 $20 $23  $23 $23 $23 $23 $20 $23 $40 $24  $20 $20 $23 $23 $20 $20 $24 $2A
   263 3890 2E 20 23 23 23 23 + .by  $2E $20 $23 $23 $23 $23 $23 $2E  $20 $23 $23 $23 $23 $20 $20 $20  $20 $23 $23 $23 $23 $20 $20 $20
   264 38A8 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
   265 38C0 23 23 20 20 20 23 + .by  $23 $23 $20 $20 $20 $23 $23 $23  $23 $23 $20 $20 $20 $23 $23 $23  $20 $20 $2A $20 $23 $23 $23 $23
   266 38D8 20 2E 40 24 23 23 + .by  $20 $2E $40 $24 $23 $23 $23 $23  $20 $20 $2A $20 $23 $23 $23 $23  $23 $20 $20 $23 $23 $23 $23 $23
   267 38F0 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $20 $20 $23
   268 3908 23 23 23 23 23 20 + .by  $23 $23 $23 $23 $23 $20 $2A $20  $23 $23 $23 $23 $20 $2E $40 $24  $20 $23 $23 $23 $20 $20 $2A $20
   269 3920 20 23 23 23 20 20 + .by  $20 $23 $23 $23 $20 $20 $23 $20  $20 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
   270 3938 23 23 23 00 42 08 + .by  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $20 $20 $20 $23 $23 $23
   271 3950 23 20 2A 20 20 23 + .by  $23 $20 $2A $20 $20 $23 $23 $23  $20 $2E $40 $24 $23 $23 $23 $23  $20 $20 $2A $20 $20 $23 $23 $23
   272 3968 23 23 20 20 20 23 + .by  $23 $23 $20 $20 $20 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00
   273 3980 42 08 08 23 23 23 + .by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $20 $20  $23 $23 $23 $23 $23 $23 $20 $20
   274 3998 23 23 23 23 23 20 + .by  $23 $23 $23 $23 $23 $20 $24 $2A  $20 $20 $23 $23 $20 $20 $2A $2E  $20 $40 $23 $23 $20 $20 $20 $23
   275 39B0 23 23 23 23 20 20 + .by  $23 $23 $23 $23 $20 $20 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
   276 39C8 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $40 $20 $23 $23 $23 $23  $23 $23 $20 $20 $23 $23 $23 $23
   277 39E0 23 23 24 2A 20 23 + .by  $23 $23 $24 $2A $20 $23 $23 $23  $20 $20 $2A $2E $20 $20 $23 $23  $20 $20 $20 $20 $20 $20 $23 $23
   278 39F8 23 23 23 23 20 20 + .by  $23 $23 $23 $23 $20 $20 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
   279 3A10 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $20  $23 $23 $23 $23 $40 $20 $23 $23  $23 $20 $23 $23 $20 $24 $24 $20
   280 3A28 23 23 23 23 20 24 + .by  $23 $23 $23 $23 $20 $24 $20 $2E  $20 $20 $23 $23 $23 $20 $2E $2E  $20 $20 $23 $23 $23 $23 $23 $23
   281 3A40 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
   282 3A58 20 20 20 20 23 23 + .by  $20 $20 $20 $20 $23 $23 $23 $23  $20 $20 $20 $20 $23 $23 $23 $23  $23 $20 $24 $24 $23 $23 $23 $23
   283 3A70 23 20 24 40 2E 23 + .by  $23 $20 $24 $40 $2E $23 $23 $23  $23 $23 $20 $2E $2E $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
   284 3A88 23 23 23 23 23 23 + .by  $23 $23 $23 $23 $23 $23 $23 $00  $03 $02 $02 $01 $01 $02 $02 $03  $03 $03 $03 $03 $03 $03 $02 $03
   285 3AA0 28 14 14 28 50 50 + .by  $28 $14 $14 $28 $50 $50 $A0 $A0  $40 $50 $50 $50 $28 $28 $A0 $A0  $18 $18 $0C $18 $30 $30 $60 $60
   286 3AB8 C0 C0 C0 C0 18 0C + .by  $C0 $C0 $C0 $C0 $18 $0C $C0 $C0
Source: main.a65
   119
   120 				; ------------------------------------------------------------
   121
   122 3AC0			RTLIB
   123 3AC0				icl 'rtl6502_a8.asm'
Source: rtl6502_a8.asm
    78 					opt l+
   124
   125 				.print 'ZPAGE: ',zpage,'..',zpend-1
   125 				ZPAGE: $0080..$00D3
   126
   127 				.print 'RTLIB: ',RTLIB,'..',*-1
   127 				RTLIB: $3AC0..$3B97
   128
   129 				; ------------------------------------------------------------
   130
   131 3B98			START
   132 3B98 BA				tsx
   133 3B99 8E D4 44			stx MAIN.@halt+1
   134
   135 = 0017			VLEN	= VARDATASIZE-VARINITSIZE
   136 = 4702			VADR	= DATAORIGIN+VARINITSIZE
   137
   138 					ift VADR > $BFFF
   139 					ert 'Invalid memory address range ',VADR
   140 					eli (VLEN>0) && (VLEN<=256)
   141 3B9C A2 E9			ldx #256-VLEN
   142 3B9E A9 00			lda #$00
   143 3BA0 9D 19 46 E8 D0 FA		sta:rne VADR+VLEN-256,x+
   144 					eli VLEN>256
   145 					@fill #VADR #VLEN #$00
   146 					eif
   147
   148 				.ifdef :psptr
   149 					mwa #PROGRAMSTACK :psptr
   150 				.fi
   151
   152 					.ifdef MAIN.@DEFINES.ROMOFF
   153 					icl 'atari\romoff.asm'
   154 					.fi
   155
   156 3BA6 A2 0F			ldx #$0F					; DOS II+/D ParamStr
   157 3BA8 BD 40 03 9D D9 44 + 	mva:rpl $340,x MAIN.IOCB@COPY,x-
   158
   159 3BB1 E8				inx						; X = 0
   160 3BB2 86 80			stx bp						; BP = 0
   161
   162 3BB4 8E 0F D2			stx skctl					; reset POKEY
   163 3BB7 A9 03			lda #3
   164 3BB9 8D 0F D2			sta skctl
   165
   166 3BBC CA				dex						; X = 255
   167
   168 3BBD				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: main.a65]
    27 3BBD 20 15 3D			jsr MAIN.MPT.@UnitInit
    31 3BC0 20 9F 3E			jsr MAIN.SOKO_LV.@UnitInit
    35 3BC3 20 36 40			jsr MAIN.SOKO_DRAW.@UnitInit
   169
   170 3BC6			.local	MAIN						; PROCEDURE
   171
   172 3BC6 4C 45 44			jmp l_1A97
   173
   174 				; ------------------------------------------------------------
   175
   176 3BC9			.local	SYSTEM						; UNIT
   177
   178 3BC9			.local	POKE						; PROCEDURE | ASSEMBLER | REGISTER
   179
   180 				; ------------------------------------------------------------
   181
   182 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   183 				; as Pointer
   184 3BC9 B5 94			lda :STACKORIGIN,x
   185 3BCB 85 88			sta A
   186 3BCD B5 A4			lda :STACKORIGIN+STACKWIDTH,x
   187 3BCF 85 89			sta A+1
   188 3BD1 CA				dex
   189 3BD2 30 05			jmi @main
   190
   191 				; ------------------------------------------------------------
   192
   193 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   194 				; as Pointer
   195 3BD4 B5 94			lda :STACKORIGIN,x
   196 3BD6 85 8C			sta VALUE
   197 3BD8 CA				dex
   198 3BD9			@main
   199
   200 				; -------------------  ASM Block 00000018  -------------------
   201
   202 3BD9 A0 00			ldy #0
   203 3BDB A5 8C 91 88			mva value (:edx),y
   204
   205 				; ------------------------------------------------------------
   206
   207 = 0088			A	= :EDX
   208 = 008C			VALUE	= :ECX
   209 3BDF			@exit
   210 					.ifdef @new
   211 					lda <@VarData
   212 					sta :ztmp
   213 					lda >@VarData
   214 					ldy #@VarDataSize-1
   215 					jmp @FreeMem
   216 					els
   217 3BDF 60				rts						; ret
   218 					eif
   219 				.endl
   220
   221 3BE0			.local	PAUSE_1AF8					; PROCEDURE | ASSEMBLER | OVERLOAD
   222
   223 				; -------------------  ASM Block 00000034  -------------------
   224
   225 3BE0 A5 14 C5 14 F0 FC		lda:cmp:req :rtclok+2
   226
   227 3BE6			@exit
   228 					.ifdef @new
   229 					lda <@VarData
   230 					sta :ztmp
   231 					lda >@VarData
   232 					ldy #@VarDataSize-1
   233 					jmp @FreeMem
   234 					els
   235 3BE6 60				rts						; ret
   236 					eif
   237 				.endl
   238
   239 3BE7			.local	PAUSE_1AF9					; PROCEDURE | ASSEMBLER | OVERLOAD
   240
   241 				; -------------------  ASM Block 00000035  -------------------
   242
   243
   244 3BE7 AD F7 44		loop	lda n
   245 3BEA 0D F8 44			ora n+1
   246 3BED F0 14			beq stop
   247
   248 3BEF A5 14 C5 14 F0 FC		lda:cmp:req :rtclok+2
   249
   250 3BF5 AD F7 44 D0 03 CE + 	dew n
   251
   252 3C00 4C E7 3B			jmp loop
   253 3C03			stop
   254
   255
   256 				; ------------------------------------------------------------
   257
   258 = 44F7			N	= DATAORIGIN+$000B
   259
   260 = 44F7			@VarData	= N
   261 = 0002			@VarDataSize	= 2
   262
   263 3C03			@exit
   264 					.ifdef @new
   265 					lda <@VarData
   266 					sta :ztmp
   267 					lda >@VarData
   268 					ldy #@VarDataSize-1
   269 					jmp @FreeMem
   270 					els
   271 3C03 60				rts						; ret
   272 					eif
   273 				.endl
   274
   275 				; ------------------------------------------------------------
   276
   277 = 0101			__PORTB_BANKS	= $0101
   278 = 0648			M_PI_2	= $0648
   279 = 0192			D_PI_2	= $0192
   280 = 0004			D_PI_180	= $04
   281 = 0000			MGTIA	= $00
   282 = 0080			MVBXE	= $80
   283 = 0000			VBXE_XDLADR	= $00
   284 = 00E0			VBXE_BCBTMP	= $E0
   285 = 0100			VBXE_BCBADR	= $0100
   286 = 1000			VBXE_MAPADR	= $1000
   287 = 1000			VBXE_CHBASE	= $1000
   288 = 5000			VBXE_OVRADR	= $5000
   289 = B000			VBXE_WINDOW	= $B000
   290 = 0000			IDLI	= $00
   291 = 0001			IVBL	= $01
   292 = 0002			ITIM1	= $02
   293 = 0003			ITIM2	= $03
   294 = 0004			ITIM4	= $04
   295 = 00FE			CH_DELCHR	= $FE
   296 = 009B			CH_ENTER	= $9B
   297 = 001B			CH_ESC	= $1B
   298 = 001C			CH_CURS_UP	= $1C
   299 = 001D			CH_CURS_DOWN	= $1D
   300 = 001E			CH_CURS_LEFT	= $1E
   301 = 001F			CH_CURS_RIGHT	= $1F
   302 = 007F			CH_TAB	= $7F
   303 = 009B			CH_EOL	= $9B
   304 = 007D			CH_CLR	= $7D
   305 = 00FD			CH_BELL	= $FD
   306 = 007E			CH_DEL	= $7E
   307 = 009C			CH_DELLINE	= $9C
   308 = 009D			CH_INSLINE	= $9D
   309 = 0000			PAL_PMCOLOR0	= $00
   310 = 0001			PAL_PMCOLOR1	= $01
   311 = 0002			PAL_PMCOLOR2	= $02
   312 = 0003			PAL_PMCOLOR3	= $03
   313 = 0004			PAL_COLOR0	= $04
   314 = 0005			PAL_COLOR1	= $05
   315 = 0006			PAL_COLOR2	= $06
   316 = 0007			PAL_COLOR3	= $07
   317 = 0008			PAL_COLBAK	= $08
   318 = 0000			COLOR_BLACK	= $00
   319 = 000E			COLOR_WHITE	= $0E
   320 = 0032			COLOR_RED	= $32
   321 = 0096			COLOR_CYAN	= $96
   322 = 0068			COLOR_VIOLET	= $68
   323 = 00C4			COLOR_GREEN	= $C4
   324 = 0074			COLOR_BLUE	= $74
   325 = 00EE			COLOR_YELLOW	= $EE
   326 = 0028			COLOR_ORANGE	= $28
   327 = 00E4			COLOR_BROWN	= $E4
   328 = 003C			COLOR_LIGHTRED	= $3C
   329 = 0004			COLOR_GRAY1	= $04
   330 = 0006			COLOR_GRAY2	= $06
   331 = 000A			COLOR_GRAY3	= $0A
   332 = 00CC			COLOR_LIGHTGREEN	= $CC
   333 = 007C			COLOR_LIGHTBLUE	= $7C
   334 = 0004			FMOPENREAD	= $04
   335 = 0008			FMOPENWRITE	= $08
   336 = 0009			FMOPENAPPEND	= $09
   337 = 000C			FMOPENREADWRITE	= $0C
   338 = 44EC			SCREENWIDTH	= DATAORIGIN+$0000
   339 = 44EE			SCREENHEIGHT	= DATAORIGIN+$0002
   340 = 44F0			DATESEPARATOR	= DATAORIGIN+$0004
   341 = D20A			RND	= $D20A
   342 = 02C0			adr.PALETTE	= $02C0
   343 3C04			.var PALETTE	= adr.PALETTE .word
   344 = D012			adr.HPALETTE	= $D012
   345 3C04			.var HPALETTE	= adr.HPALETTE .word
   346 = 44F1			FILEMODE	= DATAORIGIN+$0005
   347 = 44F2			GRAPHMODE	= DATAORIGIN+$0006
   348 = 44F3			IORESULT	= DATAORIGIN+$0007
   349 = 44F4			EOLN	= DATAORIGIN+$0008
   350 = 44F5			RNDSEED	= DATAORIGIN+$0009
   351
   352 = 3C04 C0 02		PALETTE
   352 = 3C06 12 D0		HPALETTE
   352 				.endl							; UNIT SYSTEM
   353
   354 				; ------------------------------------------------------------
   355
   356 3C08			.local	ATARI						; UNIT
   357
   358 				; ------------------------------------------------------------
   359
   360 = 0010			IRQENS	= $10
   361 = 0012			RTCLOK	= $12
   362 = 0012			RTCLOK1	= $12
   363 = 0013			RTCLOK2	= $13
   364 = 0014			RTCLOK3	= $14
   365 = 004D			ATRACT	= $4D
   366 = 0052			LMARGIN	= $52
   367 = 0053			RMARGIN	= $53
   368 = 0054			ROWCRS	= $54
   369 = 0055			COLCRS	= $55
   370 = 0057			DINDEX	= $57
   371 = 0058			SAVMSC	= $58
   372 = 0062			PALNTS	= $62
   373 = 006A			RAMTOP	= $6A
   374 = 0200			VDSLST	= $0200
   375 = 0230			SDLSTL	= $0230
   376 = 0290			TXTROW	= $0290
   377 = 0291			TXTCOL	= $0291
   378 = 0293			TINDEX	= $0293
   379 = 0294			TXTMSC	= $0294
   380 = 022F			SDMCTL	= $022F
   381 = 026F			GPRIOR	= $026F
   382 = 02F0			CRSINH	= $02F0
   383 = 02F3			CHACT	= $02F3
   384 = 02F4			CHBAS	= $02F4
   385 = 02FC			CH	= $02FC
   386 = 02C0			PCOLR0	= $02C0
   387 = 02C1			PCOLR1	= $02C1
   388 = 02C2			PCOLR2	= $02C2
   389 = 02C3			PCOLR3	= $02C3
   390 = 02C4			COLOR0	= $02C4
   391 = 02C5			COLOR1	= $02C5
   392 = 02C6			COLOR2	= $02C6
   393 = 02C7			COLOR3	= $02C7
   394 = 02C8			COLOR4	= $02C8
   395 = 02C8			COLBAKS	= $02C8
   396 = D000			HPOSP0	= $D000
   397 = D001			HPOSP1	= $D001
   398 = D002			HPOSP2	= $D002
   399 = D003			HPOSP3	= $D003
   400 = D004			HPOSM0	= $D004
   401 = D005			HPOSM1	= $D005
   402 = D006			HPOSM2	= $D006
   403 = D007			HPOSM3	= $D007
   404 = D008			SIZEP0	= $D008
   405 = D009			SIZEP1	= $D009
   406 = D00A			SIZEP2	= $D00A
   407 = D00B			SIZEP3	= $D00B
   408 = D00C			SIZEM	= $D00C
   409 = D00D			GRAFP0	= $D00D
   410 = D00E			GRAFP1	= $D00E
   411 = D00F			GRAFP2	= $D00F
   412 = D010			GRAFP3	= $D010
   413 = D011			GRAFM	= $D011
   414 = D004			P0PF	= $D004
   415 = D014			PAL	= $D014
   416 = D012			COLPM0	= $D012
   417 = D013			COLPM1	= $D013
   418 = D014			COLPM2	= $D014
   419 = D015			COLPM3	= $D015
   420 = D016			COLPF0	= $D016
   421 = D017			COLPF1	= $D017
   422 = D018			COLPF2	= $D018
   423 = D019			COLPF3	= $D019
   424 = D01A			COLBK	= $D01A
   425 = D01B			PRIOR	= $D01B
   426 = D01D			GRACTL	= $D01D
   427 = D01E			HITCLR	= $D01E
   428 = D01F			CONSOL	= $D01F
   429 = D200			AUDF1	= $D200
   430 = D201			AUDC1	= $D201
   431 = D202			AUDF2	= $D202
   432 = D203			AUDC2	= $D203
   433 = D204			AUDF3	= $D204
   434 = D205			AUDC3	= $D205
   435 = D206			AUDF4	= $D206
   436 = D207			AUDC4	= $D207
   437 = D208			AUDCTL	= $D208
   438 = D209			KBCODE	= $D209
   439 = D20E			IRQEN	= $D20E
   440 = D20F			SKSTAT	= $D20F
   441 = D300			PORTA	= $D300
   442 = D301			PORTB	= $D301
   443 = D400			DMACTL	= $D400
   444 = D401			CHACTL	= $D401
   445 = D402			DLISTL	= $D402
   446 = D404			HSCROL	= $D404
   447 = D405			VSCROL	= $D405
   448 = D407			PMBASE	= $D407
   449 = D409			CHBASE	= $D409
   450 = D40A			WSYNC	= $D40A
   451 = D40B			VCOUNT	= $D40B
   452 = D40C			PENH	= $D40C
   453 = D40D			PENV	= $D40D
   454 = D40E			NMIEN	= $D40E
   455 = FFFA			NMIVEC	= $FFFA
   456 = FFFC			RESETVEC	= $FFFC
   457 = FFFE			IRQVEC	= $FFFE
   458
   459 				.endl							; UNIT ATARI
   460
   461 				; ------------------------------------------------------------
   462
   463 3C08			.local	TYPES						; UNIT
   464
   465 				; ------------------------------------------------------------
   466
   467 				.endl							; UNIT TYPES
   468
   469 				; ------------------------------------------------------------
   470
   471 3C08			.local	GRAPH						; UNIT
   472
   473 3C08			.local	INITGRAPH_1B26					; PROCEDURE | OVERLOAD
   474 3C08 8D 16 45			sta MODE
   475
   476 				; -------------------  ASM Block 00000050  -------------------
   477
   478 3C0B 8A 48			txa:pha
   479
   480 3C0D AD 16 45			lda mode
   481 3C10 8D F2 44			sta MAIN.SYSTEM.GraphMode
   482 3C13 29 0F			and #$0f
   483 3C15 A8				tay
   484
   485 3C16 A2 60			ldx #$60		; 6*16
   486 3C18 AD 16 45			lda mode		; %00010000 with text window
   487 3C1B 29 10			and #$10
   488 3C1D 49 10			eor #$10
   489 3C1F 09 02			ora #2			; read
   490
   491 					.nowarn @GRAPHICS
   491 3C21 20 EE 3A		 JSR @GRAPHICS
   492
   493 3C24 8C 01 45			sty GraphResult
   494
   495
   496 					.ifdef MAIN.@DEFINES.ROMOFF
   497 					inc portb
   498 					.endif
   499
   500 3C27 A6 57			ldx dindex
   501 3C29 BC 90 3A			ldy adr.tlshc,x
   502 3C2C A9 05			lda #5
   503 3C2E 0A			shift	asl @
   504 3C2F 88				dey
   505 3C30 D0 FC			bne shift
   506
   507 3C32 8D 11 45			sta SCANLINE_WIDTH
   508
   509 				; Fox/TQA
   510
   511 = 0057			dindex	equ $57
   512
   513 3C35 A6 57			ldx dindex
   514 3C37 BD A0 3A			lda adr.tmccn,x
   515 3C3A BC B0 3A			ldy adr.tmrcn,x
   516 3C3D A2 00			ldx #0
   517 3C3F C9 40			cmp #<320
   518 3C41 D0 01 E8			sne:inx
   519
   520 				; X:A = horizontal resolution
   521 				; Y = vertical resolution
   522
   523 3C44 20 28 3B			@SCREENSIZE
   524
   525 					.ifdef MAIN.@DEFINES.ROMOFF
   526 					dec portb
   527 					.endif
   528
   529 3C47 68 AA			pla:tax
   530 				 
   531 				; optimize OK (graph_atari.inc), line = 82
   532
   533 3C49 A5 58			lda ATARI.SAVMSC
   534 3C4B 8D 03 45			sta VIDEORAM
   535 3C4E A5 59			lda ATARI.SAVMSC+1
   536 3C50 8D 04 45			sta VIDEORAM+1
   537
   538 				; ------------------------------------------------------------
   539
   540 = 4516			MODE	= DATAORIGIN+$002A
   541 = 3A90			adr.TLSHC	= CODEORIGIN+$1A90
   542 3C53			.var TLSHC	= adr.TLSHC .word
   543 = 3AA0			adr.TMCCN	= CODEORIGIN+$1AA0
   544 3C53			.var TMCCN	= adr.TMCCN .word
   545 = 3AB0			adr.TMRCN	= CODEORIGIN+$1AB0
   546 3C53			.var TMRCN	= adr.TMRCN .word
   547
   548 = 4516			@VarData	= MODE
   549 = 0001			@VarDataSize	= 1
   550
   551 3C53			@exit
   552 					.ifdef @new
   553 					lda <@VarData
   554 					sta :ztmp
   555 					lda >@VarData
   556 					ldy #@VarDataSize-1
   557 					jmp @FreeMem
   558 					els
   559 3C53 60				rts						; ret
   560 					eif
   561 = 3C54 90 3A		TLSHC
   561 = 3C56 A0 3A		TMCCN
   561 = 3C58 B0 3A		TMRCN
   561 				.endl
   562
   563 				; ------------------------------------------------------------
   564
   565 = 0080			CURRENTDRIVER	= $80
   566 = 0000			DETECT	= $00
   567 = 0001			CGA	= $01
   568 = 0002			MCGA	= $02
   569 = 0003			EGA	= $03
   570 = 0004			EGA64	= $04
   571 = 0005			EGAMONO	= $05
   572 = 0006			LOWRES	= $06
   573 = 0007			HERCMONO	= $07
   574 = 0009			VGA	= $09
   575 = 000A			VESA	= $0A
   576 = 000B			D1BIT	= $0B
   577 = 000C			D2BIT	= $0C
   578 = 000D			D4BIT	= $0D
   579 = 000E			D6BIT	= $0E
   580 = 000F			D8BIT	= $0F
   581 = 0010			D12BIT	= $10
   582 = 0018			M640X400	= $18
   583 = 0018			M640X480	= $18
   584 = 0001			GROK	= $01
   585 = 00FF			GRNOINITGRAPH	= $FF
   586 = 00FE			GRNOTDETECTED	= $FE
   587 = 00FD			GRFILENOTFOUND	= $FD
   588 = 00FC			GRINVALIDDRIVER	= $FC
   589 = 00FB			GRNOLOADMEM	= $FB
   590 = 00FA			GRNOSCANMEM	= $FA
   591 = 00F9			GRNOFLOODMEM	= $F9
   592 = 00F8			GRFONTNOTFOUND	= $F8
   593 = 00F7			GRNOFONTMEM	= $F7
   594 = 00F6			GRINVALIDMODE	= $F6
   595 = 00F5			GRERROR	= $F5
   596 = 00F4			GRIOERROR	= $F4
   597 = 00F3			GRINVALIDFONT	= $F3
   598 = 00F2			GRINVALIDFONTNUM	= $F2
   599 = 00EE			GRINVALIDVERSION	= $EE
   600 = 0000			CGAC0	= $00
   601 = 0001			CGAC1	= $01
   602 = 0002			CGAC2	= $02
   603 = 0003			CGAC3	= $03
   604 = 0004			CGAHI	= $04
   605 = 0000			MCGAC0	= $00
   606 = 0001			MCGAC1	= $01
   607 = 0002			MCGAC2	= $02
   608 = 0003			MCGAC3	= $03
   609 = 0004			MCGAMED	= $04
   610 = 0005			MCGAHI	= $05
   611 = 0000			EGALO	= $00
   612 = 0001			EGAHI	= $01
   613 = 0000			EGA64LO	= $00
   614 = 0001			EGA64HI	= $01
   615 = 0003			EGAMONOHI	= $03
   616 = 000A			VGALO	= $0A
   617 = 001F			VGAMED	= $1F
   618 = 0018			VGAHI	= $18
   619 = 44F9			WIN_LEFT	= DATAORIGIN+$000D
   620 = 44FB			WIN_RIGHT	= DATAORIGIN+$000F
   621 = 44FD			WIN_TOP	= DATAORIGIN+$0011
   622 = 44FF			WIN_BOTTOM	= DATAORIGIN+$0013
   623 = 4501			GRAPHRESULT	= DATAORIGIN+$0015
   624 = 4502			GETCOLOR	= DATAORIGIN+$0016
   625 = 4503			VIDEORAM	= DATAORIGIN+$0017
   626 = 4505			adr.LASTARCCOORDS	= DATAORIGIN+$0019	; [12] RECORD
   627 3C5A			.var LASTARCCOORDS	= adr.LASTARCCOORDS .word
   628 = 4505			LASTARCCOORDS.X	= DATAORIGIN+$0019
   629 = 4507			LASTARCCOORDS.Y	= DATAORIGIN+$001B
   630 = 4509			LASTARCCOORDS.XSTART	= DATAORIGIN+$001D
   631 = 450B			LASTARCCOORDS.YSTART	= DATAORIGIN+$001F
   632 = 450D			LASTARCCOORDS.XEND	= DATAORIGIN+$0021
   633 = 450F			LASTARCCOORDS.YEND	= DATAORIGIN+$0023
   634 = 4511			SCANLINE_WIDTH	= DATAORIGIN+$0025
   635 = 4512			CURRENTX	= DATAORIGIN+$0026
   636 = 4514			CURRENTY	= DATAORIGIN+$0028
   637
   638 = 3C5A 05 45		LASTARCCOORDS
   638 				.endl							; UNIT GRAPH
   639
   640 				; ------------------------------------------------------------
   641
   642 3C5C			.local	JOYSTICK					; UNIT
   643
   644 				; ------------------------------------------------------------
   645
   646 = 000F			JOY_NONE	= $0F
   647 = 000E			JOY_UP	= $0E
   648 = 000D			JOY_DOWN	= $0D
   649 = 000B			JOY_LEFT	= $0B
   650 = 000A			JOY_LEFT_UP	= $0A
   651 = 0009			JOY_LEFT_DOWN	= $09
   652 = 0007			JOY_RIGHT	= $07
   653 = 0006			JOY_RIGHT_UP	= $06
   654 = 0005			JOY_RIGHT_DOWN	= $05
   655 = 0278			JOY_1	= $0278
   656 = 0279			JOY_2	= $0279
   657 = 0278			adr.STICK	= $0278
   658 3C5C			.var STICK	= adr.STICK .word
   659 = 0278			STICK0	= $0278
   660 = 0279			STICK1	= $0279
   661 = 0284			adr.STRIG	= $0284
   662 3C5C			.var STRIG	= adr.STRIG .word
   663 = 0284			STRIG0	= $0284
   664 = 0285			STRIG1	= $0285
   665 = 0270			adr.PADDL	= $0270
   666 3C5C			.var PADDL	= adr.PADDL .word
   667 = 0270			PADDL0	= $0270
   668 = 0271			PADDL1	= $0271
   669 = 0272			PADDL2	= $0272
   670 = 0273			PADDL3	= $0273
   671 = 0274			PADDL4	= $0274
   672 = 0275			PADDL5	= $0275
   673 = 0276			PADDL6	= $0276
   674 = 0277			PADDL7	= $0277
   675 = 027C			adr.PTRIG	= $027C
   676 3C5C			.var PTRIG	= adr.PTRIG .word
   677 = 027C			PTRIG0	= $027C
   678 = 027D			PTRIG1	= $027D
   679 = 027E			PTRIG2	= $027E
   680 = 027F			PTRIG3	= $027F
   681 = 0280			PTRIG4	= $0280
   682 = 0281			PTRIG5	= $0281
   683 = 0282			PTRIG6	= $0282
   684 = 0283			PTRIG7	= $0283
   685 = D010			TRIG0	= $D010
   686 = D011			TRIG1	= $D011
   687
   688 = 3C5C 78 02		STICK
   688 = 3C5E 84 02		STRIG
   688 = 3C60 70 02		PADDL
   688 = 3C62 7C 02		PTRIG
   688 				.endl							; UNIT JOYSTICK
   689
   690 				; ------------------------------------------------------------
   691
   692 3C64			.local	MISC						; UNIT
   693
   694 3C64			.local	DETECTANTIC					; FUNCTION | ASSEMBLER
   695
   696 				; -------------------  ASM Block 00000074  -------------------
   697
   698
   699 				// ANTIC PAL Test for Atari 8-bits
   700 				// (C) 2019 Guillermo Fuenzalida
   701
   702 3C64			antic_loop1
   703 3C64 AD 0B D4			lda vcount
   704 3C67 C9 64			cmp #100
   705 3C69 90 F9			bcc antic_loop1		// wait till scanline 200
   706 3C6B 8D 82 3C			sta scanline
   707 3C6E			antic_loop2
   708 3C6E AD 0B D4			lda vcount
   709 3C71 C9 0A			cmp #10
   710 3C73 30 0A			bmi antic_loop2_fin
   711 3C75 CD 82 3C			cmp scanline
   712 3C78 30 F4			bmi antic_loop2
   713 3C7A 8D 82 3C			sta scanline
   714 3C7D 10 EF			bpl antic_loop2
   715
   716 3C7F			antic_loop2_fin
   717 3C7F A0 00			ldy #$00
   718 3C81 A9 00			lda #0
   719 = 3C82			scanline equ *-1
   720 3C83 C9 87			cmp #135
   721 3C85 30 01			bmi ntsc
   722 3C87 C8				iny
   723 3C88			ntsc
   724 3C88 8C 17 45			sty Result
   725
   726
   727 3C8B			@exit
   728
   729 				; ------------------------------------------------------------
   730
   731 = 4517			RESULT	= DATAORIGIN+$002B
   732 3C8B 60				rts						; ret
   733 				.endl
   734
   735 				; ------------------------------------------------------------
   736
   737 = 0101			adr.BANKS	= $0101
   738 3C8C			.var BANKS	= adr.BANKS .word
   739 = FFF7			DETECTOS	= $FFF7
   740
   741 = 3C8C 01 01		BANKS
   741 				.endl							; UNIT MISC
   742
   743 				; ------------------------------------------------------------
   744
   745 3C8E			.local	MPT						; UNIT
   746
   747 3C8E			.local	TMPT.INIT					; PROCEDURE | ASSEMBLER
   748 3C8E 8D 19 45			sta TMPT
   749 3C91 8C 1A 45			sty TMPT+1
   750 3C94 8D 1B 45			sta PLAYER
   751 3C97 8C 1C 45			sty PLAYER+1
   752 3C9A 18 69 02			add #2
   753 3C9D 90 01			scc
   754 3C9F C8				iny
   755 3CA0 8D 1D 45			sta MODUL
   756 3CA3 8C 1E 45			sty MODUL+1
   757
   758 				; -------------------  ASM Block 00000084  -------------------
   759
   760 3CA6 8A 48			txa:pha
   761
   762 3CA8 AD 19 45 85 82 AD + 	mwa TMPT :bp2
   763
   764 3CB2 A0 00			ldy #0
   765 3CB4 B1 82			lda (:bp2),y
   766 3CB6 18 69 03			add #3		; jsr player+3
   767 3CB9 8D CD 3C			sta adr
   768 3CBC C8				iny
   769 3CBD B1 82			lda (:bp2),y
   770 3CBF 69 00			adc #0
   771 3CC1 8D CE 3C			sta adr+1
   772
   773 3CC4 C8				iny
   774 3CC5 B1 82			lda (:bp2),y
   775 3CC7 AA				tax		; low byte of MPT module to X reg
   776 3CC8 C8				iny
   777 3CC9 B1 82			lda (:bp2),y
   778 3CCB A8				tay		; hi byte of MPT module to Y reg
   779
   780 3CCC 20 FF FF			jsr $ffff
   781 = 3CCD			adr	equ *-2
   782
   783 3CCF 68 AA			pla:tax
   784
   785 				; ------------------------------------------------------------
   786
   787 = 4519			TMPT	= DATAORIGIN+$002D
   788 = 451B			PLAYER	= DATAORIGIN+$002F
   789 = 451D			MODUL	= DATAORIGIN+$0031
   790
   791 = 4519			@VarData	= TMPT
   792 = 0006			@VarDataSize	= 6
   793
   794 3CD1			@exit
   795 					.ifdef @new
   796 					lda <@VarData
   797 					sta :ztmp
   798 					lda >@VarData
   799 					ldy #@VarDataSize-1
   800 					jmp @FreeMem
   801 					els
   802 3CD1 60				rts						; ret
   803 					eif
   804 				.endl
   805
   806 3CD2			.local	TMPT.PLAY					; PROCEDURE | ASSEMBLER
   807 3CD2 8D 1F 45			sta TMPT
   808 3CD5 8C 20 45			sty TMPT+1
   809 3CD8 8D 21 45			sta PLAYER
   810 3CDB 8C 22 45			sty PLAYER+1
   811 3CDE 18 69 02			add #2
   812 3CE1 90 01			scc
   813 3CE3 C8				iny
   814 3CE4 8D 23 45			sta MODUL
   815 3CE7 8C 24 45			sty MODUL+1
   816
   817 				; -------------------  ASM Block 00000085  -------------------
   818
   819 3CEA 8A 48			txa:pha
   820
   821 3CEC 0E 18 45			asl ntsc		; =0 PAL, =4 NTSC
   822 3CEF 90 07			bcc skp
   823
   824 3CF1 A9 04			lda #%00000100
   825 3CF3 8D 18 45			sta ntsc
   826
   827 3CF6 D0 1A			bne quit
   828 3CF8			skp
   829 3CF8 AD 1F 45 8D 07 3D + 	mwa TMPT adr
   830
   831 3D04 A0 01			ldy #1
   832 3D06 B9 00 FF		mov	lda $ff00,y
   833 = 3D07			adr	equ *-2
   834 3D09 99 10 3D			sta ptr,y
   835 3D0C 88				dey
   836 3D0D 10 F7			bpl mov
   837
   838 3D0F 20 00 FF			jsr $ff00		; jmp (TMPT)	6502 buggy indirect jump
   839 = 3D10			ptr	equ *-2
   840
   841 3D12 68 AA		quit	pla:tax
   842
   843 				; ------------------------------------------------------------
   844
   845 = 451F			TMPT	= DATAORIGIN+$0033
   846 = 4521			PLAYER	= DATAORIGIN+$0035
   847 = 4523			MODUL	= DATAORIGIN+$0037
   848
   849 = 451F			@VarData	= TMPT
   850 = 0006			@VarDataSize	= 6
   851
   852 3D14			@exit
   853 					.ifdef @new
   854 					lda <@VarData
   855 					sta :ztmp
   856 					lda >@VarData
   857 					ldy #@VarDataSize-1
   858 					jmp @FreeMem
   859 					els
   860 3D14 60				rts						; ret
   861 					eif
   862 				.endl
   863
   864 				; ------------------------------------------------------------
   865 				; ------------------------------------------------------------
   866 3D15			@UnitInit
   867
   868 				; optimize FAIL ('MISC.DETECTANTIC', MPT), line = 134
   869
   870 3D15 20 64 3C			jsr MISC.DETECTANTIC
   871 3D18 AD 17 45			lda MISC.DETECTANTIC.RESULT
   872 3D1B F0 08			jeq l_1B82
   873
   874 				; optimize OK (MPT), line = 135
   875
   876 3D1D A9 00			lda #$00
   877 3D1F 8D 18 45			sta NTSC
   878 3D22 4C 2A 3D			jmp l_1B90
   879 3D25			l_1B82
   880
   881 				; optimize OK (MPT), line = 137
   882
   883 3D25 A9 04			lda #$04
   884 3D27 8D 18 45			sta NTSC
   885 3D2A			l_1B90
   886
   887 3D2A 60				rts
   888
   889 				; ------------------------------------------------------------
   890
   891 = 4518			NTSC	= DATAORIGIN+$002C
   892
   893 				.endl							; UNIT MPT
   894
   895 				; ------------------------------------------------------------
   896
   897 3D2B			.local	SOKO_LV						; UNIT
   898
   899 3D2B			.local	GETLV						; PROCEDURE
   900
   901 				; optimize OK (SOKO_LV), line = 170
   902
   903 3D2B A9 00			lda #$00
   904 3D2D 8D EE 46			sta OFFSET
   905
   906 				; optimize OK (SOKO_LV), line = 171
   907
   908 3D30 8D 2D 45			sta CRATES
   909
   910 				; optimize OK (SOKO_LV), line = 173
   911
   912 3D33 AD EA 46			lda LV
   913 3D36 85 9D			sta :STACKORIGIN+9
   914 3D38 AD EB 46			lda LV+1
   915 3D3B 06 9D			asl :STACKORIGIN+9
   916 3D3D 2A				rol @
   917 3D3E 85 AD			sta :STACKORIGIN+STACKWIDTH+9
   918 3D40 A5 9D			lda :STACKORIGIN+9
   919 3D42 18 69 00			add #$00
   920 3D45 A8				tay
   921 3D46 A5 AD			lda :STACKORIGIN+STACKWIDTH+9
   922 3D48 69 00			adc #$00
   923 3D4A 85 AD			sta :STACKORIGIN+STACKWIDTH+9
   924 3D4C B9 22 46			lda adr.LEVELS,y
   925 3D4F 8D 2E 45			sta LEVEL
   926 3D52 85 82			sta :bp2
   927 3D54 B9 23 46			lda adr.LEVELS+1,y
   928 3D57 8D 2F 45			sta LEVEL+1
   929 3D5A 85 83			sta :bp2+1
   930 				; optimize OK (SOKO_LV), line = 174
   931 3D5C A0 00			ldy #$00
   932 3D5E B1 82			lda (:bp2),y
   933 3D60 38 E9 01			sub #$01
   934 3D63 8D 29 45			sta LVX
   935
   936 				; optimize OK (SOKO_LV), line = 175
   937
   938 3D66 C8				iny
   939 3D67 B1 82			lda (:bp2),y
   940 3D69 38 E9 01			sub #$01
   941 3D6C 8D 2A 45			sta LVY
   942
   943 				; optimize OK (SOKO_LV), line = 176
   944
   945 3D6F AD EA 46			lda LV
   946 3D72 0A				asl @
   947 3D73 A8				tay
   948 3D74 B9 22 46			lda adr.LEVELS,y
   949 3D77 18 69 02			add #$02
   950 3D7A 8D 2E 45			sta LEVEL
   951 3D7D B9 23 46			lda adr.LEVELS+1,y
   952 3D80 69 00			adc #$00
   953 3D82 8D 2F 45			sta LEVEL+1
   954
   955 				; optimize OK (SOKO_LV), line = 177
   956
   957 3D85 AC 29 45			ldy LVX
   958 3D88 C8				iny
   959 3D89 8C EF 46			sty ROW
   960
   961 				; optimize OK (SOKO_LV), line = 179
   962
   963 3D8C AD 2A 45			lda LVY
   964 3D8F 18 69 01			add #$01
   965 3D92 85 9F			sta :STACKORIGIN+11
   966 3D94 A9 00			lda #$00
   967 3D96 69 00			adc #$00
   968 3D98 85 AF			sta :STACKORIGIN+STACKWIDTH+11
   969 3D9A A9 00			lda #$00
   970 3D9C 69 00			adc #$00
   971 3D9E 85 BF			sta :STACKORIGIN+STACKWIDTH*2+11
   972 3DA0 A9 00			lda #$00
   973 3DA2 69 00			adc #$00
   974 3DA4 85 CF			sta :STACKORIGIN+STACKWIDTH*3+11
   975 3DA6 A9 0C			lda #$0C
   976 3DA8 38 E5 9F			sub :STACKORIGIN+11
   977 3DAB 85 9E			sta :STACKORIGIN+10
   978 3DAD A9 00			lda #$00
   979 3DAF E5 AF			sbc :STACKORIGIN+STACKWIDTH+11
   980 3DB1 85 AE			sta :STACKORIGIN+STACKWIDTH+10
   981 3DB3 A9 00			lda #$00
   982 3DB5 E5 BF			sbc :STACKORIGIN+STACKWIDTH*2+11
   983 3DB7 85 BE			sta :STACKORIGIN+STACKWIDTH*2+10
   984 3DB9 A9 00			lda #$00
   985 3DBB E5 CF			sbc :STACKORIGIN+STACKWIDTH*3+11
   986 3DBD 85 CE			sta :STACKORIGIN+STACKWIDTH*3+10
   987 3DBF 46 CE			lsr :STACKORIGIN+STACKWIDTH*3+10
   988 3DC1 66 BE			ror :STACKORIGIN+STACKWIDTH*2+10
   989 3DC3 66 AE			ror :STACKORIGIN+STACKWIDTH+10
   990 3DC5 66 9E			ror :STACKORIGIN+10
   991 3DC7 A9 50			lda #$50
   992 3DC9 85 8C			sta :ecx
   993 3DCB A9 00			lda #$00
   994 3DCD 85 8D			sta :ecx+1
   995 3DCF A5 9E			lda :STACKORIGIN+10
   996 3DD1 85 84			sta :eax
   997 3DD3 A5 AE			lda :STACKORIGIN+STACKWIDTH+10
   998 3DD5 85 85			sta :eax+1
   999 					.ifdef fmulinit
  1000 					fmulu_16
  1001 					els
  1002 3DD7 20 6E 3B			imulCX
  1003 					eif
  1004 3DDA A5 84			lda :eax
  1005 3DDC 85 9E			sta :STACKORIGIN+10
  1006 3DDE A5 86			lda :eax+2
  1007 3DE0 85 BE			sta :STACKORIGIN+STACKWIDTH*2+10
  1008 3DE2 A5 87			lda :eax+3
  1009 3DE4 85 CE			sta :STACKORIGIN+STACKWIDTH*3+10
  1010 3DE6 A5 58			lda ATARI.SAVMSC
  1011 3DE8 18 65 9E			add :STACKORIGIN+10
  1012 3DEB 85 9D			sta :STACKORIGIN+9
  1013 3DED A5 59			lda ATARI.SAVMSC+1
  1014 3DEF 65 85			adc :eax+1
  1015 3DF1 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  1016 3DF3 AD 29 45			lda LVX
  1017 3DF6 18 69 01			add #$01
  1018 3DF9 85 9F			sta :STACKORIGIN+11
  1019 3DFB A9 00			lda #$00
  1020 3DFD 69 00			adc #$00
  1021 3DFF 85 AF			sta :STACKORIGIN+STACKWIDTH+11
  1022 3E01 A9 14			lda #$14
  1023 3E03 38 E5 9F			sub :STACKORIGIN+11
  1024 3E06 85 9E			sta :STACKORIGIN+10
  1025 3E08 A9 00			lda #$00
  1026 3E0A E5 AF			sbc :STACKORIGIN+STACKWIDTH+11
  1027 3E0C 85 AE			sta :STACKORIGIN+STACKWIDTH+10
  1028 3E0E A5 9D			lda :STACKORIGIN+9
  1029 3E10 18 65 9E			add :STACKORIGIN+10
  1030 3E13 8D 20 46			sta CENTERED
  1031 3E16 A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  1032 3E18 65 AE			adc :STACKORIGIN+STACKWIDTH+10
  1033 3E1A 8D 21 46			sta CENTERED+1
  1034
  1035 				; optimize OK (SOKO_LV), line = 181
  1036
  1037 3E1D A9 00			lda #$00
  1038 3E1F 8D ED 46			sta IY
  1039
  1040 3E22			l_1C05
  1041 				; --- ForToDoCondition
  1042 3E22 AD ED 46			lda IY
  1043 3E25 CD 2A 45			cmp LVY
  1044 3E28 90 02			scc
  1045 3E2A D0 72			jne l_1C13
  1046
  1047 				; optimize OK (SOKO_LV), line = 182
  1048
  1049 3E2C A9 00			lda #$00
  1050 3E2E 8D EC 46			sta IX
  1051
  1052 3E31			l_1C1E
  1053 				; --- ForToDoCondition
  1054 3E31 AD EC 46			lda IX
  1055 3E34 CD 29 45			cmp LVX
  1056 3E37 90 02			scc
  1057 3E39 D0 54			jne l_1C2C
  1058
  1059 				; optimize OK (SOKO_LV), line = 183
  1060
  1061 3E3B AD 2E 45			lda LEVEL
  1062 3E3E 18 6D EE 46			add OFFSET
  1063 3E42 85 82			sta :bp2
  1064 3E44 AD 2F 45			lda LEVEL+1
  1065 3E47 69 00			adc #$00
  1066 3E49 85 83			sta :bp2+1
  1067 3E4B AC EC 46			ldy IX
  1068 3E4E B1 82			lda (:bp2),y
  1069 3E50 8D F0 46			sta TMPCHR
  1070
  1071 				; optimize OK (SOKO_LV), line = 185
  1072
  1073 3E53 C9 40			cmp #$40
  1074 3E55 F0 04			jeq l_1C59x
  1075 3E57 C9 2B			cmp #$2B
  1076 3E59 D0 0C			jne l_1C59
  1077 3E5B			l_1C59x
  1078
  1079 				; optimize OK (SOKO_LV), line = 186
  1080
  1081 3E5B AD EC 46			lda IX
  1082 3E5E 8D 2B 45			sta PLAYERX
  1083
  1084 				; optimize OK (SOKO_LV), line = 187
  1085
  1086 3E61 AD ED 46			lda IY
  1087 3E64 8D 2C 45			sta PLAYERY
  1088 3E67			l_1C59
  1089
  1090 				; optimize OK (SOKO_LV), line = 190
  1091
  1092 3E67 AD F0 46			lda TMPCHR
  1093 3E6A C9 24			cmp #$24
  1094 3E6C D0 03			jne l_1C7A
  1095 3E6E EE 2D 45			inc CRATES
  1096 3E71			l_1C7A
  1097
  1098 				; optimize OK (SOKO_LV), line = 192
  1099
  1100 3E71 A9 14			lda #$14
  1101 3E73 85 8C			sta :ecx
  1102 3E75 AD ED 46			lda IY
  1103 3E78 85 84			sta :eax
  1104 					.ifdef fmulinit
  1105 					fmulu_8
  1106 					els
  1107 3E7A 20 56 3B			imulCL
  1108 					eif
  1109 3E7D A5 84			lda :eax
  1110 3E7F 18 6D EC 46			add IX
  1111 3E83 A8				tay
  1112 3E84 AD F0 46			lda TMPCHR
  1113 3E87 99 30 45			sta adr.BOARD,y
  1114
  1115 				; --- ForToDoEpilog
  1116 3E8A EE EC 46			inc IX
  1117 3E8D D0 A2			jne l_1C1E
  1118 3E8F			l_1C2C
  1119
  1120 				; optimize OK (SOKO_LV), line = 194
  1121
  1122 3E8F AD EE 46			lda OFFSET
  1123 3E92 18 6D EF 46			add ROW
  1124 3E96 8D EE 46			sta OFFSET
  1125
  1126 				; --- ForToDoEpilog
  1127 3E99 EE ED 46			inc IY
  1128 3E9C D0 84			jne l_1C05
  1129 3E9E			l_1C13
  1130
  1131 				; ------------------------------------------------------------
  1132
  1133 = 46EA			LV	= DATAORIGIN+$01FE
  1134 = 46EC			IX	= DATAORIGIN+$0200
  1135 = 46ED			IY	= DATAORIGIN+$0201
  1136 = 46EE			OFFSET	= DATAORIGIN+$0202
  1137 = 46EF			ROW	= DATAORIGIN+$0203
  1138 = 46F0			TMPCHR	= DATAORIGIN+$0204
  1139
  1140 = 46EA			@VarData	= LV
  1141 = 0007			@VarDataSize	= 7
  1142
  1143 3E9E			@exit
  1144 					.ifdef @new
  1145 					lda <@VarData
  1146 					sta :ztmp
  1147 					lda >@VarData
  1148 					ldy #@VarDataSize-1
  1149 					jmp @FreeMem
  1150 					els
  1151 3E9E 60				rts						; ret
  1152 					eif
  1153 				.endl
  1154
  1155 				; ------------------------------------------------------------
  1156 				; ------------------------------------------------------------
  1157 3E9F			@UnitInit
  1158
  1159 3E9F 60				rts
  1160
  1161 				; ------------------------------------------------------------
  1162
  1163 = 0023			S_WAL	= $23
  1164 = 0078			S_GRA	= $78
  1165 = 0040			S_PLA	= $40
  1166 = 002B			S_PLD	= $2B
  1167 = 002E			S_DEC	= $2E
  1168 = 0024			S_CRA	= $24
  1169 = 002A			S_CRD	= $2A
  1170 = 0020			S_FLO	= $20
  1171 = 0014			MAX_X	= $14
  1172 = 000C			MAX_Y	= $0C
  1173 = 0003			MIN_X	= $03
  1174 = 0005			MIN_Y	= $05
  1175 = 0028			SCR_ROW	= $28
  1176 = 0063			SET_SIZE	= $63
  1177 = 4529			LVX	= DATAORIGIN+$003D
  1178 = 452A			LVY	= DATAORIGIN+$003E
  1179 = 452B			PLAYERX	= DATAORIGIN+$003F
  1180 = 452C			PLAYERY	= DATAORIGIN+$0040
  1181 = 452D			CRATES	= DATAORIGIN+$0041
  1182 = 452E			LEVEL	= DATAORIGIN+$0042
  1183 = 4530			adr.BOARD	= [DATAORIGIN+$0044] .array [12] [20]
  1184 3EA0			.var BOARD	= adr.BOARD .word
  1185 = 4620			CENTERED	= DATAORIGIN+$0134
  1186 = 4622			adr.LEVELS	= [DATAORIGIN+$0136] .array [100] .word
  1187 3EA0			.var LEVELS	= adr.LEVELS .word
  1188
  1189 = 3EA0 30 45		BOARD
  1189 = 3EA2 22 46		LEVELS
  1189 				.endl							; UNIT SOKO_LV
  1190
  1191 				; ------------------------------------------------------------
  1192
  1193 3EA4			.local	SOKO_DRAW					; UNIT
  1194
  1195 3EA4			.local	PUTTILE						; PROCEDURE | REGISTER
  1196
  1197 				; optimize OK (SOKO_DRAW), line = 50
  1198
  1199 3EA4 A4 89			ldy A+1
  1200 3EA6 84 81			sty :bp+1
  1201 3EA8 A4 88			ldy A
  1202 3EAA A5 8C			lda T
  1203 3EAC 91 80			sta (:bp),y
  1204
  1205 				; optimize OK (SOKO_DRAW), line = 51
  1206
  1207 3EAE 18 69 01			add #$01
  1208 3EB1 A4 88 84 82 A4 89 + 	mwy A :bp2
  1209 3EB9 A0 01			ldy #$01
  1210 3EBB 91 82			sta (:bp2),y
  1211
  1212 				; optimize OK (SOKO_DRAW), line = 52
  1213
  1214 3EBD A5 8C			lda T
  1215 3EBF 18 69 20			add #$20
  1216 3EC2 A0 28			ldy #$28
  1217 3EC4 91 82			sta (:bp2),y
  1218
  1219 				; optimize OK (SOKO_DRAW), line = 53
  1220
  1221 3EC6 A5 8C			lda T
  1222 3EC8 18 69 21			add #$21
  1223 3ECB C8				iny
  1224 3ECC 91 82			sta (:bp2),y
  1225
  1226 				; ------------------------------------------------------------
  1227
  1228 = 0088			A	= :EDX
  1229 = 008C			T	= :ECX
  1230 3ECE			@exit
  1231 					.ifdef @new
  1232 					lda <@VarData
  1233 					sta :ztmp
  1234 					lda >@VarData
  1235 					ldy #@VarDataSize-1
  1236 					jmp @FreeMem
  1237 					els
  1238 3ECE 60				rts						; ret
  1239 					eif
  1240 				.endl
  1241
  1242 3ECF			.local	DRAWGRASS					; PROCEDURE
  1243
  1244 				; optimize OK (SOKO_DRAW), line = 63
  1245
  1246 3ECF A9 00			lda #$00
  1247 3ED1 8D F5 46			sta OFFSET
  1248 3ED4 8D F6 46			sta OFFSET+1
  1249
  1250 				; optimize OK (SOKO_DRAW), line = 64
  1251
  1252 3ED7 8D F4 46			sta IY
  1253
  1254 3EDA			l_1CEA
  1255 				; --- ForToDoCondition
  1256 3EDA AD F4 46			lda IY
  1257 3EDD C9 0C			cmp #$0C
  1258 3EDF B0 4F			jcs l_1CF8
  1259
  1260 				; optimize OK (SOKO_DRAW), line = 65
  1261
  1262 3EE1 A9 00			lda #$00
  1263 3EE3 8D F3 46			sta IX
  1264
  1265 3EE6			l_1D01
  1266 				; --- ForToDoCondition
  1267 3EE6 AD F3 46			lda IX
  1268 3EE9 C9 14			cmp #$14
  1269 3EEB B0 30			jcs l_1D0F
  1270
  1271 				; optimize OK (SOKO_DRAW), line = 66
  1272
  1273 3EED A5 58			lda ATARI.SAVMSC
  1274 3EEF 18 6D F5 46			add OFFSET
  1275 3EF3 85 9E			sta :STACKORIGIN+10
  1276 3EF5 A5 59			lda ATARI.SAVMSC+1
  1277 3EF7 6D F6 46			adc OFFSET+1
  1278 3EFA 85 AE			sta :STACKORIGIN+STACKWIDTH+10
  1279 3EFC A9 00			lda #$00
  1280 3EFE 85 AF			sta :STACKORIGIN+STACKWIDTH+11
  1281 3F00 AD F3 46			lda IX
  1282 3F03 0A				asl @
  1283 3F04 26 AF			rol :STACKORIGIN+STACKWIDTH+11
  1284 3F06 18 65 9E			add :STACKORIGIN+10
  1285 3F09 85 88			sta PUTTILE.A
  1286 3F0B A5 AE			lda :STACKORIGIN+STACKWIDTH+10
  1287 3F0D 65 AF			adc :STACKORIGIN+STACKWIDTH+11
  1288 3F0F 85 89			sta PUTTILE.A+1
  1289 3F11 A9 02			lda #$02
  1290 3F13 85 8C			sta PUTTILE.T
  1291 3F15 20 A4 3E			jsr PUTTILE
  1292
  1293 				; --- ForToDoEpilog
  1294 3F18 EE F3 46			inc IX
  1295 3F1B D0 C9			jne l_1D01
  1296 3F1D			l_1D0F
  1297
  1298 				; optimize OK (SOKO_DRAW), line = 68
  1299
  1300 3F1D AD F5 46			lda OFFSET
  1301 3F20 18 69 50			add #$50
  1302 3F23 8D F5 46			sta OFFSET
  1303 3F26 90 03			scc
  1304 3F28 EE F6 46			inc OFFSET+1
  1305
  1306 				; --- ForToDoEpilog
  1307 3F2B EE F4 46			inc IY
  1308 3F2E D0 AA			jne l_1CEA
  1309 3F30			l_1CF8
  1310
  1311 				; ------------------------------------------------------------
  1312
  1313 = 46F3			IX	= DATAORIGIN+$0207
  1314 = 46F4			IY	= DATAORIGIN+$0208
  1315 = 46F5			OFFSET	= DATAORIGIN+$0209
  1316
  1317 = 46F3			@VarData	= IX
  1318 = 0004			@VarDataSize	= 4
  1319
  1320 3F30			@exit
  1321 					.ifdef @new
  1322 					lda <@VarData
  1323 					sta :ztmp
  1324 					lda >@VarData
  1325 					ldy #@VarDataSize-1
  1326 					jmp @FreeMem
  1327 					els
  1328 3F30 60				rts						; ret
  1329 					eif
  1330 				.endl
  1331
  1332 3F31			.local	DRAWBOARD					; PROCEDURE
  1333
  1334 				; optimize OK (SOKO_DRAW), line = 80
  1335
  1336 3F31 A9 00			lda #$00
  1337 3F33 8D F9 46			sta OFFSET
  1338 3F36 8D FA 46			sta OFFSET+1
  1339
  1340 				; optimize OK (SOKO_DRAW), line = 82
  1341
  1342 3F39 8D F8 46			sta IY
  1343
  1344 3F3C			l_1D40
  1345 				; --- ForToDoCondition
  1346 3F3C AD F8 46			lda IY
  1347 3F3F CD 2A 45			cmp SOKO_LV.LVY
  1348 3F42 90 05			scc
  1349 3F44 F0 03 4C 35 40		jne l_1D4E
  1350
  1351 				; optimize OK (SOKO_DRAW), line = 83
  1352
  1353 3F49 A9 00			lda #$00
  1354 3F4B 8D F7 46			sta IX
  1355
  1356 3F4E			l_1D59
  1357 				; --- ForToDoCondition
  1358 3F4E AD F7 46			lda IX
  1359 3F51 CD 29 45			cmp SOKO_LV.LVX
  1360 3F54 90 05			scc
  1361 3F56 F0 03 4C 1F 40		jne l_1D67
  1362
  1363 				; optimize OK (SOKO_DRAW), line = 84
  1364
  1365 3F5B A9 14			lda #$14
  1366 3F5D 85 8C			sta :ecx
  1367 3F5F AD F8 46			lda IY
  1368 3F62 85 84			sta :eax
  1369 					.ifdef fmulinit
  1370 					fmulu_8
  1371 					els
  1372 3F64 20 56 3B			imulCL
  1373 					eif
  1374 3F67 A5 84			lda :eax
  1375 3F69 18 6D F7 46			add IX
  1376 3F6D A8				tay
  1377 3F6E B9 30 45			lda SOKO_LV.adr.BOARD,y
  1378 3F71 8D FC 46			sta @CASETMP_0004
  1379 3F74 C9 23			cmp #$23
  1380 3F76 D0 08			jne l_1D7F
  1381 				@
  1382
  1383 				; optimize OK (SOKO_DRAW), line = 85
  1384
  1385 3F78 A9 04			lda #$04
  1386 3F7A 8D FB 46			sta TILE
  1387
  1388 3F7D 4C E9 3F			jmp a_0004
  1389 3F80			l_1D7F
  1390 3F80 C9 20			cmp #$20
  1391 3F82 D0 08			jne l_1D8C
  1392 				@
  1393
  1394 				; optimize OK (SOKO_DRAW), line = 86
  1395
  1396 3F84 A9 00			lda #$00
  1397 3F86 8D FB 46			sta TILE
  1398
  1399 3F89 4C E9 3F			jmp a_0004
  1400 3F8C			l_1D8C
  1401 3F8C C9 24			cmp #$24
  1402 3F8E D0 08			jne l_1D99
  1403 				@
  1404
  1405 				; optimize OK (SOKO_DRAW), line = 87
  1406
  1407 3F90 A9 86			lda #$86
  1408 3F92 8D FB 46			sta TILE
  1409
  1410 3F95 4C E9 3F			jmp a_0004
  1411 3F98			l_1D99
  1412 3F98 C9 2A			cmp #$2A
  1413 3F9A D0 08			jne l_1DA6
  1414 				@
  1415
  1416 				; optimize OK (SOKO_DRAW), line = 88
  1417
  1418 3F9C A9 06			lda #$06
  1419 3F9E 8D FB 46			sta TILE
  1420
  1421 3FA1 4C E9 3F			jmp a_0004
  1422 3FA4			l_1DA6
  1423 3FA4 C9 2E			cmp #$2E
  1424 3FA6 D0 08			jne l_1DB3
  1425 				@
  1426
  1427 				; optimize OK (SOKO_DRAW), line = 89
  1428
  1429 3FA8 A9 08			lda #$08
  1430 3FAA 8D FB 46			sta TILE
  1431
  1432 3FAD 4C E9 3F			jmp a_0004
  1433 3FB0			l_1DB3
  1434 3FB0 C9 78			cmp #$78
  1435 3FB2 D0 08			jne l_1DC0
  1436 				@
  1437
  1438 				; optimize OK (SOKO_DRAW), line = 90
  1439
  1440 3FB4 A9 02			lda #$02
  1441 3FB6 8D FB 46			sta TILE
  1442
  1443 3FB9 4C E9 3F			jmp a_0004
  1444 3FBC			l_1DC0
  1445 3FBC C9 40			cmp #$40
  1446 3FBE D0 14			jne l_1DCD
  1447 				@
  1448
  1449 				; optimize OK (SOKO_DRAW), line = 91
  1450
  1451 3FC0 AC F1 46 84 82 AC + 	mwy GFX_PLA :bp2
  1452 3FCA A0 00			ldy #$00
  1453 3FCC B1 82			lda (:bp2),y
  1454 3FCE 8D FB 46			sta TILE
  1455
  1456 3FD1 4C E9 3F			jmp a_0004
  1457 3FD4			l_1DCD
  1458 3FD4 C9 2B			cmp #$2B
  1459 3FD6 D0 11			jne l_1DDC
  1460 				@
  1461
  1462 				; optimize OK (SOKO_DRAW), line = 92
  1463
  1464 3FD8 AC F1 46 84 82 AC + 	mwy GFX_PLA :bp2
  1465 3FE2 A0 00			ldy #$00
  1466 3FE4 B1 82			lda (:bp2),y
  1467 3FE6 8D FB 46			sta TILE
  1468
  1469 3FE9			l_1DDC
  1470 3FE9			a_0004
  1471
  1472 				; optimize OK (SOKO_DRAW), line = 94
  1473
  1474 3FE9 AD 20 46			lda SOKO_LV.CENTERED
  1475 3FEC 18 6D F9 46			add OFFSET
  1476 3FF0 85 9E			sta :STACKORIGIN+10
  1477 3FF2 AD 21 46			lda SOKO_LV.CENTERED+1
  1478 3FF5 6D FA 46			adc OFFSET+1
  1479 3FF8 85 AE			sta :STACKORIGIN+STACKWIDTH+10
  1480 3FFA A9 00			lda #$00
  1481 3FFC 85 AF			sta :STACKORIGIN+STACKWIDTH+11
  1482 3FFE AD F7 46			lda IX
  1483 4001 0A				asl @
  1484 4002 26 AF			rol :STACKORIGIN+STACKWIDTH+11
  1485 4004 18 65 9E			add :STACKORIGIN+10
  1486 4007 85 88			sta PUTTILE.A
  1487 4009 A5 AE			lda :STACKORIGIN+STACKWIDTH+10
  1488 400B 65 AF			adc :STACKORIGIN+STACKWIDTH+11
  1489 400D 85 89			sta PUTTILE.A+1
  1490 400F AD FB 46			lda TILE
  1491 4012 85 8C			sta PUTTILE.T
  1492 4014 20 A4 3E			jsr PUTTILE
  1493
  1494 				; --- ForToDoEpilog
  1495 4017 EE F7 46			inc IX
  1496 401A F0 03 4C 4E 3F		jne l_1D59
  1497 401F			l_1D67
  1498
  1499 				; optimize OK (SOKO_DRAW), line = 96
  1500
  1501 401F AD F9 46			lda OFFSET
  1502 4022 18 69 50			add #$50
  1503 4025 8D F9 46			sta OFFSET
  1504 4028 90 03			scc
  1505 402A EE FA 46			inc OFFSET+1
  1506
  1507 				; --- ForToDoEpilog
  1508 402D EE F8 46			inc IY
  1509 4030 F0 03 4C 3C 3F		jne l_1D40
  1510 4035			l_1D4E
  1511
  1512 				; ------------------------------------------------------------
  1513
  1514 = 46F7			IX	= DATAORIGIN+$020B
  1515 = 46F8			IY	= DATAORIGIN+$020C
  1516 = 46F9			OFFSET	= DATAORIGIN+$020D
  1517 = 46FB			TILE	= DATAORIGIN+$020F
  1518 = 46FC			@CASETMP_0004	= DATAORIGIN+$0210
  1519
  1520 = 46F7			@VarData	= IX
  1521 = 0006			@VarDataSize	= 6
  1522
  1523 4035			@exit
  1524 					.ifdef @new
  1525 					lda <@VarData
  1526 					sta :ztmp
  1527 					lda >@VarData
  1528 					ldy #@VarDataSize-1
  1529 					jmp @FreeMem
  1530 					els
  1531 4035 60				rts						; ret
  1532 					eif
  1533 				.endl
  1534
  1535 				; ------------------------------------------------------------
  1536 				; ------------------------------------------------------------
  1537 4036			@UnitInit
  1538
  1539 4036 60				rts
  1540
  1541 				; ------------------------------------------------------------
  1542
  1543 = 0000			GFX_FLO	= $00
  1544 = 0002			GFX_GRA	= $02
  1545 = 0004			GFX_WAL	= $04
  1546 = 0006			GFX_CRD	= $06
  1547 = 0086			GFX_CRA	= $86
  1548 = 0008			GFX_DEC	= $08
  1549 = 0016			PLA_UP	= $16
  1550 = 0012			PLA_DOWN	= $12
  1551 = 000A			PLA_RIGHT	= $0A
  1552 = 000E			PLA_LEFT	= $0E
  1553 = 001A			PLA_WAVE	= $1A
  1554 = 46F1			GFX_PLA	= DATAORIGIN+$0205
  1555
  1556 				.endl							; UNIT SOKO_DRAW
  1557
  1558 4037			.local	SETVBK						; PROCEDURE | ASSEMBLER
  1559
  1560 				; -------------------  ASM Block 00000087  -------------------
  1561
  1562 4037 AD 07 47		  lda mode
  1563 403A AE 08 47		  ldx msb
  1564 403D AC 09 47		  ldy lsb
  1565 4040 20 5C E4		  jsr SETVBV
  1566
  1567 				; ------------------------------------------------------------
  1568
  1569 = 4707			MODE	= DATAORIGIN+$021B
  1570 = 4708			MSB	= DATAORIGIN+$021C
  1571 = 4709			LSB	= DATAORIGIN+$021D
  1572
  1573 = 4707			@VarData	= MODE
  1574 = 0003			@VarDataSize	= 3
  1575
  1576 4043			@exit
  1577 					.ifdef @new
  1578 					lda <@VarData
  1579 					sta :ztmp
  1580 					lda >@VarData
  1581 					ldy #@VarDataSize-1
  1582 					jmp @FreeMem
  1583 					els
  1584 4043 60				rts						; ret
  1585 					eif
  1586 				.endl
  1587
  1588 4044			.local	EXITVBK						; PROCEDURE | ASSEMBLER | INLINE
  1589
  1590 					.MACRO m@INLINE
  1591 				
  1592 				; -------------------  ASM Block 00000088  -------------------
  1593 				
  1594 				  jmp XITVBV
  1595 				
  1596 					.ENDM
  1597 4044			@exit
  1598 				.endl
  1599
  1600 4044			.local	MAKEMOVE					; PROCEDURE
  1601 4044 8D 0A 47			sta JOY
  1602
  1603 				; optimize OK (main.pas), line = 65
  1604
  1605 4047 A9 00			lda #$00
  1606 4049 8D 0B 47			sta UPDATEPOS
  1607
  1608 				; optimize OK (main.pas), line = 66
  1609
  1610 404C AD 2B 45			lda SOKO_LV.PLAYERX
  1611 404F 8D 0C 47			sta PX
  1612 4052 AD 2C 45			lda SOKO_LV.PLAYERY
  1613 4055 8D 0D 47			sta PY
  1614
  1615 				; optimize OK (main.pas), line = 67
  1616
  1617 4058 A9 14			lda #$14
  1618 405A 85 8C			sta :ecx
  1619 405C AD 2C 45			lda SOKO_LV.PLAYERY
  1620 405F 85 84			sta :eax
  1621 					.ifdef fmulinit
  1622 					fmulu_8
  1623 					els
  1624 4061 20 56 3B			imulCL
  1625 					eif
  1626 4064 A5 84			lda :eax
  1627 4066 18 6D 2B 45			add SOKO_LV.PLAYERX
  1628 406A 85 9D			sta :STACKORIGIN+9
  1629 406C A5 85			lda :eax+1
  1630 406E 69 00			adc #$00
  1631 4070 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  1632 4072 A9 30			lda <SOKO_LV.adr.BOARD
  1633 4074 18 65 9D			add :STACKORIGIN+9
  1634 4077 8D 0E 47			sta STEP0
  1635 407A A9 45			lda >SOKO_LV.adr.BOARD
  1636 407C 65 AD			adc :STACKORIGIN+STACKWIDTH+9
  1637 407E 8D 0F 47			sta STEP0+1
  1638
  1639 				; optimize OK (main.pas), line = 69
  1640
  1641 4081 AD 0A 47			lda JOY
  1642 4084 8D 14 47			sta @CASETMP_0005
  1643 4087 C9 07			cmp #$07
  1644 4089 D0 38			jne l_1E3F
  1645 				@
  1646
  1647 				; optimize OK (main.pas), line = 71
  1648
  1649 408B AD 0E 47			lda STEP0
  1650 408E 18 69 01			add #$01
  1651 4091 8D 10 47			sta STEP1
  1652 4094 AD 0F 47			lda STEP0+1
  1653 4097 69 00			adc #$00
  1654 4099 8D 11 47			sta STEP1+1
  1655
  1656 				; optimize OK (main.pas), line = 72
  1657
  1658 409C AD 10 47			lda STEP1
  1659 409F 18 69 01			add #$01
  1660 40A2 8D 12 47			sta STEP2
  1661 40A5 AD 11 47			lda STEP1+1
  1662 40A8 69 00			adc #$00
  1663 40AA 8D 13 47			sta STEP2+1
  1664
  1665 				; optimize FAIL (0, main.pas), line = 73
  1666
  1667 40AD EE 0C 47			inc PX
  1668
  1669 				; optimize OK (main.pas), line = 74
  1670
  1671 40B0 AC F1 46 84 82 AC + 	mwy SOKO_DRAW.GFX_PLA :bp2
  1672 40BA A0 00			ldy #$00
  1673 40BC A9 0A			lda #$0A
  1674 40BE 91 82			sta (:bp2),y
  1675
  1676 40C0 4C 74 41			jmp a_0005
  1677 40C3			l_1E3F
  1678 40C3 C9 0B			cmp #$0B
  1679 40C5 D0 38			jne l_1E62
  1680 				@
  1681
  1682 				; optimize OK (main.pas), line = 77
  1683
  1684 40C7 AD 0E 47			lda STEP0
  1685 40CA 38 E9 01			sub #$01
  1686 40CD 8D 10 47			sta STEP1
  1687 40D0 AD 0F 47			lda STEP0+1
  1688 40D3 E9 00			sbc #$00
  1689 40D5 8D 11 47			sta STEP1+1
  1690
  1691 				; optimize OK (main.pas), line = 78
  1692
  1693 40D8 AD 10 47			lda STEP1
  1694 40DB 38 E9 01			sub #$01
  1695 40DE 8D 12 47			sta STEP2
  1696 40E1 AD 11 47			lda STEP1+1
  1697 40E4 E9 00			sbc #$00
  1698 40E6 8D 13 47			sta STEP2+1
  1699
  1700 				; optimize FAIL (0, main.pas), line = 79
  1701
  1702 40E9 CE 0C 47			dec PX
  1703
  1704 				; optimize OK (main.pas), line = 80
  1705
  1706 40EC AC F1 46 84 82 AC + 	mwy SOKO_DRAW.GFX_PLA :bp2
  1707 40F6 A0 00			ldy #$00
  1708 40F8 A9 0E			lda #$0E
  1709 40FA 91 82			sta (:bp2),y
  1710
  1711 40FC 4C 74 41			jmp a_0005
  1712 40FF			l_1E62
  1713 40FF C9 0E			cmp #$0E
  1714 4101 D0 38			jne l_1E85
  1715 				@
  1716
  1717 				; optimize OK (main.pas), line = 83
  1718
  1719 4103 AD 0E 47			lda STEP0
  1720 4106 38 E9 14			sub #$14
  1721 4109 8D 10 47			sta STEP1
  1722 410C AD 0F 47			lda STEP0+1
  1723 410F E9 00			sbc #$00
  1724 4111 8D 11 47			sta STEP1+1
  1725
  1726 				; optimize OK (main.pas), line = 84
  1727
  1728 4114 AD 10 47			lda STEP1
  1729 4117 38 E9 14			sub #$14
  1730 411A 8D 12 47			sta STEP2
  1731 411D AD 11 47			lda STEP1+1
  1732 4120 E9 00			sbc #$00
  1733 4122 8D 13 47			sta STEP2+1
  1734
  1735 				; optimize FAIL (0, main.pas), line = 85
  1736
  1737 4125 CE 0D 47			dec PY
  1738
  1739 				; optimize OK (main.pas), line = 86
  1740
  1741 4128 AC F1 46 84 82 AC + 	mwy SOKO_DRAW.GFX_PLA :bp2
  1742 4132 A0 00			ldy #$00
  1743 4134 A9 16			lda #$16
  1744 4136 91 82			sta (:bp2),y
  1745
  1746 4138 4C 74 41			jmp a_0005
  1747 413B			l_1E85
  1748 413B C9 0D			cmp #$0D
  1749 413D D0 35			jne l_1EA8
  1750 				@
  1751
  1752 				; optimize OK (main.pas), line = 89
  1753
  1754 413F AD 0E 47			lda STEP0
  1755 4142 18 69 14			add #$14
  1756 4145 8D 10 47			sta STEP1
  1757 4148 AD 0F 47			lda STEP0+1
  1758 414B 69 00			adc #$00
  1759 414D 8D 11 47			sta STEP1+1
  1760
  1761 				; optimize OK (main.pas), line = 90
  1762
  1763 4150 AD 10 47			lda STEP1
  1764 4153 18 69 14			add #$14
  1765 4156 8D 12 47			sta STEP2
  1766 4159 AD 11 47			lda STEP1+1
  1767 415C 69 00			adc #$00
  1768 415E 8D 13 47			sta STEP2+1
  1769
  1770 				; optimize FAIL (0, main.pas), line = 91
  1771
  1772 4161 EE 0D 47			inc PY
  1773
  1774 				; optimize OK (main.pas), line = 92
  1775
  1776 4164 AC F1 46 84 82 AC + 	mwy SOKO_DRAW.GFX_PLA :bp2
  1777 416E A0 00			ldy #$00
  1778 4170 A9 12			lda #$12
  1779 4172 91 82			sta (:bp2),y
  1780
  1781 4174			l_1EA8
  1782 4174			a_0005
  1783
  1784 				; optimize OK (main.pas), line = 96
  1785
  1786 4174 AC 11 47 84 81		mvy STEP1+1 :bp+1
  1787 4179 AC 10 47			ldy STEP1
  1788 417C B1 80			lda (:bp),y
  1789 417E C9 20			cmp #$20
  1790 4180 D0 18			jne l_1EDC
  1791
  1792 				; optimize OK (main.pas), line = 98
  1793
  1794 4182 AC 10 47 84 82 AC + 	mwy STEP1 :bp2
  1795 418C A0 00			ldy #$00
  1796 418E A9 40			lda #$40
  1797 4190 91 82			sta (:bp2),y
  1798 4192 A9 01			lda #$01
  1799 4194 8D 0B 47			sta UPDATEPOS
  1800 4197 4C B1 42			jmp l_1EEE
  1801 419A			l_1EDC
  1802
  1803 				; optimize OK (main.pas), line = 101
  1804
  1805 419A AC 11 47 84 81		mvy STEP1+1 :bp+1
  1806 419F AC 10 47			ldy STEP1
  1807 41A2 B1 80			lda (:bp),y
  1808 41A4 C9 2E			cmp #$2E
  1809 41A6 D0 18			jne l_1F00
  1810
  1811 				; optimize OK (main.pas), line = 103
  1812
  1813 41A8 AC 10 47 84 82 AC + 	mwy STEP1 :bp2
  1814 41B2 A0 00			ldy #$00
  1815 41B4 A9 2B			lda #$2B
  1816 41B6 91 82			sta (:bp2),y
  1817 41B8 A9 01			lda #$01
  1818 41BA 8D 0B 47			sta UPDATEPOS
  1819 41BD 4C B1 42			jmp l_1F12
  1820 41C0			l_1F00
  1821
  1822 				; optimize OK (main.pas), line = 106
  1823
  1824 41C0 AC 10 47 84 82 AC + 	mwy STEP1 :bp2
  1825 41CA A0 00			ldy #$00
  1826 41CC B1 82			lda (:bp2),y
  1827 41CE A0 01			ldy #1
  1828 41D0 C9 24			cmp #$24
  1829 41D2 F0 01			beq @+
  1830 41D4 88				dey
  1831 				@
  1832 41D5 84 9D			sty :STACKORIGIN+9
  1833 41D7 A0 00			ldy #$00
  1834 41D9 B1 82			lda (:bp2),y
  1835 41DB A0 01			ldy #1
  1836 41DD C9 2A			cmp #$2A
  1837 41DF F0 01			beq @+
  1838 41E1 88				dey
  1839 				@
  1840 41E2 98				tya
  1841 41E3 05 9D			ora :STACKORIGIN+9
  1842 41E5 85 9D			sta :STACKORIGIN+9
  1843 41E7 AC 12 47 84 82 AC + 	mwy STEP2 :bp2
  1844 41F1 A0 00			ldy #$00
  1845 41F3 B1 82			lda (:bp2),y
  1846 41F5 A0 01			ldy #1
  1847 41F7 C9 20			cmp #$20
  1848 41F9 F0 01			beq @+
  1849 41FB 88				dey
  1850 				@
  1851 41FC 84 9E			sty :STACKORIGIN+10
  1852 41FE A0 00			ldy #$00
  1853 4200 B1 82			lda (:bp2),y
  1854 4202 A0 01			ldy #1
  1855 4204 C9 2E			cmp #$2E
  1856 4206 F0 01			beq @+
  1857 4208 88				dey
  1858 				@
  1859 4209 98				tya
  1860 420A 05 9E			ora :STACKORIGIN+10
  1861 420C 25 9D			and :STACKORIGIN+9
  1862 420E D0 03 4C B1 42		jeq l_1F48
  1863
  1864 				; optimize OK (main.pas), line = 108
  1865
  1866 4213 AC 13 47 84 81		mvy STEP2+1 :bp+1
  1867 4218 AC 12 47			ldy STEP2
  1868 421B B1 80			lda (:bp),y
  1869 421D C9 20			cmp #$20
  1870 421F D0 09			jne l_1F5B
  1871 4221 A0 00			ldy #$00
  1872 4223 A9 24			lda #$24
  1873 4225 91 82			sta (:bp2),y
  1874 4227 4C 3A 42			jmp l_1F69
  1875 422A			l_1F5B
  1876 422A AC 12 47 84 82 AC + 	mwy STEP2 :bp2
  1877 4234 A0 00			ldy #$00
  1878 4236 A9 2A			lda #$2A
  1879 4238 91 82			sta (:bp2),y
  1880 423A			l_1F69
  1881
  1882 				; optimize OK (main.pas), line = 110
  1883
  1884 423A AC 11 47 84 81		mvy STEP1+1 :bp+1
  1885 423F AC 10 47			ldy STEP1
  1886 4242 B1 80			lda (:bp),y
  1887 4244 C9 24			cmp #$24
  1888 4246 D0 14			jne l_1F8B
  1889 4248 AC 13 47 84 81		mvy STEP2+1 :bp+1
  1890 424D AC 12 47			ldy STEP2
  1891 4250 B1 80			lda (:bp),y
  1892 4252 C9 2A			cmp #$2A
  1893 4254 D0 06			jne l_1F8B
  1894 4256 CE 2D 45			dec SOKO_LV.CRATES
  1895 4259 4C 7B 42			jmp l_1F99
  1896 425C			l_1F8B
  1897
  1898 				; optimize OK (main.pas), line = 111
  1899
  1900 425C AC 11 47 84 81		mvy STEP1+1 :bp+1
  1901 4261 AC 10 47			ldy STEP1
  1902 4264 B1 80			lda (:bp),y
  1903 4266 C9 2A			cmp #$2A
  1904 4268 D0 11			jne l_1FB7
  1905 426A AC 13 47 84 81		mvy STEP2+1 :bp+1
  1906 426F AC 12 47			ldy STEP2
  1907 4272 B1 80			lda (:bp),y
  1908 4274 C9 24			cmp #$24
  1909 4276 D0 03			jne l_1FB7
  1910 4278 EE 2D 45			inc SOKO_LV.CRATES
  1911 427B			l_1FB7
  1912 427B			l_1F99
  1913
  1914 				; optimize OK (main.pas), line = 113
  1915
  1916 427B AC 11 47 84 81		mvy STEP1+1 :bp+1
  1917 4280 AC 10 47			ldy STEP1
  1918 4283 B1 80			lda (:bp),y
  1919 4285 C9 24			cmp #$24
  1920 4287 D0 13			jne l_1FD0
  1921 4289 AC 10 47 84 82 AC + 	mwy STEP1 :bp2
  1922 4293 A0 00			ldy #$00
  1923 4295 A9 40			lda #$40
  1924 4297 91 82			sta (:bp2),y
  1925 4299 4C AC 42			jmp l_1FDE
  1926 429C			l_1FD0
  1927 429C AC 10 47 84 82 AC + 	mwy STEP1 :bp2
  1928 42A6 A0 00			ldy #$00
  1929 42A8 A9 2B			lda #$2B
  1930 42AA 91 82			sta (:bp2),y
  1931 42AC			l_1FDE
  1932
  1933 				; optimize OK (main.pas), line = 115
  1934
  1935 42AC A9 01			lda #$01
  1936 42AE 8D 0B 47			sta UPDATEPOS
  1937 42B1			l_1F48
  1938 42B1			l_1F12
  1939 42B1			l_1EEE
  1940
  1941 				; optimize OK (main.pas), line = 118
  1942
  1943 42B1 AD 0B 47			lda UPDATEPOS
  1944 42B4 F0 69			jeq l_1FF4
  1945
  1946 				; optimize OK (main.pas), line = 119
  1947
  1948 42B6 AC 0F 47 84 81		mvy STEP0+1 :bp+1
  1949 42BB AC 0E 47			ldy STEP0
  1950 42BE B1 80			lda (:bp),y
  1951 42C0 C9 40			cmp #$40
  1952 42C2 D0 13			jne l_2007
  1953 42C4 AC 0E 47 84 82 AC + 	mwy STEP0 :bp2
  1954 42CE A0 00			ldy #$00
  1955 42D0 A9 20			lda #$20
  1956 42D2 91 82			sta (:bp2),y
  1957 42D4 4C E7 42			jmp l_2015
  1958 42D7			l_2007
  1959 42D7 AC 0E 47 84 82 AC + 	mwy STEP0 :bp2
  1960 42E1 A0 00			ldy #$00
  1961 42E3 A9 2E			lda #$2E
  1962 42E5 91 82			sta (:bp2),y
  1963 42E7			l_2015
  1964
  1965 				; optimize OK (main.pas), line = 120
  1966
  1967 42E7 AD 0C 47			lda PX
  1968 42EA 8D 2B 45			sta SOKO_LV.PLAYERX
  1969 42ED AD 0D 47			lda PY
  1970 42F0 8D 2C 45			sta SOKO_LV.PLAYERY
  1971
  1972 				; optimize OK (main.pas), line = 122
  1973
  1974 42F3 AD FF 46			lda ISODDFRAME
  1975 42F6 F0 13			jeq l_2031
  1976 42F8 AC F1 46 84 82 AC + 	mwy SOKO_DRAW.GFX_PLA :bp2
  1977 4302 A0 00			ldy #$00
  1978 4304 B1 82			lda (:bp2),y
  1979 4306 18 69 02			add #$02
  1980 4309 91 82			sta (:bp2),y
  1981 430B			l_2031
  1982
  1983 				; optimize OK (main.pas), line = 123
  1984
  1985 430B A0 01			ldy #1
  1986 430D AD FF 46			lda ISODDFRAME
  1987 4310 F0 01			beq @+
  1988 4312 88				dey
  1989 				@
  1990 4313 98				tya
  1991 4314 8D FF 46			sta ISODDFRAME
  1992
  1993 				; optimize FAIL ('SOKO_DRAW.DRAWBOARD', main.pas), line = 125
  1994
  1995 4317 20 31 3F			jsr SOKO_DRAW.DRAWBOARD
  1996
  1997 				; optimize OK (main.pas), line = 127
  1998
  1999 431A A9 07			lda #$07
  2000 431C 8D 02 47			sta MOVETIMER
  2001 431F			l_1FF4
  2002
  2003 				; ------------------------------------------------------------
  2004
  2005 = 470A			JOY	= DATAORIGIN+$021E
  2006 = 470B			UPDATEPOS	= DATAORIGIN+$021F
  2007 = 470C			PX	= DATAORIGIN+$0220
  2008 = 470D			PY	= DATAORIGIN+$0221
  2009 = 470E			STEP0	= DATAORIGIN+$0222
  2010 = 4710			STEP1	= DATAORIGIN+$0224
  2011 = 4712			STEP2	= DATAORIGIN+$0226
  2012 = 4714			@CASETMP_0005	= DATAORIGIN+$0228
  2013
  2014 = 470A			@VarData	= JOY
  2015 = 000B			@VarDataSize	= 11
  2016
  2017 431F			@exit
  2018 					.ifdef @new
  2019 					lda <@VarData
  2020 					sta :ztmp
  2021 					lda >@VarData
  2022 					ldy #@VarDataSize-1
  2023 					jmp @FreeMem
  2024 					els
  2025 431F 60				rts						; ret
  2026 					eif
  2027 				.endl
  2028
  2029 4320			.local	INITLV						; PROCEDURE
  2030
  2031 				; optimize OK (main.pas), line = 136
  2032
  2033 4320 A9 00			lda #$00
  2034 4322 8D FF 46			sta ISODDFRAME
  2035
  2036 				; optimize OK (main.pas), line = 137
  2037
  2038 4325 AC F1 46 84 82 AC + 	mwy SOKO_DRAW.GFX_PLA :bp2
  2039 432F A0 00			ldy #$00
  2040 4331 A9 12			lda #$12
  2041 4333 91 82			sta (:bp2),y
  2042
  2043 				; optimize OK (main.pas), line = 138
  2044
  2045 4335 AD 01 47			lda ILV
  2046 4338 8D EA 46			sta SOKO_LV.GETLV.LV
  2047 433B A9 00			lda #$00
  2048 433D 8D EB 46			sta SOKO_LV.GETLV.LV+1
  2049 4340 20 2B 3D			jsr SOKO_LV.GETLV
  2050
  2051 				; optimize FAIL ('SOKO_DRAW.DRAWBOARD', main.pas), line = 139
  2052
  2053 4343 20 31 3F			jsr SOKO_DRAW.DRAWBOARD
  2054 4346			@exit
  2055 					.ifdef @new
  2056 					lda <@VarData
  2057 					sta :ztmp
  2058 					lda >@VarData
  2059 					ldy #@VarDataSize-1
  2060 					jmp @FreeMem
  2061 					els
  2062 4346 60				rts						; ret
  2063 					eif
  2064 				.endl
  2065
  2066 4347			.local	NEXTLV						; PROCEDURE
  2067
  2068 				; optimize OK (main.pas), line = 144
  2069
  2070 4347 AD 01 47			lda ILV
  2071 434A C9 63			cmp #$63
  2072 434C B0 06			jcs l_206C
  2073 434E EE 01 47			inc ILV
  2074 4351 4C 59 43			jmp l_207A
  2075 4354			l_206C
  2076 4354 A9 00			lda #$00
  2077 4356 8D 01 47			sta ILV
  2078 4359			l_207A
  2079
  2080 				; optimize FAIL ('SOKO_DRAW.DRAWGRASS', main.pas), line = 145
  2081
  2082 4359 20 CF 3E			jsr SOKO_DRAW.DRAWGRASS
  2083
  2084 				; optimize FAIL ('INITLV', main.pas), line = 146
  2085
  2086 435C 20 20 43			jsr INITLV
  2087 435F			@exit
  2088 					.ifdef @new
  2089 					lda <@VarData
  2090 					sta :ztmp
  2091 					lda >@VarData
  2092 					ldy #@VarDataSize-1
  2093 					jmp @FreeMem
  2094 					els
  2095 435F 60				rts						; ret
  2096 					eif
  2097 				.endl
  2098
  2099 4360			.local	PREVLV						; PROCEDURE
  2100
  2101 				; optimize OK (main.pas), line = 151
  2102
  2103 4360 AD 01 47			lda ILV
  2104 4363 F0 06			jeq l_2096
  2105 4365 CE 01 47			dec ILV
  2106 4368 4C 70 43			jmp l_20A4
  2107 436B			l_2096
  2108 436B A9 63			lda #$63
  2109 436D 8D 01 47			sta ILV
  2110 4370			l_20A4
  2111
  2112 				; optimize FAIL ('SOKO_DRAW.DRAWGRASS', main.pas), line = 152
  2113
  2114 4370 20 CF 3E			jsr SOKO_DRAW.DRAWGRASS
  2115
  2116 				; optimize FAIL ('INITLV', main.pas), line = 153
  2117
  2118 4373 20 20 43			jsr INITLV
  2119 4376			@exit
  2120 					.ifdef @new
  2121 					lda <@VarData
  2122 					sta :ztmp
  2123 					lda >@VarData
  2124 					ldy #@VarDataSize-1
  2125 					jmp @FreeMem
  2126 					els
  2127 4376 60				rts						; ret
  2128 					eif
  2129 				.endl
  2130
  2131 4377			.local	COMPLETELV					; PROCEDURE
  2132
  2133 				; optimize OK (main.pas), line = 161
  2134
  2135 4377 A9 00			lda #$00
  2136 4379 85 AE			sta :STACKORIGIN+STACKWIDTH+10
  2137 437B AD 2B 45			lda SOKO_LV.PLAYERX
  2138 437E 0A				asl @
  2139 437F 26 AE			rol :STACKORIGIN+STACKWIDTH+10
  2140 4381 18 6D 20 46			add SOKO_LV.CENTERED
  2141 4385 85 9D			sta :STACKORIGIN+9
  2142 4387 AD 21 46			lda SOKO_LV.CENTERED+1
  2143 438A 65 AE			adc :STACKORIGIN+STACKWIDTH+10
  2144 438C 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  2145 438E AD 2C 45			lda SOKO_LV.PLAYERY
  2146 4391 85 9E			sta :STACKORIGIN+10
  2147 4393 A9 00			lda #$00
  2148 4395 06 9E			asl :STACKORIGIN+10
  2149 4397 2A				rol @
  2150 4398 85 85			sta :eax+1
  2151 439A A9 28			lda #$28
  2152 439C 85 8C			sta :ecx
  2153 439E A9 00			lda #$00
  2154 43A0 85 8D			sta :ecx+1
  2155 43A2 A5 9E			lda :STACKORIGIN+10
  2156 43A4 85 84			sta :eax
  2157 					.ifdef fmulinit
  2158 					fmulu_16
  2159 					els
  2160 43A6 20 6E 3B			imulCX
  2161 					eif
  2162 43A9 A5 9D			lda :STACKORIGIN+9
  2163 43AB 18 65 84			add :eax
  2164 43AE 8D 16 47			sta TMP
  2165 43B1 A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  2166 43B3 65 85			adc :eax+1
  2167 43B5 8D 17 47			sta TMP+1
  2168
  2169 				; optimize OK (main.pas), line = 162
  2170
  2171 43B8 A9 07			lda #$07
  2172 43BA 8D 15 47			sta I
  2173
  2174 43BD			l_20D4
  2175 				; --- ForToDoCondition
  2176
  2177 				; optimize OK (main.pas), line = 163
  2178
  2179 43BD AD 15 47			lda I
  2180 43C0 29 01			and #$01
  2181 43C2 D0 14			jne l_20F8
  2182 43C4 AD 16 47			lda TMP
  2183 43C7 85 88			sta SOKO_DRAW.PUTTILE.A
  2184 43C9 AD 17 47			lda TMP+1
  2185 43CC 85 89			sta SOKO_DRAW.PUTTILE.A+1
  2186 43CE A9 1A			lda #$1A
  2187 43D0 85 8C			sta SOKO_DRAW.PUTTILE.T
  2188 43D2 20 A4 3E			jsr SOKO_DRAW.PUTTILE
  2189 43D5 4C E9 43			jmp l_2106
  2190 43D8			l_20F8
  2191 43D8 AD 16 47			lda TMP
  2192 43DB 85 88			sta SOKO_DRAW.PUTTILE.A
  2193 43DD AD 17 47			lda TMP+1
  2194 43E0 85 89			sta SOKO_DRAW.PUTTILE.A+1
  2195 43E2 A9 1C			lda #$1C
  2196 43E4 85 8C			sta SOKO_DRAW.PUTTILE.T
  2197 43E6 20 A4 3E			jsr SOKO_DRAW.PUTTILE
  2198 43E9			l_2106
  2199
  2200 				; optimize OK (main.pas), line = 164
  2201
  2202 43E9 A9 0A			lda #$0A
  2203 43EB 8D F7 44			sta SYSTEM.PAUSE_1AF9.N
  2204 43EE A9 00			lda #$00
  2205 43F0 8D F8 44			sta SYSTEM.PAUSE_1AF9.N+1
  2206 43F3 20 E7 3B			jsr SYSTEM.PAUSE_1AF9
  2207
  2208 				; --- ForToDoEpilog
  2209 43F6 CE 15 47			dec I
  2210 43F9 10 C2			jpl l_20D4
  2211 43FB			l_20E2
  2212
  2213 				; optimize OK (main.pas), line = 166
  2214
  2215 43FB A9 19			lda #$19
  2216 43FD 8D F7 44			sta SYSTEM.PAUSE_1AF9.N
  2217 4400 A9 00			lda #$00
  2218 4402 8D F8 44			sta SYSTEM.PAUSE_1AF9.N+1
  2219 4405 20 E7 3B			jsr SYSTEM.PAUSE_1AF9
  2220
  2221 				; optimize FAIL ('NEXTLV', main.pas), line = 168
  2222
  2223 4408 20 47 43			jsr NEXTLV
  2224
  2225 				; ------------------------------------------------------------
  2226
  2227 = 4715			I	= DATAORIGIN+$0229
  2228 = 4716			TMP	= DATAORIGIN+$022A
  2229
  2230 = 4715			@VarData	= I
  2231 = 0003			@VarDataSize	= 3
  2232
  2233 440B			@exit
  2234 					.ifdef @new
  2235 					lda <@VarData
  2236 					sta :ztmp
  2237 					lda >@VarData
  2238 					ldy #@VarDataSize-1
  2239 					jmp @FreeMem
  2240 					els
  2241 440B 60				rts						; ret
  2242 					eif
  2243 				.endl
  2244
  2245 440C			.local	INITSCREEN					; PROCEDURE
  2246
  2247 				; optimize OK (main.pas), line = 175
  2248
  2249 440C A9 1C			lda #$1C
  2250 440E 20 08 3C			jsr GRAPH.INITGRAPH_1B26
  2251
  2252 				; optimize OK (main.pas), line = 177
  2253
  2254 4411 A9 9C			lda #$9C
  2255 4413 8D F4 02			sta ATARI.CHBAS
  2256
  2257 				; optimize OK (main.pas), line = 179
  2258
  2259 4416 A9 04			lda #$04
  2260 4418 8D C4 02			sta ATARI.COLOR0
  2261
  2262 				; optimize OK (main.pas), line = 180
  2263
  2264 441B A9 06			lda #$06
  2265 441D 8D C5 02			sta ATARI.COLOR1
  2266
  2267 				; optimize OK (main.pas), line = 181
  2268
  2269 4420 A9 0E			lda #$0E
  2270 4422 8D C6 02			sta ATARI.COLOR2
  2271
  2272 				; optimize OK (main.pas), line = 182
  2273
  2274 4425 A9 0A			lda #$0A
  2275 4427 8D C7 02			sta ATARI.COLOR3
  2276
  2277 				; optimize OK (main.pas), line = 183
  2278
  2279 442A A9 C0			lda #$C0
  2280 442C 8D C8 02			sta ATARI.COLOR4
  2281 442F			@exit
  2282 					.ifdef @new
  2283 					lda <@VarData
  2284 					sta :ztmp
  2285 					lda >@VarData
  2286 					ldy #@VarDataSize-1
  2287 					jmp @FreeMem
  2288 					els
  2289 442F 60				rts						; ret
  2290 					eif
  2291 				.endl
  2292
  2293 4430			.local	VBLANKD						; PROCEDURE
  2294
  2295 				; optimize OK (main.pas), line = 190
  2296
  2297 4430 AD 02 47			lda MOVETIMER
  2298 4433 F0 03			jeq l_2148
  2299 4435 CE 02 47			dec MOVETIMER
  2300 4438			l_2148
  2301
  2302 				; optimize FAIL ('MPT.TMPT.PLAY', main.pas), line = 191
  2303
  2304 4438 AD E9 44			lda MSX
  2305 443B AC EA 44			ldy MSX+1
  2306 443E 20 D2 3C			jsr MPT.TMPT.PLAY
  2307
  2308 				; optimize FAIL ('m@INLINE', main.pas), line = 192
  2309
  2310 4441				.local +MAIN.EXITVBK
  2311 4441				m@INLINE
Macro: MAIN.EXITVBK.M@INLINE [Source: main.a65]
     4 4441 4C 62 E4		  jmp XITVBV
  2312 					.endl
  2313 4444			@exit
  2314 					.ifdef @new
  2315 					lda <@VarData
  2316 					sta :ztmp
  2317 					lda >@VarData
  2318 					ldy #@VarDataSize-1
  2319 					jmp @FreeMem
  2320 					els
  2321 4444 60				rts						; ret
  2322 					eif
  2323 				.endl
  2324 4445			l_1A97
  2325
  2326 				; optimize FAIL ('SYSTEM.PAUSE_1AF8', main.pas), line = 199
  2327
  2328 4445 20 E0 3B			jsr SYSTEM.PAUSE_1AF8
  2329
  2330 				; optimize OK (main.pas), line = 200
  2331
  2332 4448 A9 07			lda #$07
  2333 444A 8D 07 47			sta SETVBK.MODE
  2334 444D A9 44			lda >VBLANKD
  2335 444F 8D 08 47			sta SETVBK.MSB
  2336 4452 A9 30			lda <VBLANKD
  2337 4454 8D 09 47			sta SETVBK.LSB
  2338 4457 20 37 40			jsr SETVBK
  2339
  2340 				; optimize OK (main.pas), line = 202
  2341
  2342 445A A9 00			lda #$00
  2343 445C 8D 03 47			sta MSX.PLAYER
  2344 445F A9 A0			lda #$A0
  2345 4461 8D 04 47			sta MSX.PLAYER+1
  2346
  2347 				; optimize OK (main.pas), line = 203
  2348
  2349 4464 A9 00			lda #$00
  2350 4466 8D 05 47			sta MSX.MODUL
  2351 4469 A9 A5			lda #$A5
  2352 446B 8D 06 47			sta MSX.MODUL+1
  2353
  2354 				; optimize FAIL ('MPT.TMPT.INIT', main.pas), line = 204
  2355
  2356 446E AD E9 44			lda MSX
  2357 4471 AC EA 44			ldy MSX+1
  2358 4474 20 8E 3C			jsr MPT.TMPT.INIT
  2359
  2360 				; optimize FAIL ('INITSCREEN', main.pas), line = 206
  2361
  2362 4477 20 0C 44			jsr INITSCREEN
  2363
  2364 				; optimize FAIL ('NEXTLV', main.pas), line = 207
  2365
  2366 447A 20 47 43			jsr NEXTLV
  2367
  2368 				; --- RepeatUntilProlog
  2369 447D			l_2161
  2370
  2371 				; optimize OK (main.pas), line = 211
  2372
  2373 447D AD 2D 45			lda SOKO_LV.CRATES
  2374 4480 D0 03			jne l_2173
  2375 4482 20 77 43			jsr COMPLETELV
  2376 4485			l_2173
  2377
  2378 				; optimize OK (main.pas), line = 213
  2379
  2380 4485 AD 02 47			lda MOVETIMER
  2381 4488 D0 19			jne l_2189
  2382
  2383 				; optimize OK (main.pas), line = 215
  2384
  2385 448A			?volatile:
  2386 448A AD 78 02			lda JOYSTICK.JOY_1
  2387 448D C9 0E			cmp #$0E
  2388 448F F0 0C			jeq l_21C0x
  2389 4491			?volatile:
  2390 4491 C9 0D			cmp #$0D
  2391 4493 F0 08			jeq l_21C0x
  2392 4495			?volatile:
  2393 4495 C9 0B			cmp #$0B
  2394 4497 F0 04			jeq l_21C0x
  2395 4499			?volatile:
  2396 4499 C9 07			cmp #$07
  2397 449B D0 06			jne l_21C0
  2398 449D			l_21C0x
  2399
  2400 				; optimize OK (main.pas), line = 220
  2401
  2402 449D			?volatile:
  2403 449D AD 78 02			lda JOYSTICK.JOY_1
  2404 44A0 20 44 40			jsr MAKEMOVE
  2405 44A3			l_21C0
  2406 44A3			l_2189
  2407
  2408 				; optimize OK (main.pas), line = 222
  2409
  2410 44A3 AD FC 02			lda ATARI.CH
  2411 44A6 C9 FF			cmp #$FF
  2412 44A8 F0 23			jeq l_21DB
  2413
  2414 				; optimize OK (main.pas), line = 223
  2415
  2416 44AA 8D 18 47			sta @CASETMP_0006
  2417 44AD C9 21			cmp #$21
  2418 44AF D0 06			jne l_21E7
  2419 				@
  2420
  2421 				; optimize FAIL ('INITLV', main.pas), line = 224
  2422
  2423 44B1 20 20 43			jsr INITLV
  2424 44B4 4C C8 44			jmp a_0006
  2425 44B7			l_21E7
  2426 44B7 C9 87			cmp #$87
  2427 44B9 D0 06			jne l_21F1
  2428 				@
  2429
  2430 				; optimize FAIL ('NEXTLV', main.pas), line = 225
  2431
  2432 44BB 20 47 43			jsr NEXTLV
  2433 44BE 4C C8 44			jmp a_0006
  2434 44C1			l_21F1
  2435 44C1 C9 86			cmp #$86
  2436 44C3 D0 03			jne l_21FB
  2437 				@
  2438
  2439 				; optimize FAIL ('PREVLV', main.pas), line = 226
  2440
  2441 44C5 20 60 43			jsr PREVLV
  2442 44C8			l_21FB
  2443 44C8			a_0006
  2444
  2445 				; optimize OK (main.pas), line = 228
  2446
  2447 44C8 A9 FF			lda #$FF
  2448 44CA 8D FC 02			sta ATARI.CH
  2449 44CD			l_21DB
  2450
  2451 				; optimize FAIL ('SYSTEM.PAUSE_1AF8', main.pas), line = 231
  2452
  2453 44CD 20 E0 3B			jsr SYSTEM.PAUSE_1AF8
  2454
  2455 				; optimize OK (main.pas), line = 232
  2456
  2457 44D0 4C 7D 44			jmp l_2161
  2458
  2459 				; ------------------------------------------------------------
  2460
  2461 = E45C			SETVBV	= $E45C
  2462 = E462			XITVBV	= $E462
  2463 = 9C00			BOARD_GFX	= $9C00
  2464 = A000			MPT_PLAYER	= $A000
  2465 = A500			MPT_MODUL	= $A500
  2466 = 0007			JOY_DELAY	= $07
  2467 = 0021			KEY_SPACE	= $21
  2468 = 0028			KEY_R	= $28
  2469 = 0087			KEY_RIGHT	= $87
  2470 = 0086			KEY_LEFT	= $86
  2471 = 46FD			DIR	= DATAORIGIN+$0211
  2472 = 46FE			ISFIRE	= DATAORIGIN+$0212
  2473 = 46FF			ISODDFRAME	= DATAORIGIN+$0213
  2474 = 4700			TILE	= DATAORIGIN+$0214
  2475 = 4701			ILV	= DATAORIGIN+$0215
  2476 = 4702			MOVETIMER	= DATAORIGIN+$0216
  2477 = 4703			adr.MSX	= DATAORIGIN+$0217	; [4] OBJECT
  2478 44D3			.var MSX	= adr.MSX .word
  2479 = 4703			MSX.PLAYER	= DATAORIGIN+$0217
  2480 = 4705			MSX.MODUL	= DATAORIGIN+$0219
  2481 = 4718			@CASETMP_0006	= DATAORIGIN+$022C
  2482 44D3			@exit
  2483
  2484 44D3 A2 00		@halt	ldx #$00
  2485 44D5 9A				txs
  2486 					.ifdef MAIN.@DEFINES.ROMOFF
  2487 					inc portb
  2488 					.fi
  2489
  2490 44D6 A0 01			ldy #$01
  2491
  2492 44D8 60				rts
  2493
  2494 				; ------------------------------------------------------------
  2495
  2496 44D9 00 00 00 00 00 00 + IOCB@COPY	:16 brk
  2497
  2498 				; ------------------------------------------------------------
  2499
  2500 44E9			.local	@DEFINES
  2501 44E9			ATARI
  2502 				.endl
  2503
  2504 44E9			.local	@RESOURCE
  2505 				.endl
  2506
  2507 = 44E9 03 47		MSX
  2507 				.endl							; MAIN
  2508
  2509 				; ------------------------------------------------------------
  2510 				; ------------------------------------------------------------
  2511
  2512 				.macro	UNITINITIALIZATION
  2513 				
  2514 					.ifdef MAIN.SYSTEM.@UnitInit
  2515 					jsr MAIN.SYSTEM.@UnitInit
  2516 					.fi
  2517 				
  2518 					.ifdef MAIN.ATARI.@UnitInit
  2519 					jsr MAIN.ATARI.@UnitInit
  2520 					.fi
  2521 				
  2522 					.ifdef MAIN.TYPES.@UnitInit
  2523 					jsr MAIN.TYPES.@UnitInit
  2524 					.fi
  2525 				
  2526 					.ifdef MAIN.GRAPH.@UnitInit
  2527 					jsr MAIN.GRAPH.@UnitInit
  2528 					.fi
  2529 				
  2530 					.ifdef MAIN.JOYSTICK.@UnitInit
  2531 					jsr MAIN.JOYSTICK.@UnitInit
  2532 					.fi
  2533 				
  2534 					.ifdef MAIN.MISC.@UnitInit
  2535 					jsr MAIN.MISC.@UnitInit
  2536 					.fi
  2537 				
  2538 					.ifdef MAIN.MPT.@UnitInit
  2539 					jsr MAIN.MPT.@UnitInit
  2540 					.fi
  2541 				
  2542 					.ifdef MAIN.SOKO_LV.@UnitInit
  2543 					jsr MAIN.SOKO_LV.@UnitInit
  2544 					.fi
  2545 				
  2546 					.ifdef MAIN.SOKO_DRAW.@UnitInit
  2547 					jsr MAIN.SOKO_DRAW.@UnitInit
  2548 					.fi
  2549 				.endm
  2550
  2551 				; ------------------------------------------------------------
  2552
  2553 					ift .SIZEOF(MAIN.SYSTEM) > 0
  2554 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
  2554 				SYSTEM: $3BC9..$3C07
  2555 					eif
  2556
  2557 					ift .SIZEOF(MAIN.ATARI) > 0
  2558 					.print 'ATARI: ',MAIN.ATARI,'..',MAIN.ATARI+.SIZEOF(MAIN.ATARI)-1
  2559 					eif
  2560
  2561 					ift .SIZEOF(MAIN.TYPES) > 0
  2562 					.print 'TYPES: ',MAIN.TYPES,'..',MAIN.TYPES+.SIZEOF(MAIN.TYPES)-1
  2563 					eif
  2564
  2565 					ift .SIZEOF(MAIN.GRAPH) > 0
  2566 					.print 'GRAPH: ',MAIN.GRAPH,'..',MAIN.GRAPH+.SIZEOF(MAIN.GRAPH)-1
  2566 				GRAPH: $3C08..$3C5B
  2567 					eif
  2568
  2569 					ift .SIZEOF(MAIN.JOYSTICK) > 0
  2570 					.print 'JOYSTICK: ',MAIN.JOYSTICK,'..',MAIN.JOYSTICK+.SIZEOF(MAIN.JOYSTICK)-1
  2570 				JOYSTICK: $3C5C..$3C63
  2571 					eif
  2572
  2573 					ift .SIZEOF(MAIN.MISC) > 0
  2574 					.print 'MISC: ',MAIN.MISC,'..',MAIN.MISC+.SIZEOF(MAIN.MISC)-1
  2574 				MISC: $3C64..$3C8D
  2575 					eif
  2576
  2577 					ift .SIZEOF(MAIN.MPT) > 0
  2578 					.print 'MPT: ',MAIN.MPT,'..',MAIN.MPT+.SIZEOF(MAIN.MPT)-1
  2578 				MPT: $3C8E..$3D2A
  2579 					eif
  2580
  2581 					ift .SIZEOF(MAIN.SOKO_LV) > 0
  2582 					.print 'SOKO_LV: ',MAIN.SOKO_LV,'..',MAIN.SOKO_LV+.SIZEOF(MAIN.SOKO_LV)-1
  2582 				SOKO_LV: $3D2B..$3EA3
  2583 					eif
  2584
  2585 					ift .SIZEOF(MAIN.SOKO_DRAW) > 0
  2586 					.print 'SOKO_DRAW: ',MAIN.SOKO_DRAW,'..',MAIN.SOKO_DRAW+.SIZEOF(MAIN.SOKO_DRAW)-1
  2586 				SOKO_DRAW: $3EA4..$4036
  2587 					eif
  2588
  2589 					.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1
  2589 				CODE: $2000..$44E8
  2590
  2591 				; ------------------------------------------------------------
  2592
  2593 44EB				.align $0004
  2594
  2595 44EC			DATAORIGIN
  2596 44EC-4701> 28 00 18 00 + .by  $28 $00 $18 $00 $2D $0C $00 $00  $00 $00 $00 $00 $00 $00 $00 $27  $00 $00 $00 $17 $00 $00 $00 $00
  2597 4504 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  2598 451C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  2599 4534 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  2600 454C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  2601 4564 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  2602 457C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  2603 4594 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  2604 45AC 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  2605 45C4 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  2606 45DC 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  2607 45F4 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  2608 460C 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $01 $20
  2609 4624 45 20 89 20 CD 20 + .by  $45 $20 $89 $20 $CD $20 $11 $21  $55 $21 $99 $21 $DD $21 $21 $22  $65 $22 $A9 $22 $ED $22 $31 $23
  2610 463C 75 23 B9 23 FD 23 + .by  $75 $23 $B9 $23 $FD $23 $41 $24  $85 $24 $C9 $24 $0D $25 $51 $25  $95 $25 $D9 $25 $1D $26 $61 $26
  2611 4654 A5 26 E9 26 2D 27 + .by  $A5 $26 $E9 $26 $2D $27 $71 $27  $B5 $27 $F9 $27 $3D $28 $81 $28  $C5 $28 $09 $29 $4D $29 $91 $29
  2612 466C D5 29 19 2A 5D 2A + .by  $D5 $29 $19 $2A $5D $2A $A1 $2A  $E5 $2A $29 $2B $6D $2B $B1 $2B  $F5 $2B $39 $2C $7D $2C $C1 $2C
  2613 4684 05 2D 49 2D 8D 2D + .by  $05 $2D $49 $2D $8D $2D $D1 $2D  $15 $2E $59 $2E $9D $2E $E1 $2E  $25 $2F $69 $2F $AD $2F $F1 $2F
  2614 469C 35 30 79 30 BD 30 + .by  $35 $30 $79 $30 $BD $30 $01 $31  $45 $31 $89 $31 $CD $31 $11 $32  $55 $32 $99 $32 $DD $32 $21 $33
  2615 46B4 65 33 A9 33 ED 33 + .by  $65 $33 $A9 $33 $ED $33 $31 $34  $75 $34 $B9 $34 $FD $34 $41 $35  $85 $35 $C9 $35 $0D $36 $51 $36
  2616 46CC 95 36 D9 36 1D 37 + .by  $95 $36 $D9 $36 $1D $37 $61 $37  $A5 $37 $E9 $37 $2D $38 $71 $38  $B5 $38 $F9 $38 $3D $39 $81 $39
  2617 46E4 C5 39 09 3A 4D 3A + .by  $C5 $39 $09 $3A $4D $3A $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
  2618 46FC 00 00 00 00 00 64	.by  $00 $00 $00 $00 $00 $64
  2619
  2620 = 0216			VARINITSIZE	= *-DATAORIGIN
  2621 = 022D			VARDATASIZE	= 557
  2622
  2623 = 4719			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
  2624
  2625 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
  2625 				DATA: $44EC..$4719
  2626
  2627 02E0-02E1> 98 3B			run START
  2628
  2629 				; ------------------------------------------------------------
  2630
  2631 				.macro	STATICDATA
  2632 				.by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $20 $2E $23  $23 $23 $23 $23 $23 $20 $20 $23
  2633 				.by  $23 $23 $23 $23 $23 $2A $40 $20  $20 $23 $23 $23 $23 $20 $20 $24  $20 $23 $23 $23 $23 $20 $20 $23
  2634 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
  2635 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $20 $20 $20 $20 $23 $23 $23  $23 $20 $23 $40 $20 $23 $23 $23
  2636 				.by  $23 $20 $24 $2A $20 $23 $23 $23  $23 $20 $2E $2A $20 $23 $23 $23  $23 $20 $20 $20 $20 $23 $23 $23
  2637 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
  2638 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $20 $20 $20 $20  $20 $20 $23 $23 $20 $2E $2A $2A
  2639 				.by  $24 $40 $23 $23 $20 $20 $20 $20  $20 $20 $23 $23 $23 $23 $23 $23  $20 $20 $23 $23 $23 $23 $23 $23
  2640 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2641 				.by  $23 $20 $20 $20 $20 $20 $23 $23  $23 $20 $2E $24 $2E $20 $23 $23  $23 $20 $24 $40 $24 $20 $23 $23
  2642 				.by  $20 $20 $2E $24 $2E $20 $23 $23  $20 $20 $20 $20 $20 $20 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2643 				.by  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $20 $20 $20 $20
  2644 				.by  $20 $23 $23 $23 $20 $2E $24 $2E  $20 $23 $23 $23 $20 $24 $2E $24  $20 $23 $23 $23 $20 $2E $24 $2E
  2645 				.by  $20 $23 $23 $23 $20 $24 $2E $24  $20 $23 $23 $23 $20 $20 $40 $20  $20 $23 $23 $23 $23 $23 $23 $23
  2646 				.by  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $2E $20 $20 $23 $23 $23 $23
  2647 				.by  $23 $40 $24 $24 $20 $23 $23 $23  $23 $23 $20 $20 $20 $23 $23 $23  $23 $23 $23 $20 $20 $23 $23 $23
  2648 				.by  $23 $23 $23 $23 $2E $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00
  2649 				.by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $20 $20 $20 $20
  2650 				.by  $20 $23 $23 $23 $20 $23 $20 $23  $20 $23 $23 $23 $2E $20 $24 $2A  $40 $23 $23 $23 $20 $20 $20 $23
  2651 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
  2652 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $20 $40 $20 $23 $23 $23 $23  $23 $2E $2E $2E $23 $23 $23 $23
  2653 				.by  $23 $24 $24 $24 $23 $23 $23 $23  $23 $20 $20 $20 $20 $23 $23 $23  $23 $20 $20 $20 $20 $23 $23 $23
  2654 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
  2655 				.by  $23 $23 $23 $23 $20 $20 $20 $2E  $2E $20 $23 $23 $20 $20 $40 $24  $24 $20 $23 $23 $23 $23 $23 $23
  2656 				.by  $20 $23 $23 $23 $23 $23 $23 $20  $20 $23 $23 $23 $23 $23 $23 $20  $20 $23 $23 $23 $23 $23 $23 $20
  2657 				.by  $20 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2658 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $23 $23 $23 $23 $23 $23  $20 $2E $20 $2E $20 $23 $23 $23
  2659 				.by  $20 $24 $24 $23 $40 $23 $23 $23  $23 $20 $20 $20 $20 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2660 				.by  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $20 $20 $2A $20
  2661 				.by  $20 $23 $23 $23 $20 $20 $20 $20  $20 $23 $23 $23 $23 $20 $23 $20  $23 $23 $23 $23 $23 $24 $40 $2E
  2662 				.by  $23 $23 $23 $23 $23 $20 $20 $20  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2663 				.by  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $20 $20 $20 $23 $23 $23
  2664 				.by  $23 $23 $24 $24 $40 $23 $23 $23  $20 $20 $20 $23 $23 $23 $23 $23  $20 $20 $20 $20 $20 $23 $23 $23
  2665 				.by  $20 $2E $20 $2E $20 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00
  2666 				.by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $20 $20 $23  $23 $23 $23 $23 $23 $20 $24 $24
  2667 				.by  $20 $23 $23 $23 $23 $2E $2E $2E  $20 $23 $23 $23 $20 $20 $40 $24  $20 $23 $23 $23 $20 $20 $20 $23
  2668 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
  2669 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $20 $40 $20 $23 $23 $23  $23 $23 $20 $20 $20 $23 $23 $23
  2670 				.by  $23 $23 $23 $24 $20 $23 $23 $23  $23 $20 $2E $2E $2E $23 $23 $23  $23 $20 $24 $24 $20 $23 $23 $23
  2671 				.by  $23 $23 $23 $20 $20 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
  2672 				.by  $23 $23 $23 $23 $20 $20 $20 $2E  $23 $23 $23 $23 $20 $23 $23 $20  $23 $23 $23 $23 $20 $20 $24 $24
  2673 				.by  $40 $23 $23 $23 $20 $23 $20 $20  $20 $23 $23 $23 $2E $20 $20 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2674 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2675 				.by  $20 $20 $20 $23 $23 $23 $23 $23  $20 $40 $20 $23 $23 $23 $23 $23  $20 $24 $24 $23 $23 $23 $23 $23
  2676 				.by  $23 $2E $20 $2E $20 $23 $23 $23  $23 $20 $20 $20 $20 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2677 				.by  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $20 $20 $23
  2678 				.by  $23 $23 $23 $23 $23 $20 $24 $24  $20 $23 $23 $23 $23 $2E $2E $2E  $20 $23 $23 $23 $23 $20 $40 $24
  2679 				.by  $20 $23 $23 $23 $23 $20 $20 $20  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2680 				.by  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $20 $20 $23 $23 $23 $23
  2681 				.by  $23 $40 $24 $2E $23 $23 $23 $23  $20 $24 $24 $20 $20 $23 $23 $23  $20 $2E $20 $2E $20 $23 $23 $23
  2682 				.by  $23 $23 $20 $20 $20 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00
  2683 				.by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $20 $20 $23  $23 $23 $23 $23 $20 $20 $20 $20
  2684 				.by  $20 $23 $23 $23 $2E $2A $2A $24  $40 $23 $23 $23 $20 $20 $20 $23  $23 $23 $23 $23 $23 $20 $20 $23
  2685 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
  2686 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $2E $20 $23 $20 $20 $23 $23 $23  $20 $20 $24 $20 $20 $23 $23 $23
  2687 				.by  $2E $20 $24 $23 $40 $23 $23 $23  $20 $20 $24 $20 $20 $23 $23 $23  $2E $20 $23 $20 $20 $23 $23 $23
  2688 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
  2689 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $20 $20 $20  $23 $23 $23 $23 $23 $20 $20 $20
  2690 				.by  $23 $23 $23 $23 $20 $24 $24 $24  $20 $23 $23 $23 $20 $2E $2B $2E  $20 $23 $23 $23 $23 $23 $23 $23
  2691 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2692 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $20 $20 $20 $23 $23 $23  $40 $24 $24 $24 $20 $23 $23 $23
  2693 				.by  $20 $20 $23 $2E $2E $2E $23 $23  $23 $20 $20 $20 $20 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2694 				.by  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $20
  2695 				.by  $20 $23 $23 $23 $23 $23 $23 $40  $20 $23 $23 $23 $23 $23 $23 $24  $2E $23 $23 $23 $20 $20 $20 $24
  2696 				.by  $2E $23 $23 $23 $20 $23 $20 $24  $2E $23 $23 $23 $20 $20 $20 $20  $23 $23 $23 $23 $23 $23 $23 $23
  2697 				.by  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2698 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $40 $24 $2E $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2699 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00
  2700 				.by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $2E $2E $2E  $20 $23 $23 $23 $23 $20 $20 $24
  2701 				.by  $20 $23 $23 $23 $23 $20 $23 $24  $23 $23 $23 $23 $23 $20 $20 $24  $20 $23 $23 $23 $23 $20 $20 $40
  2702 				.by  $20 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
  2703 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $20 $20 $20 $20 $23 $23 $23  $20 $20 $23 $23 $20 $23 $23 $23
  2704 				.by  $20 $23 $20 $24 $20 $23 $23 $23  $20 $20 $2A $20 $2E $23 $23 $23  $23 $20 $23 $40 $23 $23 $23 $23
  2705 				.by  $23 $20 $20 $20 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
  2706 				.by  $23 $23 $23 $23 $20 $20 $40 $20  $23 $23 $23 $23 $20 $20 $23 $20  $23 $23 $23 $23 $20 $2E $23 $20
  2707 				.by  $20 $23 $23 $23 $20 $2E $24 $24  $24 $20 $23 $23 $20 $2E $23 $20  $20 $20 $23 $23 $23 $23 $23 $20
  2708 				.by  $20 $20 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2709 				.by  $20 $20 $23 $23 $23 $23 $23 $23  $20 $20 $20 $20 $23 $23 $23 $23  $20 $20 $24 $2A $40 $20 $23 $23
  2710 				.by  $23 $23 $20 $2E $23 $20 $23 $23  $23 $23 $20 $20 $20 $20 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2711 				.by  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $20
  2712 				.by  $40 $23 $23 $23 $23 $20 $20 $24  $20 $23 $23 $23 $23 $20 $20 $2A  $2E $23 $23 $23 $23 $20 $20 $2A
  2713 				.by  $2E $23 $23 $23 $23 $20 $20 $24  $20 $23 $23 $23 $23 $23 $23 $20  $20 $23 $23 $23 $23 $23 $23 $23
  2714 				.by  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $2E $20 $2E $23 $23 $23 $23
  2715 				.by  $20 $2A $20 $2A $20 $23 $23 $23  $20 $20 $23 $20 $20 $23 $23 $23  $20 $24 $20 $24 $20 $23 $23 $23
  2716 				.by  $23 $20 $40 $20 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00
  2717 				.by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $20 $20 $20 $23
  2718 				.by  $23 $23 $23 $23 $20 $20 $24 $20  $20 $23 $23 $23 $23 $2A $20 $2E  $20 $23 $23 $23 $23 $20 $20 $20
  2719 				.by  $40 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
  2720 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $23 $23 $23 $23 $23 $23  $2E $2A $24 $20 $20 $23 $23 $23
  2721 				.by  $20 $2E $24 $23 $20 $23 $23 $23  $23 $20 $40 $20 $20 $23 $23 $23  $23 $20 $20 $20 $23 $23 $23 $23
  2722 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
  2723 				.by  $23 $23 $23 $23 $20 $20 $20 $23  $23 $23 $23 $23 $20 $23 $20 $20  $23 $23 $23 $23 $40 $24 $2A $2E
  2724 				.by  $23 $23 $23 $23 $23 $20 $20 $2E  $20 $23 $23 $23 $23 $20 $24 $23  $20 $23 $23 $23 $23 $23 $20 $20
  2725 				.by  $20 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2726 				.by  $20 $20 $20 $23 $23 $23 $23 $23  $20 $2E $20 $20 $20 $23 $23 $23  $23 $2A $23 $24 $20 $20 $23 $23
  2727 				.by  $20 $2E $23 $20 $24 $20 $23 $23  $20 $40 $23 $23 $20 $23 $23 $23  $20 $20 $20 $20 $20 $23 $23 $23
  2728 				.by  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $40 $20 $20 $20
  2729 				.by  $20 $20 $23 $23 $20 $2E $24 $24  $2E $20 $23 $23 $20 $24 $2E $2E  $24 $20 $23 $23 $20 $24 $2E $2E
  2730 				.by  $24 $20 $23 $23 $20 $2E $24 $24  $2E $20 $23 $23 $20 $20 $20 $20  $20 $20 $23 $23 $23 $23 $23 $23
  2731 				.by  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23  $20 $40 $23 $20 $20 $23 $23 $23
  2732 				.by  $2E $24 $20 $20 $20 $23 $23 $23  $2E $20 $23 $20 $24 $23 $23 $23  $2E $24 $23 $20 $20 $20 $23 $23
  2733 				.by  $2E $20 $23 $20 $24 $20 $23 $23  $20 $20 $23 $20 $20 $20 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00
  2734 				.by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $20 $2E  $20 $23 $23 $23 $23 $23 $20 $24
  2735 				.by  $20 $20 $23 $23 $20 $2E $20 $24  $23 $40 $23 $23 $20 $23 $24 $20  $2E $20 $23 $23 $20 $20 $24 $20
  2736 				.by  $23 $23 $23 $23 $23 $20 $2E $20  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
  2737 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $20 $20 $20 $20 $23 $23  $20 $24 $2A $2A $2A $20 $23 $23
  2738 				.by  $20 $2A $20 $20 $2A $20 $23 $23  $20 $2A $20 $20 $2A $20 $23 $23  $20 $2A $2A $2A $2E $20 $23 $23
  2739 				.by  $20 $20 $20 $20 $20 $40 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
  2740 				.by  $23 $23 $23 $23 $23 $20 $20 $23  $23 $23 $23 $23 $23 $20 $20 $23  $23 $23 $23 $23 $23 $20 $20 $23
  2741 				.by  $23 $23 $23 $23 $23 $2E $24 $24  $40 $23 $23 $23 $23 $20 $20 $2E  $20 $23 $23 $23 $23 $20 $20 $23
  2742 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2743 				.by  $23 $23 $20 $20 $20 $23 $23 $23  $23 $23 $2E $23 $20 $23 $23 $23  $23 $20 $20 $40 $20 $23 $23 $23
  2744 				.by  $23 $20 $20 $24 $20 $23 $23 $23  $23 $20 $23 $2A $23 $23 $23 $23  $23 $20 $20 $20 $23 $23 $23 $23
  2745 				.by  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $20
  2746 				.by  $20 $23 $23 $23 $20 $20 $23 $20  $20 $23 $23 $23 $20 $2E $20 $2E  $20 $23 $23 $23 $20 $40 $24 $24
  2747 				.by  $20 $23 $23 $23 $20 $23 $20 $23  $23 $23 $23 $23 $20 $20 $20 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2748 				.by  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $20 $20 $23 $23 $23 $23
  2749 				.by  $20 $24 $24 $20 $23 $23 $23 $23  $23 $23 $20 $40 $20 $20 $23 $23  $23 $23 $20 $20 $2E $20 $23 $23
  2750 				.by  $23 $23 $23 $20 $2E $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00
  2751 				.by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $20 $20  $20 $23 $23 $23 $20 $20 $24 $23
  2752 				.by  $20 $23 $23 $23 $20 $20 $2E $24  $20 $23 $23 $23 $23 $20 $23 $23  $2E $23 $23 $23 $23 $20 $20 $20
  2753 				.by  $40 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
  2754 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $20 $40 $20 $20 $23 $23  $20 $20 $20 $2A $20 $20 $23 $23
  2755 				.by  $23 $23 $2E $24 $23 $23 $23 $23  $23 $23 $20 $2A $20 $23 $23 $23  $23 $23 $20 $20 $20 $23 $23 $23
  2756 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
  2757 				.by  $23 $23 $23 $23 $23 $20 $20 $20  $20 $23 $23 $23 $23 $20 $23 $24  $40 $23 $23 $23 $23 $20 $2E $2A
  2758 				.by  $2E $23 $23 $23 $23 $20 $23 $24  $20 $23 $23 $23 $23 $20 $20 $20  $20 $23 $23 $23 $23 $23 $23 $23
  2759 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2760 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $20 $23 $23 $23 $23 $23  $20 $20 $20 $23 $23 $23 $23 $23
  2761 				.by  $24 $24 $24 $40 $20 $23 $23 $23  $2E $2E $2E $20 $20 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2762 				.by  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2763 				.by  $23 $23 $23 $23 $23 $2E $23 $20  $20 $23 $23 $23 $23 $40 $24 $24  $20 $23 $23 $23 $23 $2E $2E $24
  2764 				.by  $20 $23 $23 $23 $23 $23 $20 $20  $20 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2765 				.by  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $20 $23 $23 $23 $23 $23
  2766 				.by  $20 $20 $20 $20 $20 $23 $23 $23  $20 $20 $20 $20 $20 $23 $23 $23  $23 $23 $2E $23 $23 $23 $23 $23
  2767 				.by  $20 $24 $2A $24 $20 $23 $23 $23  $20 $20 $2B $20 $20 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00
  2768 				.by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $20 $20 $23  $23 $23 $23 $23 $20 $2E $24 $20
  2769 				.by  $20 $23 $23 $23 $40 $2E $24 $20  $20 $23 $23 $23 $20 $2E $24 $20  $23 $23 $23 $23 $23 $20 $20 $23
  2770 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
  2771 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $23 $23 $23 $23 $23 $23  $20 $20 $23 $20 $20 $23 $23 $23
  2772 				.by  $2E $24 $2A $2A $40 $23 $23 $23  $23 $20 $20 $20 $20 $23 $23 $23  $23 $20 $20 $20 $23 $23 $23 $23
  2773 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
  2774 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $23 $23 $23 $23 $20 $24  $24 $20 $23 $23 $23 $23 $20 $23
  2775 				.by  $20 $20 $23 $23 $23 $20 $2E $23  $24 $40 $23 $23 $20 $20 $20 $20  $20 $20 $23 $23 $20 $2E $2E $23
  2776 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2777 				.by  $23 $23 $20 $20 $20 $23 $23 $23  $23 $23 $24 $23 $40 $23 $23 $23  $23 $23 $20 $24 $20 $23 $23 $23
  2778 				.by  $23 $20 $20 $20 $23 $23 $23 $23  $23 $2E $2A $2E $20 $23 $23 $23  $23 $20 $20 $20 $20 $23 $23 $23
  2779 				.by  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $20 $20 $20
  2780 				.by  $23 $23 $23 $23 $23 $24 $23 $40  $20 $23 $23 $23 $23 $20 $24 $20  $20 $23 $23 $23 $23 $20 $20 $23
  2781 				.by  $23 $23 $23 $23 $20 $24 $2E $20  $20 $23 $23 $23 $2E $20 $2E $20  $20 $23 $23 $23 $23 $23 $23 $23
  2782 				.by  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $20 $20 $20 $23 $23 $23
  2783 				.by  $20 $24 $24 $24 $2E $23 $23 $23  $23 $20 $23 $40 $2E $23 $23 $23  $23 $20 $23 $20 $2E $23 $23 $23
  2784 				.by  $23 $20 $20 $23 $20 $23 $23 $23  $23 $23 $20 $20 $20 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00
  2785 				.by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $20 $20 $23  $23 $23 $23 $23 $23 $24 $20 $20
  2786 				.by  $20 $23 $23 $23 $23 $20 $2E $23  $20 $23 $23 $23 $23 $2A $2E $20  $20 $23 $23 $23 $20 $24 $20 $23
  2787 				.by  $23 $23 $23 $23 $20 $40 $20 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
  2788 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $20 $20 $20 $23 $23 $23 $23  $20 $2E $24 $2E $20 $23 $23 $23
  2789 				.by  $20 $24 $23 $24 $20 $23 $23 $23  $20 $2E $24 $2E $20 $23 $23 $23  $20 $20 $20 $20 $23 $23 $23 $23
  2790 				.by  $23 $20 $40 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
  2791 				.by  $23 $23 $23 $23 $20 $20 $20 $20  $20 $20 $23 $23 $20 $23 $23 $23  $24 $20 $23 $23 $20 $23 $20 $20
  2792 				.by  $24 $20 $23 $23 $20 $23 $2E $2A  $24 $40 $23 $23 $20 $23 $2E $23  $20 $20 $23 $23 $20 $20 $2E $23
  2793 				.by  $20 $20 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2794 				.by  $20 $20 $20 $20 $23 $23 $23 $23  $20 $23 $23 $24 $23 $23 $23 $23  $20 $23 $20 $24 $20 $20 $23 $23
  2795 				.by  $20 $40 $2E $2A $2E $20 $23 $23  $23 $20 $20 $20 $20 $20 $23 $23  $23 $20 $20 $23 $23 $23 $23 $23
  2796 				.by  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $20 $20 $20 $23
  2797 				.by  $23 $23 $23 $23 $20 $23 $20 $2E  $20 $20 $23 $23 $20 $23 $24 $2E  $20 $20 $23 $23 $20 $40 $24 $2A
  2798 				.by  $23 $20 $23 $23 $23 $23 $23 $20  $20 $20 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2799 				.by  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $24 $2E $20 $20 $23 $23
  2800 				.by  $20 $20 $24 $2E $20 $20 $23 $23  $23 $23 $20 $20 $23 $23 $23 $23  $20 $20 $24 $2E $20 $20 $23 $23
  2801 				.by  $40 $20 $24 $2E $20 $20 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00
  2802 				.by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $20 $20 $20  $20 $23 $23 $23 $23 $2E $20 $2E
  2803 				.by  $2E $23 $23 $23 $23 $23 $24 $20  $40 $20 $23 $23 $20 $24 $20 $20  $24 $20 $23 $23 $20 $20 $20 $23
  2804 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
  2805 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $20 $20 $20 $23 $23  $23 $23 $20 $2E $23 $20 $23 $23
  2806 				.by  $20 $20 $24 $2A $24 $40 $23 $23  $20 $20 $20 $2E $23 $20 $23 $23  $23 $23 $20 $23 $20 $20 $23 $23
  2807 				.by  $23 $23 $20 $20 $20 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
  2808 				.by  $23 $23 $23 $23 $23 $23 $23 $20  $20 $20 $23 $23 $23 $20 $20 $20  $20 $20 $23 $23 $20 $2A $2A $24
  2809 				.by  $20 $23 $23 $23 $20 $20 $2A $20  $2E $23 $23 $23 $23 $23 $20 $23  $40 $23 $23 $23 $23 $23 $20 $20
  2810 				.by  $20 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2811 				.by  $20 $2E $20 $2E $20 $23 $23 $23  $2E $24 $24 $24 $2E $23 $23 $23  $20 $24 $40 $24 $20 $23 $23 $23
  2812 				.by  $2E $24 $24 $24 $2E $23 $23 $23  $20 $2E $20 $2E $20 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2813 				.by  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $20 $20 $23 $20
  2814 				.by  $20 $20 $23 $23 $20 $20 $23 $2E  $2E $20 $23 $23 $20 $24 $24 $24  $24 $24 $23 $23 $20 $20 $23 $2E
  2815 				.by  $2E $2E $23 $23 $20 $20 $23 $20  $20 $20 $23 $23 $20 $20 $40 $20  $20 $20 $23 $23 $23 $23 $23 $23
  2816 				.by  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $20 $23 $20 $20 $23 $23
  2817 				.by  $20 $24 $2E $24 $2E $20 $23 $23  $23 $2E $20 $20 $24 $20 $23 $23  $20 $24 $20 $20 $2E $23 $23 $23
  2818 				.by  $20 $2E $24 $2E $24 $20 $23 $23  $20 $20 $23 $20 $20 $40 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00
  2819 				.by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $2E $20 $2E  $20 $23 $23 $23 $23 $20 $20 $2A
  2820 				.by  $2E $23 $23 $23 $23 $23 $24 $20  $40 $20 $23 $23 $20 $24 $20 $20  $24 $20 $23 $23 $20 $20 $20 $23
  2821 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
  2822 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $20 $20 $23 $23 $23 $23 $23  $23 $20 $20 $20 $20 $23 $23 $23
  2823 				.by  $20 $20 $2A $20 $2E $20 $23 $23  $20 $2A $24 $2A $24 $20 $23 $23  $23 $20 $2E $24 $2E $20 $23 $23
  2824 				.by  $23 $40 $20 $20 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
  2825 				.by  $23 $23 $23 $23 $23 $23 $23 $20  $20 $23 $23 $23 $23 $20 $20 $20  $20 $20 $23 $23 $23 $2A $20 $20
  2826 				.by  $23 $20 $23 $23 $20 $2A $24 $2A  $2E $20 $23 $23 $20 $20 $40 $20  $20 $23 $23 $23 $23 $23 $23 $23
  2827 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2828 				.by  $20 $20 $23 $23 $23 $23 $23 $23  $20 $20 $23 $23 $23 $23 $23 $23  $20 $20 $23 $23 $23 $23 $23 $23
  2829 				.by  $2E $24 $24 $20 $24 $40 $23 $23  $20 $20 $2E $20 $2E $20 $23 $23  $20 $20 $23 $23 $23 $23 $23 $23
  2830 				.by  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2831 				.by  $23 $23 $23 $23 $23 $23 $20 $20  $23 $23 $23 $23 $20 $24 $2E $40  $23 $23 $23 $23 $20 $20 $2A $20
  2832 				.by  $20 $23 $23 $23 $20 $20 $2A $20  $20 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2833 				.by  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $20 $20 $20 $23 $23 $23
  2834 				.by  $20 $2E $24 $20 $20 $23 $23 $23  $23 $2E $24 $23 $23 $23 $23 $23  $20 $20 $40 $20 $20 $23 $23 $23
  2835 				.by  $20 $2E $24 $23 $20 $23 $23 $23  $20 $20 $20 $20 $20 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00
  2836 				.by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $20 $20 $23 $20  $20 $23 $23 $23 $20 $2A $23 $24
  2837 				.by  $2E $23 $23 $23 $20 $2A $20 $24  $2E $20 $23 $23 $20 $40 $20 $20  $20 $20 $23 $23 $20 $20 $20 $23
  2838 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
  2839 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $23 $23 $23 $23 $23 $23  $2E $2E $2E $20 $20 $23 $23 $23
  2840 				.by  $2E $23 $23 $20 $20 $23 $23 $23  $20 $20 $24 $20 $24 $20 $23 $23  $23 $23 $24 $20 $24 $20 $23 $23
  2841 				.by  $23 $23 $40 $20 $20 $20 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
  2842 				.by  $23 $23 $23 $23 $23 $20 $20 $23  $23 $23 $23 $23 $23 $20 $2A $20  $20 $23 $23 $23 $23 $20 $2A $23
  2843 				.by  $40 $23 $23 $23 $23 $20 $2A $20  $20 $23 $23 $23 $20 $20 $2E $24  $23 $23 $23 $23 $20 $20 $20 $20
  2844 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2845 				.by  $20 $20 $20 $20 $40 $20 $23 $23  $20 $24 $20 $20 $24 $20 $23 $23  $23 $20 $23 $23 $20 $23 $23 $23
  2846 				.by  $20 $24 $23 $20 $24 $23 $23 $23  $20 $20 $2E $2E $20 $23 $23 $23  $23 $20 $2E $2E $20 $23 $23 $23
  2847 				.by  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $20 $40 $23 $23
  2848 				.by  $23 $23 $23 $23 $20 $20 $20 $20  $20 $23 $23 $23 $20 $2E $23 $2E  $20 $20 $23 $23 $23 $24 $24 $24
  2849 				.by  $24 $20 $23 $23 $20 $2E $20 $2E  $23 $23 $23 $23 $20 $20 $20 $20  $23 $23 $23 $23 $23 $23 $23 $23
  2850 				.by  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $20 $23 $23 $23 $23 $23
  2851 				.by  $20 $2E $24 $2E $20 $23 $23 $23  $20 $24 $2A $20 $20 $23 $23 $23  $23 $20 $20 $2A $24 $20 $23 $23
  2852 				.by  $23 $20 $2E $24 $2E $20 $23 $23  $23 $23 $23 $20 $20 $40 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00
  2853 				.by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $20  $20 $23 $23 $23 $23 $23 $20 $20
  2854 				.by  $20 $23 $23 $23 $20 $20 $2E $2A  $24 $20 $23 $23 $20 $20 $2A $2E  $24 $40 $23 $23 $23 $20 $20 $20
  2855 				.by  $23 $23 $23 $23 $23 $20 $20 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
  2856 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $20 $20 $23 $23 $23  $23 $23 $20 $20 $20 $23 $23 $23
  2857 				.by  $20 $20 $2E $2A $24 $20 $23 $23  $20 $20 $2A $2E $24 $40 $23 $23  $23 $20 $20 $20 $23 $23 $23 $23
  2858 				.by  $23 $23 $20 $20 $23 $20 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
  2859 				.by  $23 $23 $23 $23 $20 $20 $20 $20  $20 $20 $23 $23 $20 $23 $24 $2E  $40 $20 $23 $23 $20 $20 $24 $2E
  2860 				.by  $23 $23 $23 $23 $20 $23 $24 $2E  $23 $23 $23 $23 $20 $20 $20 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2861 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2862 				.by  $20 $20 $20 $23 $23 $23 $23 $23  $20 $20 $24 $2E $20 $20 $23 $23  $23 $20 $24 $2E $20 $20 $23 $23
  2863 				.by  $23 $23 $24 $2E $23 $23 $23 $23  $23 $23 $40 $20 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2864 				.by  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $20 $20
  2865 				.by  $23 $23 $23 $23 $23 $23 $20 $20  $23 $23 $23 $23 $23 $23 $24 $2E  $23 $23 $23 $23 $20 $20 $24 $2E
  2866 				.by  $23 $23 $23 $23 $20 $23 $24 $2E  $20 $23 $23 $23 $20 $20 $20 $40  $20 $23 $23 $23 $23 $23 $23 $23
  2867 				.by  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $20 $23 $23 $23 $23 $23
  2868 				.by  $20 $23 $24 $2E $20 $20 $23 $23  $20 $20 $2E $24 $23 $40 $23 $23  $23 $23 $24 $2E $20 $20 $23 $23
  2869 				.by  $23 $23 $20 $20 $23 $23 $23 $23  $23 $23 $20 $20 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00
  2870 				.by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $20 $20  $20 $20 $23 $23 $20 $20 $24 $2E
  2871 				.by  $23 $20 $23 $23 $40 $23 $2E $24  $20 $20 $23 $23 $20 $23 $24 $2E  $23 $23 $23 $23 $20 $20 $20 $20
  2872 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
  2873 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $20 $20 $20 $23 $23  $20 $20 $24 $2E $23 $20 $23 $23
  2874 				.by  $40 $23 $2E $24 $20 $20 $23 $23  $20 $23 $24 $2E $23 $23 $23 $23  $20 $23 $20 $20 $23 $23 $23 $23
  2875 				.by  $20 $20 $20 $20 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
  2876 				.by  $23 $23 $23 $23 $23 $23 $20 $2E  $20 $23 $23 $23 $23 $23 $20 $2A  $20 $23 $23 $23 $23 $23 $20 $2A
  2877 				.by  $20 $23 $23 $23 $23 $20 $20 $2A  $20 $23 $23 $23 $23 $20 $40 $24  $20 $23 $23 $23 $23 $20 $20 $23
  2878 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2879 				.by  $20 $20 $40 $23 $23 $23 $23 $23  $20 $23 $24 $24 $20 $20 $23 $23  $20 $20 $24 $2E $23 $20 $23 $23
  2880 				.by  $23 $23 $2E $2E $20 $20 $23 $23  $23 $23 $23 $20 $20 $20 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2881 				.by  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $20
  2882 				.by  $40 $23 $23 $23 $20 $20 $24 $24  $20 $23 $23 $23 $20 $23 $24 $2E  $20 $20 $23 $23 $20 $20 $2E $2E
  2883 				.by  $23 $20 $23 $23 $23 $23 $23 $20  $20 $20 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2884 				.by  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $20 $20 $23 $23 $23
  2885 				.by  $23 $23 $20 $20 $20 $23 $23 $23  $20 $20 $24 $20 $20 $23 $23 $23  $20 $2E $2A $2E $23 $23 $23 $23
  2886 				.by  $23 $20 $24 $20 $23 $23 $23 $23  $23 $23 $40 $20 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00
  2887 				.by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $20  $20 $23 $23 $23 $23 $23 $23 $24
  2888 				.by  $20 $23 $23 $23 $23 $20 $2E $2A  $2E $23 $23 $23 $23 $20 $23 $24  $20 $23 $23 $23 $23 $20 $20 $40
  2889 				.by  $20 $23 $23 $23 $23 $20 $20 $20  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
  2890 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $20 $20 $20 $23 $23 $23 $23 $23  $20 $20 $24 $20 $23 $23 $23 $23
  2891 				.by  $23 $24 $2A $2E $20 $23 $23 $23  $23 $20 $2E $40 $20 $20 $23 $23  $23 $20 $20 $23 $20 $20 $23 $23
  2892 				.by  $23 $23 $23 $23 $20 $20 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
  2893 				.by  $23 $23 $23 $23 $20 $20 $20 $23  $23 $23 $23 $23 $20 $23 $40 $24  $20 $20 $23 $23 $20 $20 $24 $2A
  2894 				.by  $2E $20 $23 $23 $23 $23 $23 $2E  $20 $23 $23 $23 $23 $20 $20 $20  $20 $23 $23 $23 $23 $20 $20 $20
  2895 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2896 				.by  $23 $23 $20 $20 $20 $23 $23 $23  $23 $23 $20 $20 $20 $23 $23 $23  $20 $20 $2A $20 $23 $23 $23 $23
  2897 				.by  $20 $2E $40 $24 $23 $23 $23 $23  $20 $20 $2A $20 $23 $23 $23 $23  $23 $20 $20 $23 $23 $23 $23 $23
  2898 				.by  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $20 $20 $23
  2899 				.by  $23 $23 $23 $23 $23 $20 $2A $20  $23 $23 $23 $23 $20 $2E $40 $24  $20 $23 $23 $23 $20 $20 $2A $20
  2900 				.by  $20 $23 $23 $23 $20 $20 $23 $20  $20 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2901 				.by  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $20 $20 $20 $23 $23 $23
  2902 				.by  $23 $20 $2A $20 $20 $23 $23 $23  $20 $2E $40 $24 $23 $23 $23 $23  $20 $20 $2A $20 $20 $23 $23 $23
  2903 				.by  $23 $23 $20 $20 $20 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00
  2904 				.by  $42 $08 $08 $23 $23 $23 $23 $23  $23 $23 $23 $23 $23 $23 $20 $20  $23 $23 $23 $23 $23 $23 $20 $20
  2905 				.by  $23 $23 $23 $23 $23 $20 $24 $2A  $20 $20 $23 $23 $20 $20 $2A $2E  $20 $40 $23 $23 $20 $20 $20 $23
  2906 				.by  $23 $23 $23 $23 $20 $20 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23
  2907 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $40 $20 $23 $23 $23 $23  $23 $23 $20 $20 $23 $23 $23 $23
  2908 				.by  $23 $23 $24 $2A $20 $23 $23 $23  $20 $20 $2A $2E $20 $20 $23 $23  $20 $20 $20 $20 $20 $20 $23 $23
  2909 				.by  $23 $23 $23 $23 $20 $20 $23 $23  $23 $23 $23 $23 $23 $23 $23 $00  $42 $08 $08 $23 $23 $23 $23 $23
  2910 				.by  $23 $23 $23 $23 $23 $23 $23 $20  $23 $23 $23 $23 $40 $20 $23 $23  $23 $20 $23 $23 $20 $24 $24 $20
  2911 				.by  $23 $23 $23 $23 $20 $24 $20 $2E  $20 $20 $23 $23 $23 $20 $2E $2E  $20 $20 $23 $23 $23 $23 $23 $23
  2912 				.by  $23 $23 $23 $23 $23 $23 $23 $23  $23 $23 $23 $00 $42 $08 $08 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2913 				.by  $20 $20 $20 $20 $23 $23 $23 $23  $20 $20 $20 $20 $23 $23 $23 $23  $23 $20 $24 $24 $23 $23 $23 $23
  2914 				.by  $23 $20 $24 $40 $2E $23 $23 $23  $23 $23 $20 $2E $2E $23 $23 $23  $23 $23 $23 $23 $23 $23 $23 $23
  2915 				.by  $23 $23 $23 $23 $23 $23 $23 $00  $03 $02 $02 $01 $01 $02 $02 $03  $03 $03 $03 $03 $03 $03 $02 $03
  2916 				.by  $28 $14 $14 $28 $50 $50 $A0 $A0  $40 $50 $50 $50 $28 $28 $A0 $A0  $18 $18 $0C $18 $30 $30 $60 $60
  2917 				.by  $C0 $C0 $C0 $C0 $18 $0C $C0 $C0
  2918 				.endm
  2919
  2920 					end
